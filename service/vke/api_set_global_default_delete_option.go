// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opSetGlobalDefaultDeleteOptionCommon = "SetGlobalDefaultDeleteOption"

// SetGlobalDefaultDeleteOptionCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the SetGlobalDefaultDeleteOptionCommon operation. The "output" return
// value will be populated with the SetGlobalDefaultDeleteOptionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetGlobalDefaultDeleteOptionCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetGlobalDefaultDeleteOptionCommon Send returns without error.
//
// See SetGlobalDefaultDeleteOptionCommon for more information on using the SetGlobalDefaultDeleteOptionCommon
// API call, and error handling.
//
//    // Example sending a request using the SetGlobalDefaultDeleteOptionCommonRequest method.
//    req, resp := client.SetGlobalDefaultDeleteOptionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) SetGlobalDefaultDeleteOptionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSetGlobalDefaultDeleteOptionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetGlobalDefaultDeleteOptionCommon API operation for VKE.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VKE's
// API operation SetGlobalDefaultDeleteOptionCommon for usage and error information.
func (c *VKE) SetGlobalDefaultDeleteOptionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SetGlobalDefaultDeleteOptionCommonRequest(input)
	return out, req.Send()
}

// SetGlobalDefaultDeleteOptionCommonWithContext is the same as SetGlobalDefaultDeleteOptionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SetGlobalDefaultDeleteOptionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) SetGlobalDefaultDeleteOptionCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SetGlobalDefaultDeleteOptionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSetGlobalDefaultDeleteOption = "SetGlobalDefaultDeleteOption"

// SetGlobalDefaultDeleteOptionRequest generates a "byteplus/request.Request" representing the
// client's request for the SetGlobalDefaultDeleteOption operation. The "output" return
// value will be populated with the SetGlobalDefaultDeleteOptionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetGlobalDefaultDeleteOptionCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetGlobalDefaultDeleteOptionCommon Send returns without error.
//
// See SetGlobalDefaultDeleteOption for more information on using the SetGlobalDefaultDeleteOption
// API call, and error handling.
//
//    // Example sending a request using the SetGlobalDefaultDeleteOptionRequest method.
//    req, resp := client.SetGlobalDefaultDeleteOptionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) SetGlobalDefaultDeleteOptionRequest(input *SetGlobalDefaultDeleteOptionInput) (req *request.Request, output *SetGlobalDefaultDeleteOptionOutput) {
	op := &request.Operation{
		Name:       opSetGlobalDefaultDeleteOption,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetGlobalDefaultDeleteOptionInput{}
	}

	output = &SetGlobalDefaultDeleteOptionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetGlobalDefaultDeleteOption API operation for VKE.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VKE's
// API operation SetGlobalDefaultDeleteOption for usage and error information.
func (c *VKE) SetGlobalDefaultDeleteOption(input *SetGlobalDefaultDeleteOptionInput) (*SetGlobalDefaultDeleteOptionOutput, error) {
	req, out := c.SetGlobalDefaultDeleteOptionRequest(input)
	return out, req.Send()
}

// SetGlobalDefaultDeleteOptionWithContext is the same as SetGlobalDefaultDeleteOption with the addition of
// the ability to pass a context and additional request options.
//
// See SetGlobalDefaultDeleteOption for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) SetGlobalDefaultDeleteOptionWithContext(ctx byteplus.Context, input *SetGlobalDefaultDeleteOptionInput, opts ...request.Option) (*SetGlobalDefaultDeleteOptionOutput, error) {
	req, out := c.SetGlobalDefaultDeleteOptionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SetGlobalDefaultDeleteOptionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// DefaultDeleteAllResources is a required field
	DefaultDeleteAllResources *bool `type:"boolean" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s SetGlobalDefaultDeleteOptionInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s SetGlobalDefaultDeleteOptionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SetGlobalDefaultDeleteOptionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SetGlobalDefaultDeleteOptionInput"}
	if s.DefaultDeleteAllResources == nil {
		invalidParams.Add(request.NewErrParamRequired("DefaultDeleteAllResources"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDefaultDeleteAllResources sets the DefaultDeleteAllResources field's value.
func (s *SetGlobalDefaultDeleteOptionInput) SetDefaultDeleteAllResources(v bool) *SetGlobalDefaultDeleteOptionInput {
	s.DefaultDeleteAllResources = &v
	return s
}

type SetGlobalDefaultDeleteOptionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s SetGlobalDefaultDeleteOptionOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s SetGlobalDefaultDeleteOptionOutput) GoString() string {
	return s.String()
}
