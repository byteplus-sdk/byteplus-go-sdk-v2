// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListSupportedResourceTypesCommon = "ListSupportedResourceTypes"

// ListSupportedResourceTypesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListSupportedResourceTypesCommon operation. The "output" return
// value will be populated with the ListSupportedResourceTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSupportedResourceTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSupportedResourceTypesCommon Send returns without error.
//
// See ListSupportedResourceTypesCommon for more information on using the ListSupportedResourceTypesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSupportedResourceTypesCommonRequest method.
//    req, resp := client.ListSupportedResourceTypesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) ListSupportedResourceTypesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSupportedResourceTypesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSupportedResourceTypesCommon API operation for VKE.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VKE's
// API operation ListSupportedResourceTypesCommon for usage and error information.
func (c *VKE) ListSupportedResourceTypesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSupportedResourceTypesCommonRequest(input)
	return out, req.Send()
}

// ListSupportedResourceTypesCommonWithContext is the same as ListSupportedResourceTypesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSupportedResourceTypesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListSupportedResourceTypesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSupportedResourceTypesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSupportedResourceTypes = "ListSupportedResourceTypes"

// ListSupportedResourceTypesRequest generates a "byteplus/request.Request" representing the
// client's request for the ListSupportedResourceTypes operation. The "output" return
// value will be populated with the ListSupportedResourceTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSupportedResourceTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSupportedResourceTypesCommon Send returns without error.
//
// See ListSupportedResourceTypes for more information on using the ListSupportedResourceTypes
// API call, and error handling.
//
//    // Example sending a request using the ListSupportedResourceTypesRequest method.
//    req, resp := client.ListSupportedResourceTypesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) ListSupportedResourceTypesRequest(input *ListSupportedResourceTypesInput) (req *request.Request, output *ListSupportedResourceTypesOutput) {
	op := &request.Operation{
		Name:       opListSupportedResourceTypes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSupportedResourceTypesInput{}
	}

	output = &ListSupportedResourceTypesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSupportedResourceTypes API operation for VKE.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VKE's
// API operation ListSupportedResourceTypes for usage and error information.
func (c *VKE) ListSupportedResourceTypes(input *ListSupportedResourceTypesInput) (*ListSupportedResourceTypesOutput, error) {
	req, out := c.ListSupportedResourceTypesRequest(input)
	return out, req.Send()
}

// ListSupportedResourceTypesWithContext is the same as ListSupportedResourceTypes with the addition of
// the ability to pass a context and additional request options.
//
// See ListSupportedResourceTypes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListSupportedResourceTypesWithContext(ctx byteplus.Context, input *ListSupportedResourceTypesInput, opts ...request.Option) (*ListSupportedResourceTypesOutput, error) {
	req, out := c.ListSupportedResourceTypesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListSupportedResourceTypesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ResourceTypes []*string `type:"list" json:",omitempty"`

	ZoneIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListSupportedResourceTypesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListSupportedResourceTypesInput) GoString() string {
	return s.String()
}

// SetResourceTypes sets the ResourceTypes field's value.
func (s *FilterForListSupportedResourceTypesInput) SetResourceTypes(v []*string) *FilterForListSupportedResourceTypesInput {
	s.ResourceTypes = v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *FilterForListSupportedResourceTypesInput) SetZoneIds(v []*string) *FilterForListSupportedResourceTypesInput {
	s.ZoneIds = v
	return s
}

type ItemForListSupportedResourceTypesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ResourceScope *string `type:"string" json:",omitempty"`

	ResourceSpecifications []*string `type:"list" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListSupportedResourceTypesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListSupportedResourceTypesOutput) GoString() string {
	return s.String()
}

// SetResourceScope sets the ResourceScope field's value.
func (s *ItemForListSupportedResourceTypesOutput) SetResourceScope(v string) *ItemForListSupportedResourceTypesOutput {
	s.ResourceScope = &v
	return s
}

// SetResourceSpecifications sets the ResourceSpecifications field's value.
func (s *ItemForListSupportedResourceTypesOutput) SetResourceSpecifications(v []*string) *ItemForListSupportedResourceTypesOutput {
	s.ResourceSpecifications = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ItemForListSupportedResourceTypesOutput) SetResourceType(v string) *ItemForListSupportedResourceTypesOutput {
	s.ResourceType = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ItemForListSupportedResourceTypesOutput) SetZoneId(v string) *ItemForListSupportedResourceTypesOutput {
	s.ZoneId = &v
	return s
}

type ListSupportedResourceTypesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListSupportedResourceTypesInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListSupportedResourceTypesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSupportedResourceTypesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListSupportedResourceTypesInput) SetFilter(v *FilterForListSupportedResourceTypesInput) *ListSupportedResourceTypesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListSupportedResourceTypesInput) SetPageNumber(v int32) *ListSupportedResourceTypesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListSupportedResourceTypesInput) SetPageSize(v int32) *ListSupportedResourceTypesInput {
	s.PageSize = &v
	return s
}

type ListSupportedResourceTypesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListSupportedResourceTypesOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListSupportedResourceTypesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSupportedResourceTypesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListSupportedResourceTypesOutput) SetItems(v []*ItemForListSupportedResourceTypesOutput) *ListSupportedResourceTypesOutput {
	s.Items = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListSupportedResourceTypesOutput) SetPageNumber(v int32) *ListSupportedResourceTypesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListSupportedResourceTypesOutput) SetPageSize(v int32) *ListSupportedResourceTypesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListSupportedResourceTypesOutput) SetTotalCount(v int32) *ListSupportedResourceTypesOutput {
	s.TotalCount = &v
	return s
}

const (
	// EnumOfResourceTypeListForListSupportedResourceTypesInputEcs is a EnumOfResourceTypeListForListSupportedResourceTypesInput enum value
	EnumOfResourceTypeListForListSupportedResourceTypesInputEcs = "Ecs"

	// EnumOfResourceTypeListForListSupportedResourceTypesInputZone is a EnumOfResourceTypeListForListSupportedResourceTypesInput enum value
	EnumOfResourceTypeListForListSupportedResourceTypesInputZone = "Zone"
)
