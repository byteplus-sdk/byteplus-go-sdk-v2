// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package autoscaling

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeNotificationConfigurationsCommon = "DescribeNotificationConfigurations"

// DescribeNotificationConfigurationsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeNotificationConfigurationsCommon operation. The "output" return
// value will be populated with the DescribeNotificationConfigurationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNotificationConfigurationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNotificationConfigurationsCommon Send returns without error.
//
// See DescribeNotificationConfigurationsCommon for more information on using the DescribeNotificationConfigurationsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeNotificationConfigurationsCommonRequest method.
//    req, resp := client.DescribeNotificationConfigurationsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeNotificationConfigurationsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeNotificationConfigurationsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNotificationConfigurationsCommon API operation for AUTO_SCALING.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for AUTO_SCALING's
// API operation DescribeNotificationConfigurationsCommon for usage and error information.
func (c *AUTOSCALING) DescribeNotificationConfigurationsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeNotificationConfigurationsCommonRequest(input)
	return out, req.Send()
}

// DescribeNotificationConfigurationsCommonWithContext is the same as DescribeNotificationConfigurationsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNotificationConfigurationsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeNotificationConfigurationsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeNotificationConfigurationsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeNotificationConfigurations = "DescribeNotificationConfigurations"

// DescribeNotificationConfigurationsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeNotificationConfigurations operation. The "output" return
// value will be populated with the DescribeNotificationConfigurationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNotificationConfigurationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNotificationConfigurationsCommon Send returns without error.
//
// See DescribeNotificationConfigurations for more information on using the DescribeNotificationConfigurations
// API call, and error handling.
//
//    // Example sending a request using the DescribeNotificationConfigurationsRequest method.
//    req, resp := client.DescribeNotificationConfigurationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeNotificationConfigurationsRequest(input *DescribeNotificationConfigurationsInput) (req *request.Request, output *DescribeNotificationConfigurationsOutput) {
	op := &request.Operation{
		Name:       opDescribeNotificationConfigurations,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNotificationConfigurationsInput{}
	}

	output = &DescribeNotificationConfigurationsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNotificationConfigurations API operation for AUTO_SCALING.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for AUTO_SCALING's
// API operation DescribeNotificationConfigurations for usage and error information.
func (c *AUTOSCALING) DescribeNotificationConfigurations(input *DescribeNotificationConfigurationsInput) (*DescribeNotificationConfigurationsOutput, error) {
	req, out := c.DescribeNotificationConfigurationsRequest(input)
	return out, req.Send()
}

// DescribeNotificationConfigurationsWithContext is the same as DescribeNotificationConfigurations with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNotificationConfigurations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeNotificationConfigurationsWithContext(ctx byteplus.Context, input *DescribeNotificationConfigurationsInput, opts ...request.Option) (*DescribeNotificationConfigurationsOutput, error) {
	req, out := c.DescribeNotificationConfigurationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeNotificationConfigurationsInput struct {
	_ struct{} `type:"structure"`

	ScalingGroupIds []*string `type:"list"`
}

// String returns the string representation
func (s DescribeNotificationConfigurationsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNotificationConfigurationsInput) GoString() string {
	return s.String()
}

// SetScalingGroupIds sets the ScalingGroupIds field's value.
func (s *DescribeNotificationConfigurationsInput) SetScalingGroupIds(v []*string) *DescribeNotificationConfigurationsInput {
	s.ScalingGroupIds = v
	return s
}

type DescribeNotificationConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NotificationConfigurations []*NotificationConfigurationForDescribeNotificationConfigurationsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeNotificationConfigurationsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNotificationConfigurationsOutput) GoString() string {
	return s.String()
}

// SetNotificationConfigurations sets the NotificationConfigurations field's value.
func (s *DescribeNotificationConfigurationsOutput) SetNotificationConfigurations(v []*NotificationConfigurationForDescribeNotificationConfigurationsOutput) *DescribeNotificationConfigurationsOutput {
	s.NotificationConfigurations = v
	return s
}

type NotificationConfigurationForDescribeNotificationConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	CreatedAt *string `type:"string"`

	EventTypes []*string `type:"list"`

	NotificationType *string `type:"string"`

	ScalingGroupId *string `type:"string"`

	UpdatedAt *string `type:"string"`
}

// String returns the string representation
func (s NotificationConfigurationForDescribeNotificationConfigurationsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s NotificationConfigurationForDescribeNotificationConfigurationsOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *NotificationConfigurationForDescribeNotificationConfigurationsOutput) SetCreatedAt(v string) *NotificationConfigurationForDescribeNotificationConfigurationsOutput {
	s.CreatedAt = &v
	return s
}

// SetEventTypes sets the EventTypes field's value.
func (s *NotificationConfigurationForDescribeNotificationConfigurationsOutput) SetEventTypes(v []*string) *NotificationConfigurationForDescribeNotificationConfigurationsOutput {
	s.EventTypes = v
	return s
}

// SetNotificationType sets the NotificationType field's value.
func (s *NotificationConfigurationForDescribeNotificationConfigurationsOutput) SetNotificationType(v string) *NotificationConfigurationForDescribeNotificationConfigurationsOutput {
	s.NotificationType = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *NotificationConfigurationForDescribeNotificationConfigurationsOutput) SetScalingGroupId(v string) *NotificationConfigurationForDescribeNotificationConfigurationsOutput {
	s.ScalingGroupId = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *NotificationConfigurationForDescribeNotificationConfigurationsOutput) SetUpdatedAt(v string) *NotificationConfigurationForDescribeNotificationConfigurationsOutput {
	s.UpdatedAt = &v
	return s
}
