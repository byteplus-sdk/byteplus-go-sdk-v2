// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeDBInstanceEngineMinorVersionsCommon = "DescribeDBInstanceEngineMinorVersions"

// DescribeDBInstanceEngineMinorVersionsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDBInstanceEngineMinorVersionsCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceEngineMinorVersionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceEngineMinorVersionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceEngineMinorVersionsCommon Send returns without error.
//
// See DescribeDBInstanceEngineMinorVersionsCommon for more information on using the DescribeDBInstanceEngineMinorVersionsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceEngineMinorVersionsCommonRequest method.
//    req, resp := client.DescribeDBInstanceEngineMinorVersionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceEngineMinorVersionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceEngineMinorVersionsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceEngineMinorVersionsCommon API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceEngineMinorVersionsCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceEngineMinorVersionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceEngineMinorVersionsCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceEngineMinorVersionsCommonWithContext is the same as DescribeDBInstanceEngineMinorVersionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceEngineMinorVersionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceEngineMinorVersionsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceEngineMinorVersionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceEngineMinorVersions = "DescribeDBInstanceEngineMinorVersions"

// DescribeDBInstanceEngineMinorVersionsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDBInstanceEngineMinorVersions operation. The "output" return
// value will be populated with the DescribeDBInstanceEngineMinorVersionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceEngineMinorVersionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceEngineMinorVersionsCommon Send returns without error.
//
// See DescribeDBInstanceEngineMinorVersions for more information on using the DescribeDBInstanceEngineMinorVersions
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceEngineMinorVersionsRequest method.
//    req, resp := client.DescribeDBInstanceEngineMinorVersionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceEngineMinorVersionsRequest(input *DescribeDBInstanceEngineMinorVersionsInput) (req *request.Request, output *DescribeDBInstanceEngineMinorVersionsOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceEngineMinorVersions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceEngineMinorVersionsInput{}
	}

	output = &DescribeDBInstanceEngineMinorVersionsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceEngineMinorVersions API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceEngineMinorVersions for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceEngineMinorVersions(input *DescribeDBInstanceEngineMinorVersionsInput) (*DescribeDBInstanceEngineMinorVersionsOutput, error) {
	req, out := c.DescribeDBInstanceEngineMinorVersionsRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceEngineMinorVersionsWithContext is the same as DescribeDBInstanceEngineMinorVersions with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceEngineMinorVersions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceEngineMinorVersionsWithContext(ctx byteplus.Context, input *DescribeDBInstanceEngineMinorVersionsInput, opts ...request.Option) (*DescribeDBInstanceEngineMinorVersionsOutput, error) {
	req, out := c.DescribeDBInstanceEngineMinorVersionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDBInstanceEngineMinorVersionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceEngineMinorVersionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceEngineMinorVersionsInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceEngineMinorVersionsInput) SetInstanceId(v string) *DescribeDBInstanceEngineMinorVersionsInput {
	s.InstanceId = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *DescribeDBInstanceEngineMinorVersionsInput) SetInstanceIds(v []*string) *DescribeDBInstanceEngineMinorVersionsInput {
	s.InstanceIds = v
	return s
}

type DescribeDBInstanceEngineMinorVersionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	KernelVersions []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceEngineMinorVersionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceEngineMinorVersionsOutput) GoString() string {
	return s.String()
}

// SetKernelVersions sets the KernelVersions field's value.
func (s *DescribeDBInstanceEngineMinorVersionsOutput) SetKernelVersions(v []*string) *DescribeDBInstanceEngineMinorVersionsOutput {
	s.KernelVersions = v
	return s
}
