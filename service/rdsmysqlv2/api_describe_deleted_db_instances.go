// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeDeletedDBInstancesCommon = "DescribeDeletedDBInstances"

// DescribeDeletedDBInstancesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDeletedDBInstancesCommon operation. The "output" return
// value will be populated with the DescribeDeletedDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDeletedDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDeletedDBInstancesCommon Send returns without error.
//
// See DescribeDeletedDBInstancesCommon for more information on using the DescribeDeletedDBInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDeletedDBInstancesCommonRequest method.
//    req, resp := client.DescribeDeletedDBInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDeletedDBInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDeletedDBInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDeletedDBInstancesCommon API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDeletedDBInstancesCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDeletedDBInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDeletedDBInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeDeletedDBInstancesCommonWithContext is the same as DescribeDeletedDBInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDeletedDBInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDeletedDBInstancesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDeletedDBInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDeletedDBInstances = "DescribeDeletedDBInstances"

// DescribeDeletedDBInstancesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDeletedDBInstances operation. The "output" return
// value will be populated with the DescribeDeletedDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDeletedDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDeletedDBInstancesCommon Send returns without error.
//
// See DescribeDeletedDBInstances for more information on using the DescribeDeletedDBInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeDeletedDBInstancesRequest method.
//    req, resp := client.DescribeDeletedDBInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDeletedDBInstancesRequest(input *DescribeDeletedDBInstancesInput) (req *request.Request, output *DescribeDeletedDBInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeDeletedDBInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDeletedDBInstancesInput{}
	}

	output = &DescribeDeletedDBInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDeletedDBInstances API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDeletedDBInstances for usage and error information.
func (c *RDSMYSQLV2) DescribeDeletedDBInstances(input *DescribeDeletedDBInstancesInput) (*DescribeDeletedDBInstancesOutput, error) {
	req, out := c.DescribeDeletedDBInstancesRequest(input)
	return out, req.Send()
}

// DescribeDeletedDBInstancesWithContext is the same as DescribeDeletedDBInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDeletedDBInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDeletedDBInstancesWithContext(ctx byteplus.Context, input *DescribeDeletedDBInstancesInput, opts ...request.Option) (*DescribeDeletedDBInstancesOutput, error) {
	req, out := c.DescribeDeletedDBInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForDescribeDeletedDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupExpirationTime *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DBEngineVersion *string `type:"string" json:",omitempty"`

	DataKeepDays *int32 `type:"int32" json:",omitempty"`

	DataKeepPolicy *string `type:"string" json:",omitempty"`

	DeletionTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceStatus *string `type:"string" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty"`

	NodeSpec *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	StorageSpace *int32 `type:"int32" json:",omitempty"`

	StorageType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForDescribeDeletedDBInstancesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForDescribeDeletedDBInstancesOutput) GoString() string {
	return s.String()
}

// SetBackupExpirationTime sets the BackupExpirationTime field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetBackupExpirationTime(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.BackupExpirationTime = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetCreateTime(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.CreateTime = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetDBEngineVersion(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDataKeepDays sets the DataKeepDays field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetDataKeepDays(v int32) *DataForDescribeDeletedDBInstancesOutput {
	s.DataKeepDays = &v
	return s
}

// SetDataKeepPolicy sets the DataKeepPolicy field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetDataKeepPolicy(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.DataKeepPolicy = &v
	return s
}

// SetDeletionTime sets the DeletionTime field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetDeletionTime(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.DeletionTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetInstanceId(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetInstanceName(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetInstanceStatus(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.InstanceStatus = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetInstanceType(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.InstanceType = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetNodeSpec(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.NodeSpec = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetProjectName(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.ProjectName = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetStorageSpace(v int32) *DataForDescribeDeletedDBInstancesOutput {
	s.StorageSpace = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *DataForDescribeDeletedDBInstancesOutput) SetStorageType(v string) *DataForDescribeDeletedDBInstancesOutput {
	s.StorageType = &v
	return s
}

type DescribeDeletedDBInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DeletionAfterTime *string `type:"string" json:",omitempty"`

	DeletionBeforeTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceStatus *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDeletedDBInstancesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDeletedDBInstancesInput) GoString() string {
	return s.String()
}

// SetDeletionAfterTime sets the DeletionAfterTime field's value.
func (s *DescribeDeletedDBInstancesInput) SetDeletionAfterTime(v string) *DescribeDeletedDBInstancesInput {
	s.DeletionAfterTime = &v
	return s
}

// SetDeletionBeforeTime sets the DeletionBeforeTime field's value.
func (s *DescribeDeletedDBInstancesInput) SetDeletionBeforeTime(v string) *DescribeDeletedDBInstancesInput {
	s.DeletionBeforeTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDeletedDBInstancesInput) SetInstanceId(v string) *DescribeDeletedDBInstancesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeDeletedDBInstancesInput) SetInstanceName(v string) *DescribeDeletedDBInstancesInput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *DescribeDeletedDBInstancesInput) SetInstanceStatus(v string) *DescribeDeletedDBInstancesInput {
	s.InstanceStatus = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDeletedDBInstancesInput) SetPageNumber(v int32) *DescribeDeletedDBInstancesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDeletedDBInstancesInput) SetPageSize(v int32) *DescribeDeletedDBInstancesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDeletedDBInstancesInput) SetProjectName(v string) *DescribeDeletedDBInstancesInput {
	s.ProjectName = &v
	return s
}

type DescribeDeletedDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Datas []*DataForDescribeDeletedDBInstancesOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDeletedDBInstancesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDeletedDBInstancesOutput) GoString() string {
	return s.String()
}

// SetDatas sets the Datas field's value.
func (s *DescribeDeletedDBInstancesOutput) SetDatas(v []*DataForDescribeDeletedDBInstancesOutput) *DescribeDeletedDBInstancesOutput {
	s.Datas = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeDeletedDBInstancesOutput) SetTotal(v int32) *DescribeDeletedDBInstancesOutput {
	s.Total = &v
	return s
}
