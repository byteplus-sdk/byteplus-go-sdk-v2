// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeDiagnosticsInfosCommon = "DescribeDiagnosticsInfos"

// DescribeDiagnosticsInfosCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDiagnosticsInfosCommon operation. The "output" return
// value will be populated with the DescribeDiagnosticsInfosCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDiagnosticsInfosCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDiagnosticsInfosCommon Send returns without error.
//
// See DescribeDiagnosticsInfosCommon for more information on using the DescribeDiagnosticsInfosCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDiagnosticsInfosCommonRequest method.
//    req, resp := client.DescribeDiagnosticsInfosCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDiagnosticsInfosCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDiagnosticsInfosCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDiagnosticsInfosCommon API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDiagnosticsInfosCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDiagnosticsInfosCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDiagnosticsInfosCommonRequest(input)
	return out, req.Send()
}

// DescribeDiagnosticsInfosCommonWithContext is the same as DescribeDiagnosticsInfosCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDiagnosticsInfosCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDiagnosticsInfosCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDiagnosticsInfosCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDiagnosticsInfos = "DescribeDiagnosticsInfos"

// DescribeDiagnosticsInfosRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDiagnosticsInfos operation. The "output" return
// value will be populated with the DescribeDiagnosticsInfosCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDiagnosticsInfosCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDiagnosticsInfosCommon Send returns without error.
//
// See DescribeDiagnosticsInfos for more information on using the DescribeDiagnosticsInfos
// API call, and error handling.
//
//    // Example sending a request using the DescribeDiagnosticsInfosRequest method.
//    req, resp := client.DescribeDiagnosticsInfosRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDiagnosticsInfosRequest(input *DescribeDiagnosticsInfosInput) (req *request.Request, output *DescribeDiagnosticsInfosOutput) {
	op := &request.Operation{
		Name:       opDescribeDiagnosticsInfos,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDiagnosticsInfosInput{}
	}

	output = &DescribeDiagnosticsInfosOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDiagnosticsInfos API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDiagnosticsInfos for usage and error information.
func (c *RDSMYSQLV2) DescribeDiagnosticsInfos(input *DescribeDiagnosticsInfosInput) (*DescribeDiagnosticsInfosOutput, error) {
	req, out := c.DescribeDiagnosticsInfosRequest(input)
	return out, req.Send()
}

// DescribeDiagnosticsInfosWithContext is the same as DescribeDiagnosticsInfos with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDiagnosticsInfos for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDiagnosticsInfosWithContext(ctx byteplus.Context, input *DescribeDiagnosticsInfosInput, opts ...request.Option) (*DescribeDiagnosticsInfosOutput, error) {
	req, out := c.DescribeDiagnosticsInfosRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDiagnosticsInfosInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DiagnosticsResult *string `type:"string" json:",omitempty"`

	DiagnosticsType *string `type:"string" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDiagnosticsInfosInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDiagnosticsInfosInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDiagnosticsInfosInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDiagnosticsInfosInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDiagnosticsResult sets the DiagnosticsResult field's value.
func (s *DescribeDiagnosticsInfosInput) SetDiagnosticsResult(v string) *DescribeDiagnosticsInfosInput {
	s.DiagnosticsResult = &v
	return s
}

// SetDiagnosticsType sets the DiagnosticsType field's value.
func (s *DescribeDiagnosticsInfosInput) SetDiagnosticsType(v string) *DescribeDiagnosticsInfosInput {
	s.DiagnosticsType = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDiagnosticsInfosInput) SetInstanceId(v string) *DescribeDiagnosticsInfosInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDiagnosticsInfosInput) SetPageNumber(v int32) *DescribeDiagnosticsInfosInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDiagnosticsInfosInput) SetPageSize(v int32) *DescribeDiagnosticsInfosInput {
	s.PageSize = &v
	return s
}

type DescribeDiagnosticsInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DiagnosticsInfos []*DiagnosticsInfoForDescribeDiagnosticsInfosOutput `type:"list" json:",omitempty"`

	DiagnosticsTaskStatus *string `type:"string" json:",omitempty"`

	LastDiagnosticsTime *string `type:"string" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDiagnosticsInfosOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDiagnosticsInfosOutput) GoString() string {
	return s.String()
}

// SetDiagnosticsInfos sets the DiagnosticsInfos field's value.
func (s *DescribeDiagnosticsInfosOutput) SetDiagnosticsInfos(v []*DiagnosticsInfoForDescribeDiagnosticsInfosOutput) *DescribeDiagnosticsInfosOutput {
	s.DiagnosticsInfos = v
	return s
}

// SetDiagnosticsTaskStatus sets the DiagnosticsTaskStatus field's value.
func (s *DescribeDiagnosticsInfosOutput) SetDiagnosticsTaskStatus(v string) *DescribeDiagnosticsInfosOutput {
	s.DiagnosticsTaskStatus = &v
	return s
}

// SetLastDiagnosticsTime sets the LastDiagnosticsTime field's value.
func (s *DescribeDiagnosticsInfosOutput) SetLastDiagnosticsTime(v string) *DescribeDiagnosticsInfosOutput {
	s.LastDiagnosticsTime = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeDiagnosticsInfosOutput) SetTotal(v int32) *DescribeDiagnosticsInfosOutput {
	s.Total = &v
	return s
}

type DiagnosticsInfoForDescribeDiagnosticsInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DiagnosticsItems []*DiagnosticsItemForDescribeDiagnosticsInfosOutput `type:"list" json:",omitempty"`

	DiagnosticsRecordId *string `type:"string" json:",omitempty"`

	DiagnosticsResult *string `type:"string" json:",omitempty"`

	EcsInfo *EcsInfoForDescribeDiagnosticsInfosOutput `type:"structure" json:",omitempty"`

	EndpointInfo *EndpointInfoForDescribeDiagnosticsInfosOutput `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	PublicAddressInfo *PublicAddressInfoForDescribeDiagnosticsInfosOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DiagnosticsInfoForDescribeDiagnosticsInfosOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DiagnosticsInfoForDescribeDiagnosticsInfosOutput) GoString() string {
	return s.String()
}

// SetDiagnosticsItems sets the DiagnosticsItems field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetDiagnosticsItems(v []*DiagnosticsItemForDescribeDiagnosticsInfosOutput) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.DiagnosticsItems = v
	return s
}

// SetDiagnosticsRecordId sets the DiagnosticsRecordId field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetDiagnosticsRecordId(v string) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.DiagnosticsRecordId = &v
	return s
}

// SetDiagnosticsResult sets the DiagnosticsResult field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetDiagnosticsResult(v string) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.DiagnosticsResult = &v
	return s
}

// SetEcsInfo sets the EcsInfo field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetEcsInfo(v *EcsInfoForDescribeDiagnosticsInfosOutput) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsInfo = v
	return s
}

// SetEndpointInfo sets the EndpointInfo field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetEndpointInfo(v *EndpointInfoForDescribeDiagnosticsInfosOutput) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.EndpointInfo = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetInstanceId(v string) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.InstanceId = &v
	return s
}

// SetPublicAddressInfo sets the PublicAddressInfo field's value.
func (s *DiagnosticsInfoForDescribeDiagnosticsInfosOutput) SetPublicAddressInfo(v *PublicAddressInfoForDescribeDiagnosticsInfosOutput) *DiagnosticsInfoForDescribeDiagnosticsInfosOutput {
	s.PublicAddressInfo = v
	return s
}

type DiagnosticsItemForDescribeDiagnosticsInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DiagnosticsItem *string `type:"string" json:",omitempty"`

	DiagnosticsResult *string `type:"string" json:",omitempty"`

	PossibleEffect *string `type:"string" json:",omitempty"`

	Suggestion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DiagnosticsItemForDescribeDiagnosticsInfosOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DiagnosticsItemForDescribeDiagnosticsInfosOutput) GoString() string {
	return s.String()
}

// SetDiagnosticsItem sets the DiagnosticsItem field's value.
func (s *DiagnosticsItemForDescribeDiagnosticsInfosOutput) SetDiagnosticsItem(v string) *DiagnosticsItemForDescribeDiagnosticsInfosOutput {
	s.DiagnosticsItem = &v
	return s
}

// SetDiagnosticsResult sets the DiagnosticsResult field's value.
func (s *DiagnosticsItemForDescribeDiagnosticsInfosOutput) SetDiagnosticsResult(v string) *DiagnosticsItemForDescribeDiagnosticsInfosOutput {
	s.DiagnosticsResult = &v
	return s
}

// SetPossibleEffect sets the PossibleEffect field's value.
func (s *DiagnosticsItemForDescribeDiagnosticsInfosOutput) SetPossibleEffect(v string) *DiagnosticsItemForDescribeDiagnosticsInfosOutput {
	s.PossibleEffect = &v
	return s
}

// SetSuggestion sets the Suggestion field's value.
func (s *DiagnosticsItemForDescribeDiagnosticsInfosOutput) SetSuggestion(v string) *DiagnosticsItemForDescribeDiagnosticsInfosOutput {
	s.Suggestion = &v
	return s
}

type EcsInfoForDescribeDiagnosticsInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EcsInstanceId *string `type:"string" json:",omitempty"`

	EcsInstanceName *string `type:"string" json:",omitempty"`

	EcsPrivateIpv4Address *string `type:"string" json:",omitempty"`

	EcsPrivateIpv6Address []*string `type:"list" json:",omitempty"`

	EcsVpcId *string `type:"string" json:",omitempty"`

	EcsVpcName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EcsInfoForDescribeDiagnosticsInfosOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s EcsInfoForDescribeDiagnosticsInfosOutput) GoString() string {
	return s.String()
}

// SetEcsInstanceId sets the EcsInstanceId field's value.
func (s *EcsInfoForDescribeDiagnosticsInfosOutput) SetEcsInstanceId(v string) *EcsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsInstanceId = &v
	return s
}

// SetEcsInstanceName sets the EcsInstanceName field's value.
func (s *EcsInfoForDescribeDiagnosticsInfosOutput) SetEcsInstanceName(v string) *EcsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsInstanceName = &v
	return s
}

// SetEcsPrivateIpv4Address sets the EcsPrivateIpv4Address field's value.
func (s *EcsInfoForDescribeDiagnosticsInfosOutput) SetEcsPrivateIpv4Address(v string) *EcsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsPrivateIpv4Address = &v
	return s
}

// SetEcsPrivateIpv6Address sets the EcsPrivateIpv6Address field's value.
func (s *EcsInfoForDescribeDiagnosticsInfosOutput) SetEcsPrivateIpv6Address(v []*string) *EcsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsPrivateIpv6Address = v
	return s
}

// SetEcsVpcId sets the EcsVpcId field's value.
func (s *EcsInfoForDescribeDiagnosticsInfosOutput) SetEcsVpcId(v string) *EcsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsVpcId = &v
	return s
}

// SetEcsVpcName sets the EcsVpcName field's value.
func (s *EcsInfoForDescribeDiagnosticsInfosOutput) SetEcsVpcName(v string) *EcsInfoForDescribeDiagnosticsInfosOutput {
	s.EcsVpcName = &v
	return s
}

type EndpointInfoForDescribeDiagnosticsInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndpointId *string `type:"string" json:",omitempty"`

	EndpointName *string `type:"string" json:",omitempty"`

	PriaveDomain *string `type:"string" json:",omitempty"`

	PrivateIpv4Address *string `type:"string" json:",omitempty"`

	PrivateIpv6Address *string `type:"string" json:",omitempty"`

	PublicDomain *string `type:"string" json:",omitempty"`

	PublicIpAddress *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	VpcName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EndpointInfoForDescribeDiagnosticsInfosOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointInfoForDescribeDiagnosticsInfosOutput) GoString() string {
	return s.String()
}

// SetEndpointId sets the EndpointId field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetEndpointId(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.EndpointId = &v
	return s
}

// SetEndpointName sets the EndpointName field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetEndpointName(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.EndpointName = &v
	return s
}

// SetPriaveDomain sets the PriaveDomain field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetPriaveDomain(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.PriaveDomain = &v
	return s
}

// SetPrivateIpv4Address sets the PrivateIpv4Address field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetPrivateIpv4Address(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.PrivateIpv4Address = &v
	return s
}

// SetPrivateIpv6Address sets the PrivateIpv6Address field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetPrivateIpv6Address(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.PrivateIpv6Address = &v
	return s
}

// SetPublicDomain sets the PublicDomain field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetPublicDomain(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.PublicDomain = &v
	return s
}

// SetPublicIpAddress sets the PublicIpAddress field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetPublicIpAddress(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.PublicIpAddress = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetVpcId(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *EndpointInfoForDescribeDiagnosticsInfosOutput) SetVpcName(v string) *EndpointInfoForDescribeDiagnosticsInfosOutput {
	s.VpcName = &v
	return s
}

type PublicAddressInfoForDescribeDiagnosticsInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	EipName *string `type:"string" json:",omitempty"`

	PublicIpAddress *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PublicAddressInfoForDescribeDiagnosticsInfosOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s PublicAddressInfoForDescribeDiagnosticsInfosOutput) GoString() string {
	return s.String()
}

// SetEipId sets the EipId field's value.
func (s *PublicAddressInfoForDescribeDiagnosticsInfosOutput) SetEipId(v string) *PublicAddressInfoForDescribeDiagnosticsInfosOutput {
	s.EipId = &v
	return s
}

// SetEipName sets the EipName field's value.
func (s *PublicAddressInfoForDescribeDiagnosticsInfosOutput) SetEipName(v string) *PublicAddressInfoForDescribeDiagnosticsInfosOutput {
	s.EipName = &v
	return s
}

// SetPublicIpAddress sets the PublicIpAddress field's value.
func (s *PublicAddressInfoForDescribeDiagnosticsInfosOutput) SetPublicIpAddress(v string) *PublicAddressInfoForDescribeDiagnosticsInfosOutput {
	s.PublicIpAddress = &v
	return s
}
