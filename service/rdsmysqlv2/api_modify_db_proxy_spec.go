// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyDBProxySpecCommon = "ModifyDBProxySpec"

// ModifyDBProxySpecCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyDBProxySpecCommon operation. The "output" return
// value will be populated with the ModifyDBProxySpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBProxySpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBProxySpecCommon Send returns without error.
//
// See ModifyDBProxySpecCommon for more information on using the ModifyDBProxySpecCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBProxySpecCommonRequest method.
//    req, resp := client.ModifyDBProxySpecCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBProxySpecCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBProxySpecCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBProxySpecCommon API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBProxySpecCommon for usage and error information.
func (c *RDSMYSQLV2) ModifyDBProxySpecCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBProxySpecCommonRequest(input)
	return out, req.Send()
}

// ModifyDBProxySpecCommonWithContext is the same as ModifyDBProxySpecCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBProxySpecCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBProxySpecCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBProxySpecCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBProxySpec = "ModifyDBProxySpec"

// ModifyDBProxySpecRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyDBProxySpec operation. The "output" return
// value will be populated with the ModifyDBProxySpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBProxySpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBProxySpecCommon Send returns without error.
//
// See ModifyDBProxySpec for more information on using the ModifyDBProxySpec
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBProxySpecRequest method.
//    req, resp := client.ModifyDBProxySpecRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBProxySpecRequest(input *ModifyDBProxySpecInput) (req *request.Request, output *ModifyDBProxySpecOutput) {
	op := &request.Operation{
		Name:       opModifyDBProxySpec,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBProxySpecInput{}
	}

	output = &ModifyDBProxySpecOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBProxySpec API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBProxySpec for usage and error information.
func (c *RDSMYSQLV2) ModifyDBProxySpec(input *ModifyDBProxySpecInput) (*ModifyDBProxySpecOutput, error) {
	req, out := c.ModifyDBProxySpecRequest(input)
	return out, req.Send()
}

// ModifyDBProxySpecWithContext is the same as ModifyDBProxySpec with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBProxySpec for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBProxySpecWithContext(ctx byteplus.Context, input *ModifyDBProxySpecInput, opts ...request.Option) (*ModifyDBProxySpecOutput, error) {
	req, out := c.ModifyDBProxySpecRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBProxySpecInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	ProxyNodeCustom *ProxyNodeCustomForModifyDBProxySpecInput `type:"structure" json:",omitempty"`

	SpecifiedSwitchEndTime *string `type:"string" json:",omitempty"`

	SpecifiedSwitchStartTime *string `type:"string" json:",omitempty"`

	SwitchType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyDBProxySpecInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBProxySpecInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBProxySpecInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBProxySpecInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBProxySpecInput) SetInstanceId(v string) *ModifyDBProxySpecInput {
	s.InstanceId = &v
	return s
}

// SetProxyNodeCustom sets the ProxyNodeCustom field's value.
func (s *ModifyDBProxySpecInput) SetProxyNodeCustom(v *ProxyNodeCustomForModifyDBProxySpecInput) *ModifyDBProxySpecInput {
	s.ProxyNodeCustom = v
	return s
}

// SetSpecifiedSwitchEndTime sets the SpecifiedSwitchEndTime field's value.
func (s *ModifyDBProxySpecInput) SetSpecifiedSwitchEndTime(v string) *ModifyDBProxySpecInput {
	s.SpecifiedSwitchEndTime = &v
	return s
}

// SetSpecifiedSwitchStartTime sets the SpecifiedSwitchStartTime field's value.
func (s *ModifyDBProxySpecInput) SetSpecifiedSwitchStartTime(v string) *ModifyDBProxySpecInput {
	s.SpecifiedSwitchStartTime = &v
	return s
}

// SetSwitchType sets the SwitchType field's value.
func (s *ModifyDBProxySpecInput) SetSwitchType(v string) *ModifyDBProxySpecInput {
	s.SwitchType = &v
	return s
}

type ModifyDBProxySpecOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	OrderId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyDBProxySpecOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBProxySpecOutput) GoString() string {
	return s.String()
}

// SetOrderId sets the OrderId field's value.
func (s *ModifyDBProxySpecOutput) SetOrderId(v string) *ModifyDBProxySpecOutput {
	s.OrderId = &v
	return s
}

type ProxyNodeCustomForModifyDBProxySpecInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CpuNum *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ProxyNodeCustomForModifyDBProxySpecInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ProxyNodeCustomForModifyDBProxySpecInput) GoString() string {
	return s.String()
}

// SetCpuNum sets the CpuNum field's value.
func (s *ProxyNodeCustomForModifyDBProxySpecInput) SetCpuNum(v int32) *ProxyNodeCustomForModifyDBProxySpecInput {
	s.CpuNum = &v
	return s
}
