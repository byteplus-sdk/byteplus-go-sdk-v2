// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeDBProxyConfigCommon = "DescribeDBProxyConfig"

// DescribeDBProxyConfigCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDBProxyConfigCommon operation. The "output" return
// value will be populated with the DescribeDBProxyConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBProxyConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBProxyConfigCommon Send returns without error.
//
// See DescribeDBProxyConfigCommon for more information on using the DescribeDBProxyConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBProxyConfigCommonRequest method.
//    req, resp := client.DescribeDBProxyConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBProxyConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBProxyConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBProxyConfigCommon API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBProxyConfigCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBProxyConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBProxyConfigCommonRequest(input)
	return out, req.Send()
}

// DescribeDBProxyConfigCommonWithContext is the same as DescribeDBProxyConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBProxyConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBProxyConfigCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBProxyConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBProxyConfig = "DescribeDBProxyConfig"

// DescribeDBProxyConfigRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDBProxyConfig operation. The "output" return
// value will be populated with the DescribeDBProxyConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBProxyConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBProxyConfigCommon Send returns without error.
//
// See DescribeDBProxyConfig for more information on using the DescribeDBProxyConfig
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBProxyConfigRequest method.
//    req, resp := client.DescribeDBProxyConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBProxyConfigRequest(input *DescribeDBProxyConfigInput) (req *request.Request, output *DescribeDBProxyConfigOutput) {
	op := &request.Operation{
		Name:       opDescribeDBProxyConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBProxyConfigInput{}
	}

	output = &DescribeDBProxyConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBProxyConfig API operation for RDS_MYSQL_V2.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBProxyConfig for usage and error information.
func (c *RDSMYSQLV2) DescribeDBProxyConfig(input *DescribeDBProxyConfigInput) (*DescribeDBProxyConfigOutput, error) {
	req, out := c.DescribeDBProxyConfigRequest(input)
	return out, req.Send()
}

// DescribeDBProxyConfigWithContext is the same as DescribeDBProxyConfig with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBProxyConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBProxyConfigWithContext(ctx byteplus.Context, input *DescribeDBProxyConfigInput, opts ...request.Option) (*DescribeDBProxyConfigOutput, error) {
	req, out := c.DescribeDBProxyConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Allowed *bool `type:"boolean" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`

	Reason *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput) GoString() string {
	return s.String()
}

// SetAllowed sets the Allowed field's value.
func (s *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput) SetAllowed(v bool) *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput {
	s.Allowed = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput) SetMessage(v string) *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput {
	s.Message = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput) SetReason(v string) *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput {
	s.Reason = &v
	return s
}

type CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Allowed *bool `type:"boolean" json:",omitempty"`

	CheckItem *string `type:"string" json:",omitempty"`

	Reason *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput) GoString() string {
	return s.String()
}

// SetAllowed sets the Allowed field's value.
func (s *CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput) SetAllowed(v bool) *CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput {
	s.Allowed = &v
	return s
}

// SetCheckItem sets the CheckItem field's value.
func (s *CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput) SetCheckItem(v string) *CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput {
	s.CheckItem = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput) SetReason(v string) *CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput {
	s.Reason = &v
	return s
}

type DescribeDBProxyConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBProxyConfigInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBProxyConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBProxyConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBProxyConfigInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBProxyConfigInput) SetInstanceId(v string) *DescribeDBProxyConfigInput {
	s.InstanceId = &v
	return s
}

type DescribeDBProxyConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BinlogDump *bool `type:"boolean" json:",omitempty"`

	CheckModifyDBProxyAllowed *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput `type:"structure" json:",omitempty"`

	CheckModifyDBProxyAllowedV2 []*CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput `type:"list" json:",omitempty"`

	ConnectionPoolType *string `type:"string" json:",omitempty"`

	DBProxyStatus *string `type:"string" json:",omitempty"`

	FeatureStates []*FeatureStateForDescribeDBProxyConfigOutput `type:"list" json:",omitempty"`

	GlobalReadOnly *bool `type:"boolean" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	ProxyResourceInfo *ProxyResourceInfoForDescribeDBProxyConfigOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBProxyConfigOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBProxyConfigOutput) GoString() string {
	return s.String()
}

// SetBinlogDump sets the BinlogDump field's value.
func (s *DescribeDBProxyConfigOutput) SetBinlogDump(v bool) *DescribeDBProxyConfigOutput {
	s.BinlogDump = &v
	return s
}

// SetCheckModifyDBProxyAllowed sets the CheckModifyDBProxyAllowed field's value.
func (s *DescribeDBProxyConfigOutput) SetCheckModifyDBProxyAllowed(v *CheckModifyDBProxyAllowedForDescribeDBProxyConfigOutput) *DescribeDBProxyConfigOutput {
	s.CheckModifyDBProxyAllowed = v
	return s
}

// SetCheckModifyDBProxyAllowedV2 sets the CheckModifyDBProxyAllowedV2 field's value.
func (s *DescribeDBProxyConfigOutput) SetCheckModifyDBProxyAllowedV2(v []*CheckModifyDBProxyAllowedV2ForDescribeDBProxyConfigOutput) *DescribeDBProxyConfigOutput {
	s.CheckModifyDBProxyAllowedV2 = v
	return s
}

// SetConnectionPoolType sets the ConnectionPoolType field's value.
func (s *DescribeDBProxyConfigOutput) SetConnectionPoolType(v string) *DescribeDBProxyConfigOutput {
	s.ConnectionPoolType = &v
	return s
}

// SetDBProxyStatus sets the DBProxyStatus field's value.
func (s *DescribeDBProxyConfigOutput) SetDBProxyStatus(v string) *DescribeDBProxyConfigOutput {
	s.DBProxyStatus = &v
	return s
}

// SetFeatureStates sets the FeatureStates field's value.
func (s *DescribeDBProxyConfigOutput) SetFeatureStates(v []*FeatureStateForDescribeDBProxyConfigOutput) *DescribeDBProxyConfigOutput {
	s.FeatureStates = v
	return s
}

// SetGlobalReadOnly sets the GlobalReadOnly field's value.
func (s *DescribeDBProxyConfigOutput) SetGlobalReadOnly(v bool) *DescribeDBProxyConfigOutput {
	s.GlobalReadOnly = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBProxyConfigOutput) SetInstanceId(v string) *DescribeDBProxyConfigOutput {
	s.InstanceId = &v
	return s
}

// SetProxyResourceInfo sets the ProxyResourceInfo field's value.
func (s *DescribeDBProxyConfigOutput) SetProxyResourceInfo(v *ProxyResourceInfoForDescribeDBProxyConfigOutput) *DescribeDBProxyConfigOutput {
	s.ProxyResourceInfo = v
	return s
}

type FeatureStateForDescribeDBProxyConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	FeatureName *string `type:"string" json:",omitempty"`

	Support *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s FeatureStateForDescribeDBProxyConfigOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FeatureStateForDescribeDBProxyConfigOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *FeatureStateForDescribeDBProxyConfigOutput) SetEnable(v bool) *FeatureStateForDescribeDBProxyConfigOutput {
	s.Enable = &v
	return s
}

// SetFeatureName sets the FeatureName field's value.
func (s *FeatureStateForDescribeDBProxyConfigOutput) SetFeatureName(v string) *FeatureStateForDescribeDBProxyConfigOutput {
	s.FeatureName = &v
	return s
}

// SetSupport sets the Support field's value.
func (s *FeatureStateForDescribeDBProxyConfigOutput) SetSupport(v bool) *FeatureStateForDescribeDBProxyConfigOutput {
	s.Support = &v
	return s
}

type ProxyResourceInfoForDescribeDBProxyConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CurrentProxyCpuNum *int32 `type:"int32" json:",omitempty"`

	MaxProxyCpuNum *int32 `type:"int32" json:",omitempty"`

	MinProxyCpuNum *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ProxyResourceInfoForDescribeDBProxyConfigOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ProxyResourceInfoForDescribeDBProxyConfigOutput) GoString() string {
	return s.String()
}

// SetCurrentProxyCpuNum sets the CurrentProxyCpuNum field's value.
func (s *ProxyResourceInfoForDescribeDBProxyConfigOutput) SetCurrentProxyCpuNum(v int32) *ProxyResourceInfoForDescribeDBProxyConfigOutput {
	s.CurrentProxyCpuNum = &v
	return s
}

// SetMaxProxyCpuNum sets the MaxProxyCpuNum field's value.
func (s *ProxyResourceInfoForDescribeDBProxyConfigOutput) SetMaxProxyCpuNum(v int32) *ProxyResourceInfoForDescribeDBProxyConfigOutput {
	s.MaxProxyCpuNum = &v
	return s
}

// SetMinProxyCpuNum sets the MinProxyCpuNum field's value.
func (s *ProxyResourceInfoForDescribeDBProxyConfigOutput) SetMinProxyCpuNum(v int32) *ProxyResourceInfoForDescribeDBProxyConfigOutput {
	s.MinProxyCpuNum = &v
	return s
}
