// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListContactsCommon = "ListContacts"

// ListContactsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListContactsCommon operation. The "output" return
// value will be populated with the ListContactsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContactsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContactsCommon Send returns without error.
//
// See ListContactsCommon for more information on using the ListContactsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListContactsCommonRequest method.
//    req, resp := client.ListContactsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListContactsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListContactsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContactsCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation ListContactsCommon for usage and error information.
func (c *VMP) ListContactsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListContactsCommonRequest(input)
	return out, req.Send()
}

// ListContactsCommonWithContext is the same as ListContactsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListContactsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListContactsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListContactsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListContacts = "ListContacts"

// ListContactsRequest generates a "byteplus/request.Request" representing the
// client's request for the ListContacts operation. The "output" return
// value will be populated with the ListContactsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContactsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContactsCommon Send returns without error.
//
// See ListContacts for more information on using the ListContacts
// API call, and error handling.
//
//    // Example sending a request using the ListContactsRequest method.
//    req, resp := client.ListContactsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListContactsRequest(input *ListContactsInput) (req *request.Request, output *ListContactsOutput) {
	op := &request.Operation{
		Name:       opListContacts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListContactsInput{}
	}

	output = &ListContactsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContacts API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation ListContacts for usage and error information.
func (c *VMP) ListContacts(input *ListContactsInput) (*ListContactsOutput, error) {
	req, out := c.ListContactsRequest(input)
	return out, req.Send()
}

// ListContactsWithContext is the same as ListContacts with the addition of
// the ability to pass a context and additional request options.
//
// See ListContacts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListContactsWithContext(ctx byteplus.Context, input *ListContactsInput, opts ...request.Option) (*ListContactsOutput, error) {
	req, out := c.ListContactsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DingTalkBotWebhookForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	AtMobiles []*string `type:"list" json:",omitempty"`

	AtUserIds []*string `type:"list" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DingTalkBotWebhookForListContactsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DingTalkBotWebhookForListContactsOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *DingTalkBotWebhookForListContactsOutput) SetAddress(v string) *DingTalkBotWebhookForListContactsOutput {
	s.Address = &v
	return s
}

// SetAtMobiles sets the AtMobiles field's value.
func (s *DingTalkBotWebhookForListContactsOutput) SetAtMobiles(v []*string) *DingTalkBotWebhookForListContactsOutput {
	s.AtMobiles = v
	return s
}

// SetAtUserIds sets the AtUserIds field's value.
func (s *DingTalkBotWebhookForListContactsOutput) SetAtUserIds(v []*string) *DingTalkBotWebhookForListContactsOutput {
	s.AtUserIds = v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *DingTalkBotWebhookForListContactsOutput) SetSecretKey(v string) *DingTalkBotWebhookForListContactsOutput {
	s.SecretKey = &v
	return s
}

type FilterForListContactsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListContactsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListContactsInput) GoString() string {
	return s.String()
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *FilterForListContactsInput) SetContactGroupIds(v []*string) *FilterForListContactsInput {
	s.ContactGroupIds = v
	return s
}

// SetEmail sets the Email field's value.
func (s *FilterForListContactsInput) SetEmail(v string) *FilterForListContactsInput {
	s.Email = &v
	return s
}

// SetIds sets the Ids field's value.
func (s *FilterForListContactsInput) SetIds(v []*string) *FilterForListContactsInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListContactsInput) SetName(v string) *FilterForListContactsInput {
	s.Name = &v
	return s
}

type ItemForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DingTalkBotWebhook *DingTalkBotWebhookForListContactsOutput `type:"structure" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	EmailActive *bool `type:"boolean" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	LarkBotWebhook *LarkBotWebhookForListContactsOutput `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	WeComBotWebhook *WeComBotWebhookForListContactsOutput `type:"structure" json:",omitempty"`

	Webhook *WebhookForListContactsOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListContactsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListContactsOutput) GoString() string {
	return s.String()
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *ItemForListContactsOutput) SetContactGroupIds(v []*string) *ItemForListContactsOutput {
	s.ContactGroupIds = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListContactsOutput) SetCreateTime(v string) *ItemForListContactsOutput {
	s.CreateTime = &v
	return s
}

// SetDingTalkBotWebhook sets the DingTalkBotWebhook field's value.
func (s *ItemForListContactsOutput) SetDingTalkBotWebhook(v *DingTalkBotWebhookForListContactsOutput) *ItemForListContactsOutput {
	s.DingTalkBotWebhook = v
	return s
}

// SetEmail sets the Email field's value.
func (s *ItemForListContactsOutput) SetEmail(v string) *ItemForListContactsOutput {
	s.Email = &v
	return s
}

// SetEmailActive sets the EmailActive field's value.
func (s *ItemForListContactsOutput) SetEmailActive(v bool) *ItemForListContactsOutput {
	s.EmailActive = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListContactsOutput) SetId(v string) *ItemForListContactsOutput {
	s.Id = &v
	return s
}

// SetLarkBotWebhook sets the LarkBotWebhook field's value.
func (s *ItemForListContactsOutput) SetLarkBotWebhook(v *LarkBotWebhookForListContactsOutput) *ItemForListContactsOutput {
	s.LarkBotWebhook = v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListContactsOutput) SetName(v string) *ItemForListContactsOutput {
	s.Name = &v
	return s
}

// SetWeComBotWebhook sets the WeComBotWebhook field's value.
func (s *ItemForListContactsOutput) SetWeComBotWebhook(v *WeComBotWebhookForListContactsOutput) *ItemForListContactsOutput {
	s.WeComBotWebhook = v
	return s
}

// SetWebhook sets the Webhook field's value.
func (s *ItemForListContactsOutput) SetWebhook(v *WebhookForListContactsOutput) *ItemForListContactsOutput {
	s.Webhook = v
	return s
}

type LarkBotWebhookForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LarkBotWebhookForListContactsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LarkBotWebhookForListContactsOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *LarkBotWebhookForListContactsOutput) SetAddress(v string) *LarkBotWebhookForListContactsOutput {
	s.Address = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *LarkBotWebhookForListContactsOutput) SetSecretKey(v string) *LarkBotWebhookForListContactsOutput {
	s.SecretKey = &v
	return s
}

type ListContactsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListContactsInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListContactsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContactsInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListContactsInput) SetFilter(v *FilterForListContactsInput) *ListContactsInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListContactsInput) SetPageNumber(v int64) *ListContactsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListContactsInput) SetPageSize(v int64) *ListContactsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListContactsInput) SetSortBy(v string) *ListContactsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListContactsInput) SetSortOrder(v string) *ListContactsInput {
	s.SortOrder = &v
	return s
}

type ListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListContactsOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListContactsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContactsOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListContactsOutput) SetItems(v []*ItemForListContactsOutput) *ListContactsOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListContactsOutput) SetTotal(v int64) *ListContactsOutput {
	s.Total = &v
	return s
}

type WeComBotWebhookForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	AtUserIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s WeComBotWebhookForListContactsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s WeComBotWebhookForListContactsOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *WeComBotWebhookForListContactsOutput) SetAddress(v string) *WeComBotWebhookForListContactsOutput {
	s.Address = &v
	return s
}

// SetAtUserIds sets the AtUserIds field's value.
func (s *WeComBotWebhookForListContactsOutput) SetAtUserIds(v []*string) *WeComBotWebhookForListContactsOutput {
	s.AtUserIds = v
	return s
}

type WebhookForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	Token *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s WebhookForListContactsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s WebhookForListContactsOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *WebhookForListContactsOutput) SetAddress(v string) *WebhookForListContactsOutput {
	s.Address = &v
	return s
}

// SetToken sets the Token field's value.
func (s *WebhookForListContactsOutput) SetToken(v string) *WebhookForListContactsOutput {
	s.Token = &v
	return s
}
