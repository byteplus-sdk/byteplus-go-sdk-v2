// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteContactGroupsCommon = "DeleteContactGroups"

// DeleteContactGroupsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteContactGroupsCommon operation. The "output" return
// value will be populated with the DeleteContactGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteContactGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteContactGroupsCommon Send returns without error.
//
// See DeleteContactGroupsCommon for more information on using the DeleteContactGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteContactGroupsCommonRequest method.
//    req, resp := client.DeleteContactGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DeleteContactGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteContactGroupsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteContactGroupsCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation DeleteContactGroupsCommon for usage and error information.
func (c *VMP) DeleteContactGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteContactGroupsCommonRequest(input)
	return out, req.Send()
}

// DeleteContactGroupsCommonWithContext is the same as DeleteContactGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteContactGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DeleteContactGroupsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteContactGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteContactGroups = "DeleteContactGroups"

// DeleteContactGroupsRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteContactGroups operation. The "output" return
// value will be populated with the DeleteContactGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteContactGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteContactGroupsCommon Send returns without error.
//
// See DeleteContactGroups for more information on using the DeleteContactGroups
// API call, and error handling.
//
//    // Example sending a request using the DeleteContactGroupsRequest method.
//    req, resp := client.DeleteContactGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DeleteContactGroupsRequest(input *DeleteContactGroupsInput) (req *request.Request, output *DeleteContactGroupsOutput) {
	op := &request.Operation{
		Name:       opDeleteContactGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteContactGroupsInput{}
	}

	output = &DeleteContactGroupsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteContactGroups API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation DeleteContactGroups for usage and error information.
func (c *VMP) DeleteContactGroups(input *DeleteContactGroupsInput) (*DeleteContactGroupsOutput, error) {
	req, out := c.DeleteContactGroupsRequest(input)
	return out, req.Send()
}

// DeleteContactGroupsWithContext is the same as DeleteContactGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteContactGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DeleteContactGroupsWithContext(ctx byteplus.Context, input *DeleteContactGroupsInput, opts ...request.Option) (*DeleteContactGroupsOutput, error) {
	req, out := c.DeleteContactGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForDeleteContactGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DataForDeleteContactGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForDeleteContactGroupsOutput) GoString() string {
	return s.String()
}

type DeleteContactGroupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteContactGroupsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteContactGroupsInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *DeleteContactGroupsInput) SetIds(v []*string) *DeleteContactGroupsInput {
	s.Ids = v
	return s
}

type DeleteContactGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	SuccessfulItems []*string `type:"list" json:",omitempty"`

	UnsuccessfulItems []*UnsuccessfulItemForDeleteContactGroupsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteContactGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteContactGroupsOutput) GoString() string {
	return s.String()
}

// SetSuccessfulItems sets the SuccessfulItems field's value.
func (s *DeleteContactGroupsOutput) SetSuccessfulItems(v []*string) *DeleteContactGroupsOutput {
	s.SuccessfulItems = v
	return s
}

// SetUnsuccessfulItems sets the UnsuccessfulItems field's value.
func (s *DeleteContactGroupsOutput) SetUnsuccessfulItems(v []*UnsuccessfulItemForDeleteContactGroupsOutput) *DeleteContactGroupsOutput {
	s.UnsuccessfulItems = v
	return s
}

type ErrorForDeleteContactGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Data *DataForDeleteContactGroupsOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForDeleteContactGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDeleteContactGroupsOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDeleteContactGroupsOutput) SetCode(v string) *ErrorForDeleteContactGroupsOutput {
	s.Code = &v
	return s
}

// SetData sets the Data field's value.
func (s *ErrorForDeleteContactGroupsOutput) SetData(v *DataForDeleteContactGroupsOutput) *ErrorForDeleteContactGroupsOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForDeleteContactGroupsOutput) SetMessage(v string) *ErrorForDeleteContactGroupsOutput {
	s.Message = &v
	return s
}

type UnsuccessfulItemForDeleteContactGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Error *ErrorForDeleteContactGroupsOutput `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UnsuccessfulItemForDeleteContactGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsuccessfulItemForDeleteContactGroupsOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *UnsuccessfulItemForDeleteContactGroupsOutput) SetError(v *ErrorForDeleteContactGroupsOutput) *UnsuccessfulItemForDeleteContactGroupsOutput {
	s.Error = v
	return s
}

// SetId sets the Id field's value.
func (s *UnsuccessfulItemForDeleteContactGroupsOutput) SetId(v string) *UnsuccessfulItemForDeleteContactGroupsOutput {
	s.Id = &v
	return s
}
