// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListRulesCommon = "ListRules"

// ListRulesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListRulesCommon operation. The "output" return
// value will be populated with the ListRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRulesCommon Send returns without error.
//
// See ListRulesCommon for more information on using the ListRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRulesCommonRequest method.
//    req, resp := client.ListRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRulesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRulesCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation ListRulesCommon for usage and error information.
func (c *VMP) ListRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRulesCommonRequest(input)
	return out, req.Send()
}

// ListRulesCommonWithContext is the same as ListRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListRulesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRules = "ListRules"

// ListRulesRequest generates a "byteplus/request.Request" representing the
// client's request for the ListRules operation. The "output" return
// value will be populated with the ListRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRulesCommon Send returns without error.
//
// See ListRules for more information on using the ListRules
// API call, and error handling.
//
//    // Example sending a request using the ListRulesRequest method.
//    req, resp := client.ListRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListRulesRequest(input *ListRulesInput) (req *request.Request, output *ListRulesOutput) {
	op := &request.Operation{
		Name:       opListRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRulesInput{}
	}

	output = &ListRulesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRules API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation ListRules for usage and error information.
func (c *VMP) ListRules(input *ListRulesInput) (*ListRulesOutput, error) {
	req, out := c.ListRulesRequest(input)
	return out, req.Send()
}

// ListRulesWithContext is the same as ListRules with the addition of
// the ability to pass a context and additional request options.
//
// See ListRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListRulesWithContext(ctx byteplus.Context, input *ListRulesInput, opts ...request.Option) (*ListRulesOutput, error) {
	req, out := c.ListRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Kind *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RuleFileNames []*string `type:"list" json:",omitempty"`

	RuleGroupNames []*string `type:"list" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListRulesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRulesInput) GoString() string {
	return s.String()
}

// SetKind sets the Kind field's value.
func (s *FilterForListRulesInput) SetKind(v string) *FilterForListRulesInput {
	s.Kind = &v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListRulesInput) SetName(v string) *FilterForListRulesInput {
	s.Name = &v
	return s
}

// SetRuleFileNames sets the RuleFileNames field's value.
func (s *FilterForListRulesInput) SetRuleFileNames(v []*string) *FilterForListRulesInput {
	s.RuleFileNames = v
	return s
}

// SetRuleGroupNames sets the RuleGroupNames field's value.
func (s *FilterForListRulesInput) SetRuleGroupNames(v []*string) *FilterForListRulesInput {
	s.RuleGroupNames = v
	return s
}

// SetStatus sets the Status field's value.
func (s *FilterForListRulesInput) SetStatus(v []*string) *FilterForListRulesInput {
	s.Status = v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *FilterForListRulesInput) SetWorkspaceId(v string) *FilterForListRulesInput {
	s.WorkspaceId = &v
	return s
}

type ItemForListRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Expr *string `type:"string" json:",omitempty"`

	Kind *string `type:"string" json:",omitempty"`

	Labels []*LabelForListRulesOutput `type:"list" json:",omitempty"`

	LastEvaluation *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Reason *string `type:"string" json:",omitempty"`

	RuleFileName *string `type:"string" json:",omitempty"`

	RuleGroupName *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListRulesOutput) GoString() string {
	return s.String()
}

// SetExpr sets the Expr field's value.
func (s *ItemForListRulesOutput) SetExpr(v string) *ItemForListRulesOutput {
	s.Expr = &v
	return s
}

// SetKind sets the Kind field's value.
func (s *ItemForListRulesOutput) SetKind(v string) *ItemForListRulesOutput {
	s.Kind = &v
	return s
}

// SetLabels sets the Labels field's value.
func (s *ItemForListRulesOutput) SetLabels(v []*LabelForListRulesOutput) *ItemForListRulesOutput {
	s.Labels = v
	return s
}

// SetLastEvaluation sets the LastEvaluation field's value.
func (s *ItemForListRulesOutput) SetLastEvaluation(v string) *ItemForListRulesOutput {
	s.LastEvaluation = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListRulesOutput) SetName(v string) *ItemForListRulesOutput {
	s.Name = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *ItemForListRulesOutput) SetReason(v string) *ItemForListRulesOutput {
	s.Reason = &v
	return s
}

// SetRuleFileName sets the RuleFileName field's value.
func (s *ItemForListRulesOutput) SetRuleFileName(v string) *ItemForListRulesOutput {
	s.RuleFileName = &v
	return s
}

// SetRuleGroupName sets the RuleGroupName field's value.
func (s *ItemForListRulesOutput) SetRuleGroupName(v string) *ItemForListRulesOutput {
	s.RuleGroupName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListRulesOutput) SetStatus(v string) *ItemForListRulesOutput {
	s.Status = &v
	return s
}

type LabelForListRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LabelForListRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LabelForListRulesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *LabelForListRulesOutput) SetKey(v string) *LabelForListRulesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *LabelForListRulesOutput) SetValue(v string) *LabelForListRulesOutput {
	s.Value = &v
	return s
}

type ListRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListRulesInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListRulesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListRulesInput) SetFilter(v *FilterForListRulesInput) *ListRulesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRulesInput) SetPageNumber(v int64) *ListRulesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRulesInput) SetPageSize(v int64) *ListRulesInput {
	s.PageSize = &v
	return s
}

type ListRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListRulesOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListRulesOutput) SetItems(v []*ItemForListRulesOutput) *ListRulesOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListRulesOutput) SetTotal(v int64) *ListRulesOutput {
	s.Total = &v
	return s
}
