// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDisableAlertingRulesCommon = "DisableAlertingRules"

// DisableAlertingRulesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DisableAlertingRulesCommon operation. The "output" return
// value will be populated with the DisableAlertingRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisableAlertingRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisableAlertingRulesCommon Send returns without error.
//
// See DisableAlertingRulesCommon for more information on using the DisableAlertingRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the DisableAlertingRulesCommonRequest method.
//    req, resp := client.DisableAlertingRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DisableAlertingRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDisableAlertingRulesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DisableAlertingRulesCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation DisableAlertingRulesCommon for usage and error information.
func (c *VMP) DisableAlertingRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DisableAlertingRulesCommonRequest(input)
	return out, req.Send()
}

// DisableAlertingRulesCommonWithContext is the same as DisableAlertingRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DisableAlertingRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DisableAlertingRulesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DisableAlertingRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisableAlertingRules = "DisableAlertingRules"

// DisableAlertingRulesRequest generates a "byteplus/request.Request" representing the
// client's request for the DisableAlertingRules operation. The "output" return
// value will be populated with the DisableAlertingRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisableAlertingRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisableAlertingRulesCommon Send returns without error.
//
// See DisableAlertingRules for more information on using the DisableAlertingRules
// API call, and error handling.
//
//    // Example sending a request using the DisableAlertingRulesRequest method.
//    req, resp := client.DisableAlertingRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DisableAlertingRulesRequest(input *DisableAlertingRulesInput) (req *request.Request, output *DisableAlertingRulesOutput) {
	op := &request.Operation{
		Name:       opDisableAlertingRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisableAlertingRulesInput{}
	}

	output = &DisableAlertingRulesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DisableAlertingRules API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation DisableAlertingRules for usage and error information.
func (c *VMP) DisableAlertingRules(input *DisableAlertingRulesInput) (*DisableAlertingRulesOutput, error) {
	req, out := c.DisableAlertingRulesRequest(input)
	return out, req.Send()
}

// DisableAlertingRulesWithContext is the same as DisableAlertingRules with the addition of
// the ability to pass a context and additional request options.
//
// See DisableAlertingRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DisableAlertingRulesWithContext(ctx byteplus.Context, input *DisableAlertingRulesInput, opts ...request.Option) (*DisableAlertingRulesOutput, error) {
	req, out := c.DisableAlertingRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForDisableAlertingRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DataForDisableAlertingRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForDisableAlertingRulesOutput) GoString() string {
	return s.String()
}

type DisableAlertingRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DisableAlertingRulesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DisableAlertingRulesInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *DisableAlertingRulesInput) SetIds(v []*string) *DisableAlertingRulesInput {
	s.Ids = v
	return s
}

type DisableAlertingRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	SuccessfulItems []*string `type:"list" json:",omitempty"`

	UnsuccessfulItems []*UnsuccessfulItemForDisableAlertingRulesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DisableAlertingRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DisableAlertingRulesOutput) GoString() string {
	return s.String()
}

// SetSuccessfulItems sets the SuccessfulItems field's value.
func (s *DisableAlertingRulesOutput) SetSuccessfulItems(v []*string) *DisableAlertingRulesOutput {
	s.SuccessfulItems = v
	return s
}

// SetUnsuccessfulItems sets the UnsuccessfulItems field's value.
func (s *DisableAlertingRulesOutput) SetUnsuccessfulItems(v []*UnsuccessfulItemForDisableAlertingRulesOutput) *DisableAlertingRulesOutput {
	s.UnsuccessfulItems = v
	return s
}

type ErrorForDisableAlertingRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Data *DataForDisableAlertingRulesOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForDisableAlertingRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDisableAlertingRulesOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDisableAlertingRulesOutput) SetCode(v string) *ErrorForDisableAlertingRulesOutput {
	s.Code = &v
	return s
}

// SetData sets the Data field's value.
func (s *ErrorForDisableAlertingRulesOutput) SetData(v *DataForDisableAlertingRulesOutput) *ErrorForDisableAlertingRulesOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForDisableAlertingRulesOutput) SetMessage(v string) *ErrorForDisableAlertingRulesOutput {
	s.Message = &v
	return s
}

type UnsuccessfulItemForDisableAlertingRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Error *ErrorForDisableAlertingRulesOutput `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UnsuccessfulItemForDisableAlertingRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsuccessfulItemForDisableAlertingRulesOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *UnsuccessfulItemForDisableAlertingRulesOutput) SetError(v *ErrorForDisableAlertingRulesOutput) *UnsuccessfulItemForDisableAlertingRulesOutput {
	s.Error = v
	return s
}

// SetId sets the Id field's value.
func (s *UnsuccessfulItemForDisableAlertingRulesOutput) SetId(v string) *UnsuccessfulItemForDisableAlertingRulesOutput {
	s.Id = &v
	return s
}
