// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteRuleFileCommon = "DeleteRuleFile"

// DeleteRuleFileCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteRuleFileCommon operation. The "output" return
// value will be populated with the DeleteRuleFileCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteRuleFileCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteRuleFileCommon Send returns without error.
//
// See DeleteRuleFileCommon for more information on using the DeleteRuleFileCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteRuleFileCommonRequest method.
//    req, resp := client.DeleteRuleFileCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DeleteRuleFileCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteRuleFileCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteRuleFileCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation DeleteRuleFileCommon for usage and error information.
func (c *VMP) DeleteRuleFileCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteRuleFileCommonRequest(input)
	return out, req.Send()
}

// DeleteRuleFileCommonWithContext is the same as DeleteRuleFileCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteRuleFileCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DeleteRuleFileCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteRuleFileCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteRuleFile = "DeleteRuleFile"

// DeleteRuleFileRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteRuleFile operation. The "output" return
// value will be populated with the DeleteRuleFileCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteRuleFileCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteRuleFileCommon Send returns without error.
//
// See DeleteRuleFile for more information on using the DeleteRuleFile
// API call, and error handling.
//
//    // Example sending a request using the DeleteRuleFileRequest method.
//    req, resp := client.DeleteRuleFileRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DeleteRuleFileRequest(input *DeleteRuleFileInput) (req *request.Request, output *DeleteRuleFileOutput) {
	op := &request.Operation{
		Name:       opDeleteRuleFile,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteRuleFileInput{}
	}

	output = &DeleteRuleFileOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteRuleFile API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation DeleteRuleFile for usage and error information.
func (c *VMP) DeleteRuleFile(input *DeleteRuleFileInput) (*DeleteRuleFileOutput, error) {
	req, out := c.DeleteRuleFileRequest(input)
	return out, req.Send()
}

// DeleteRuleFileWithContext is the same as DeleteRuleFile with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteRuleFile for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DeleteRuleFileWithContext(ctx byteplus.Context, input *DeleteRuleFileInput, opts ...request.Option) (*DeleteRuleFileOutput, error) {
	req, out := c.DeleteRuleFileRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteRuleFileInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteRuleFileInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRuleFileInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *DeleteRuleFileInput) SetId(v string) *DeleteRuleFileInput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *DeleteRuleFileInput) SetName(v string) *DeleteRuleFileInput {
	s.Name = &v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *DeleteRuleFileInput) SetWorkspaceId(v string) *DeleteRuleFileInput {
	s.WorkspaceId = &v
	return s
}

type DeleteRuleFileOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteRuleFileOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRuleFileOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *DeleteRuleFileOutput) SetId(v string) *DeleteRuleFileOutput {
	s.Id = &v
	return s
}
