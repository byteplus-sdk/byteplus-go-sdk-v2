// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opGetContactCommon = "GetContact"

// GetContactCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the GetContactCommon operation. The "output" return
// value will be populated with the GetContactCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetContactCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetContactCommon Send returns without error.
//
// See GetContactCommon for more information on using the GetContactCommon
// API call, and error handling.
//
//    // Example sending a request using the GetContactCommonRequest method.
//    req, resp := client.GetContactCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) GetContactCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetContactCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetContactCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation GetContactCommon for usage and error information.
func (c *VMP) GetContactCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetContactCommonRequest(input)
	return out, req.Send()
}

// GetContactCommonWithContext is the same as GetContactCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetContactCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) GetContactCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetContactCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetContact = "GetContact"

// GetContactRequest generates a "byteplus/request.Request" representing the
// client's request for the GetContact operation. The "output" return
// value will be populated with the GetContactCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetContactCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetContactCommon Send returns without error.
//
// See GetContact for more information on using the GetContact
// API call, and error handling.
//
//    // Example sending a request using the GetContactRequest method.
//    req, resp := client.GetContactRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) GetContactRequest(input *GetContactInput) (req *request.Request, output *GetContactOutput) {
	op := &request.Operation{
		Name:       opGetContact,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetContactInput{}
	}

	output = &GetContactOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetContact API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation GetContact for usage and error information.
func (c *VMP) GetContact(input *GetContactInput) (*GetContactOutput, error) {
	req, out := c.GetContactRequest(input)
	return out, req.Send()
}

// GetContactWithContext is the same as GetContact with the addition of
// the ability to pass a context and additional request options.
//
// See GetContact for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) GetContactWithContext(ctx byteplus.Context, input *GetContactInput, opts ...request.Option) (*GetContactOutput, error) {
	req, out := c.GetContactRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DingTalkBotWebhookForGetContactOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	AtMobiles []*string `type:"list" json:",omitempty"`

	AtUserIds []*string `type:"list" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DingTalkBotWebhookForGetContactOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DingTalkBotWebhookForGetContactOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *DingTalkBotWebhookForGetContactOutput) SetAddress(v string) *DingTalkBotWebhookForGetContactOutput {
	s.Address = &v
	return s
}

// SetAtMobiles sets the AtMobiles field's value.
func (s *DingTalkBotWebhookForGetContactOutput) SetAtMobiles(v []*string) *DingTalkBotWebhookForGetContactOutput {
	s.AtMobiles = v
	return s
}

// SetAtUserIds sets the AtUserIds field's value.
func (s *DingTalkBotWebhookForGetContactOutput) SetAtUserIds(v []*string) *DingTalkBotWebhookForGetContactOutput {
	s.AtUserIds = v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *DingTalkBotWebhookForGetContactOutput) SetSecretKey(v string) *DingTalkBotWebhookForGetContactOutput {
	s.SecretKey = &v
	return s
}

type GetContactInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetContactInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetContactInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetContactInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetContactInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *GetContactInput) SetId(v string) *GetContactInput {
	s.Id = &v
	return s
}

type GetContactOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DingTalkBotWebhook *DingTalkBotWebhookForGetContactOutput `type:"structure" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	EmailActive *bool `type:"boolean" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	LarkBotWebhook *LarkBotWebhookForGetContactOutput `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	WeComBotWebhook *WeComBotWebhookForGetContactOutput `type:"structure" json:",omitempty"`

	Webhook *WebhookForGetContactOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetContactOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetContactOutput) GoString() string {
	return s.String()
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *GetContactOutput) SetContactGroupIds(v []*string) *GetContactOutput {
	s.ContactGroupIds = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetContactOutput) SetCreateTime(v string) *GetContactOutput {
	s.CreateTime = &v
	return s
}

// SetDingTalkBotWebhook sets the DingTalkBotWebhook field's value.
func (s *GetContactOutput) SetDingTalkBotWebhook(v *DingTalkBotWebhookForGetContactOutput) *GetContactOutput {
	s.DingTalkBotWebhook = v
	return s
}

// SetEmail sets the Email field's value.
func (s *GetContactOutput) SetEmail(v string) *GetContactOutput {
	s.Email = &v
	return s
}

// SetEmailActive sets the EmailActive field's value.
func (s *GetContactOutput) SetEmailActive(v bool) *GetContactOutput {
	s.EmailActive = &v
	return s
}

// SetId sets the Id field's value.
func (s *GetContactOutput) SetId(v string) *GetContactOutput {
	s.Id = &v
	return s
}

// SetLarkBotWebhook sets the LarkBotWebhook field's value.
func (s *GetContactOutput) SetLarkBotWebhook(v *LarkBotWebhookForGetContactOutput) *GetContactOutput {
	s.LarkBotWebhook = v
	return s
}

// SetName sets the Name field's value.
func (s *GetContactOutput) SetName(v string) *GetContactOutput {
	s.Name = &v
	return s
}

// SetWeComBotWebhook sets the WeComBotWebhook field's value.
func (s *GetContactOutput) SetWeComBotWebhook(v *WeComBotWebhookForGetContactOutput) *GetContactOutput {
	s.WeComBotWebhook = v
	return s
}

// SetWebhook sets the Webhook field's value.
func (s *GetContactOutput) SetWebhook(v *WebhookForGetContactOutput) *GetContactOutput {
	s.Webhook = v
	return s
}

type LarkBotWebhookForGetContactOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LarkBotWebhookForGetContactOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LarkBotWebhookForGetContactOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *LarkBotWebhookForGetContactOutput) SetAddress(v string) *LarkBotWebhookForGetContactOutput {
	s.Address = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *LarkBotWebhookForGetContactOutput) SetSecretKey(v string) *LarkBotWebhookForGetContactOutput {
	s.SecretKey = &v
	return s
}

type WeComBotWebhookForGetContactOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	AtUserIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s WeComBotWebhookForGetContactOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s WeComBotWebhookForGetContactOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *WeComBotWebhookForGetContactOutput) SetAddress(v string) *WeComBotWebhookForGetContactOutput {
	s.Address = &v
	return s
}

// SetAtUserIds sets the AtUserIds field's value.
func (s *WeComBotWebhookForGetContactOutput) SetAtUserIds(v []*string) *WeComBotWebhookForGetContactOutput {
	s.AtUserIds = v
	return s
}

type WebhookForGetContactOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	Token *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s WebhookForGetContactOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s WebhookForGetContactOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *WebhookForGetContactOutput) SetAddress(v string) *WebhookForGetContactOutput {
	s.Address = &v
	return s
}

// SetToken sets the Token field's value.
func (s *WebhookForGetContactOutput) SetToken(v string) *WebhookForGetContactOutput {
	s.Token = &v
	return s
}
