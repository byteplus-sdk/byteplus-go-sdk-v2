// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opGetNotifyGroupPolicyCommon = "GetNotifyGroupPolicy"

// GetNotifyGroupPolicyCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the GetNotifyGroupPolicyCommon operation. The "output" return
// value will be populated with the GetNotifyGroupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetNotifyGroupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetNotifyGroupPolicyCommon Send returns without error.
//
// See GetNotifyGroupPolicyCommon for more information on using the GetNotifyGroupPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the GetNotifyGroupPolicyCommonRequest method.
//    req, resp := client.GetNotifyGroupPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) GetNotifyGroupPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetNotifyGroupPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetNotifyGroupPolicyCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation GetNotifyGroupPolicyCommon for usage and error information.
func (c *VMP) GetNotifyGroupPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetNotifyGroupPolicyCommonRequest(input)
	return out, req.Send()
}

// GetNotifyGroupPolicyCommonWithContext is the same as GetNotifyGroupPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetNotifyGroupPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) GetNotifyGroupPolicyCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetNotifyGroupPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetNotifyGroupPolicy = "GetNotifyGroupPolicy"

// GetNotifyGroupPolicyRequest generates a "byteplus/request.Request" representing the
// client's request for the GetNotifyGroupPolicy operation. The "output" return
// value will be populated with the GetNotifyGroupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetNotifyGroupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetNotifyGroupPolicyCommon Send returns without error.
//
// See GetNotifyGroupPolicy for more information on using the GetNotifyGroupPolicy
// API call, and error handling.
//
//    // Example sending a request using the GetNotifyGroupPolicyRequest method.
//    req, resp := client.GetNotifyGroupPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) GetNotifyGroupPolicyRequest(input *GetNotifyGroupPolicyInput) (req *request.Request, output *GetNotifyGroupPolicyOutput) {
	op := &request.Operation{
		Name:       opGetNotifyGroupPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetNotifyGroupPolicyInput{}
	}

	output = &GetNotifyGroupPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetNotifyGroupPolicy API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation GetNotifyGroupPolicy for usage and error information.
func (c *VMP) GetNotifyGroupPolicy(input *GetNotifyGroupPolicyInput) (*GetNotifyGroupPolicyOutput, error) {
	req, out := c.GetNotifyGroupPolicyRequest(input)
	return out, req.Send()
}

// GetNotifyGroupPolicyWithContext is the same as GetNotifyGroupPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See GetNotifyGroupPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) GetNotifyGroupPolicyWithContext(ctx byteplus.Context, input *GetNotifyGroupPolicyInput, opts ...request.Option) (*GetNotifyGroupPolicyOutput, error) {
	req, out := c.GetNotifyGroupPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetNotifyGroupPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetNotifyGroupPolicyInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetNotifyGroupPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetNotifyGroupPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetNotifyGroupPolicyInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *GetNotifyGroupPolicyInput) SetId(v string) *GetNotifyGroupPolicyInput {
	s.Id = &v
	return s
}

type GetNotifyGroupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Levels []*LevelForGetNotifyGroupPolicyOutput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetNotifyGroupPolicyOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetNotifyGroupPolicyOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetNotifyGroupPolicyOutput) SetCreateTime(v string) *GetNotifyGroupPolicyOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetNotifyGroupPolicyOutput) SetDescription(v string) *GetNotifyGroupPolicyOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *GetNotifyGroupPolicyOutput) SetId(v string) *GetNotifyGroupPolicyOutput {
	s.Id = &v
	return s
}

// SetLevels sets the Levels field's value.
func (s *GetNotifyGroupPolicyOutput) SetLevels(v []*LevelForGetNotifyGroupPolicyOutput) *GetNotifyGroupPolicyOutput {
	s.Levels = v
	return s
}

// SetName sets the Name field's value.
func (s *GetNotifyGroupPolicyOutput) SetName(v string) *GetNotifyGroupPolicyOutput {
	s.Name = &v
	return s
}

type LevelForGetNotifyGroupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	GroupBy []*string `type:"list" json:",omitempty"`

	GroupInterval *string `type:"string" json:",omitempty"`

	GroupWait *string `type:"string" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	RepeatInterval *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LevelForGetNotifyGroupPolicyOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LevelForGetNotifyGroupPolicyOutput) GoString() string {
	return s.String()
}

// SetGroupBy sets the GroupBy field's value.
func (s *LevelForGetNotifyGroupPolicyOutput) SetGroupBy(v []*string) *LevelForGetNotifyGroupPolicyOutput {
	s.GroupBy = v
	return s
}

// SetGroupInterval sets the GroupInterval field's value.
func (s *LevelForGetNotifyGroupPolicyOutput) SetGroupInterval(v string) *LevelForGetNotifyGroupPolicyOutput {
	s.GroupInterval = &v
	return s
}

// SetGroupWait sets the GroupWait field's value.
func (s *LevelForGetNotifyGroupPolicyOutput) SetGroupWait(v string) *LevelForGetNotifyGroupPolicyOutput {
	s.GroupWait = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *LevelForGetNotifyGroupPolicyOutput) SetLevel(v string) *LevelForGetNotifyGroupPolicyOutput {
	s.Level = &v
	return s
}

// SetRepeatInterval sets the RepeatInterval field's value.
func (s *LevelForGetNotifyGroupPolicyOutput) SetRepeatInterval(v string) *LevelForGetNotifyGroupPolicyOutput {
	s.RepeatInterval = &v
	return s
}
