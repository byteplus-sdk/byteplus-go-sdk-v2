// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opUpdateAlertingRuleCommon = "UpdateAlertingRule"

// UpdateAlertingRuleCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the UpdateAlertingRuleCommon operation. The "output" return
// value will be populated with the UpdateAlertingRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAlertingRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAlertingRuleCommon Send returns without error.
//
// See UpdateAlertingRuleCommon for more information on using the UpdateAlertingRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAlertingRuleCommonRequest method.
//    req, resp := client.UpdateAlertingRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) UpdateAlertingRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAlertingRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAlertingRuleCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation UpdateAlertingRuleCommon for usage and error information.
func (c *VMP) UpdateAlertingRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAlertingRuleCommonRequest(input)
	return out, req.Send()
}

// UpdateAlertingRuleCommonWithContext is the same as UpdateAlertingRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAlertingRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) UpdateAlertingRuleCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAlertingRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAlertingRule = "UpdateAlertingRule"

// UpdateAlertingRuleRequest generates a "byteplus/request.Request" representing the
// client's request for the UpdateAlertingRule operation. The "output" return
// value will be populated with the UpdateAlertingRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAlertingRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAlertingRuleCommon Send returns without error.
//
// See UpdateAlertingRule for more information on using the UpdateAlertingRule
// API call, and error handling.
//
//    // Example sending a request using the UpdateAlertingRuleRequest method.
//    req, resp := client.UpdateAlertingRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) UpdateAlertingRuleRequest(input *UpdateAlertingRuleInput) (req *request.Request, output *UpdateAlertingRuleOutput) {
	op := &request.Operation{
		Name:       opUpdateAlertingRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAlertingRuleInput{}
	}

	output = &UpdateAlertingRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAlertingRule API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation UpdateAlertingRule for usage and error information.
func (c *VMP) UpdateAlertingRule(input *UpdateAlertingRuleInput) (*UpdateAlertingRuleOutput, error) {
	req, out := c.UpdateAlertingRuleRequest(input)
	return out, req.Send()
}

// UpdateAlertingRuleWithContext is the same as UpdateAlertingRule with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAlertingRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) UpdateAlertingRuleWithContext(ctx byteplus.Context, input *UpdateAlertingRuleInput, opts ...request.Option) (*UpdateAlertingRuleOutput, error) {
	req, out := c.UpdateAlertingRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AnnotationForUpdateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AnnotationForUpdateAlertingRuleInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s AnnotationForUpdateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *AnnotationForUpdateAlertingRuleInput) SetName(v string) *AnnotationForUpdateAlertingRuleInput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *AnnotationForUpdateAlertingRuleInput) SetValue(v string) *AnnotationForUpdateAlertingRuleInput {
	s.Value = &v
	return s
}

type LabelForUpdateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LabelForUpdateAlertingRuleInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LabelForUpdateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *LabelForUpdateAlertingRuleInput) SetName(v string) *LabelForUpdateAlertingRuleInput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *LabelForUpdateAlertingRuleInput) SetValue(v string) *LabelForUpdateAlertingRuleInput {
	s.Value = &v
	return s
}

type LevelForUpdateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Comparator *string `type:"string" json:",omitempty"`

	For *string `type:"string" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	Threshold *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s LevelForUpdateAlertingRuleInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LevelForUpdateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetComparator sets the Comparator field's value.
func (s *LevelForUpdateAlertingRuleInput) SetComparator(v string) *LevelForUpdateAlertingRuleInput {
	s.Comparator = &v
	return s
}

// SetFor sets the For field's value.
func (s *LevelForUpdateAlertingRuleInput) SetFor(v string) *LevelForUpdateAlertingRuleInput {
	s.For = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *LevelForUpdateAlertingRuleInput) SetLevel(v string) *LevelForUpdateAlertingRuleInput {
	s.Level = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *LevelForUpdateAlertingRuleInput) SetThreshold(v float64) *LevelForUpdateAlertingRuleInput {
	s.Threshold = &v
	return s
}

type QueryForUpdateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PromQL *string `type:"string" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s QueryForUpdateAlertingRuleInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryForUpdateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetPromQL sets the PromQL field's value.
func (s *QueryForUpdateAlertingRuleInput) SetPromQL(v string) *QueryForUpdateAlertingRuleInput {
	s.PromQL = &v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *QueryForUpdateAlertingRuleInput) SetWorkspaceId(v string) *QueryForUpdateAlertingRuleInput {
	s.WorkspaceId = &v
	return s
}

type UpdateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Annotations []*AnnotationForUpdateAlertingRuleInput `type:"list" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	Labels []*LabelForUpdateAlertingRuleInput `type:"list" json:",omitempty"`

	Levels []*LevelForUpdateAlertingRuleInput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	NotifyGroupPolicyId *string `type:"string" json:",omitempty"`

	NotifyPolicyId *string `type:"string" json:",omitempty"`

	Query *QueryForUpdateAlertingRuleInput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAlertingRuleInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAlertingRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAlertingRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateAlertingRuleInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAnnotations sets the Annotations field's value.
func (s *UpdateAlertingRuleInput) SetAnnotations(v []*AnnotationForUpdateAlertingRuleInput) *UpdateAlertingRuleInput {
	s.Annotations = v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateAlertingRuleInput) SetDescription(v string) *UpdateAlertingRuleInput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateAlertingRuleInput) SetId(v string) *UpdateAlertingRuleInput {
	s.Id = &v
	return s
}

// SetLabels sets the Labels field's value.
func (s *UpdateAlertingRuleInput) SetLabels(v []*LabelForUpdateAlertingRuleInput) *UpdateAlertingRuleInput {
	s.Labels = v
	return s
}

// SetLevels sets the Levels field's value.
func (s *UpdateAlertingRuleInput) SetLevels(v []*LevelForUpdateAlertingRuleInput) *UpdateAlertingRuleInput {
	s.Levels = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateAlertingRuleInput) SetName(v string) *UpdateAlertingRuleInput {
	s.Name = &v
	return s
}

// SetNotifyGroupPolicyId sets the NotifyGroupPolicyId field's value.
func (s *UpdateAlertingRuleInput) SetNotifyGroupPolicyId(v string) *UpdateAlertingRuleInput {
	s.NotifyGroupPolicyId = &v
	return s
}

// SetNotifyPolicyId sets the NotifyPolicyId field's value.
func (s *UpdateAlertingRuleInput) SetNotifyPolicyId(v string) *UpdateAlertingRuleInput {
	s.NotifyPolicyId = &v
	return s
}

// SetQuery sets the Query field's value.
func (s *UpdateAlertingRuleInput) SetQuery(v *QueryForUpdateAlertingRuleInput) *UpdateAlertingRuleInput {
	s.Query = v
	return s
}

// SetType sets the Type field's value.
func (s *UpdateAlertingRuleInput) SetType(v string) *UpdateAlertingRuleInput {
	s.Type = &v
	return s
}

type UpdateAlertingRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAlertingRuleOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAlertingRuleOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateAlertingRuleOutput) SetId(v string) *UpdateAlertingRuleOutput {
	s.Id = &v
	return s
}
