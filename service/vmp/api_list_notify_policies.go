// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListNotifyPoliciesCommon = "ListNotifyPolicies"

// ListNotifyPoliciesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListNotifyPoliciesCommon operation. The "output" return
// value will be populated with the ListNotifyPoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListNotifyPoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListNotifyPoliciesCommon Send returns without error.
//
// See ListNotifyPoliciesCommon for more information on using the ListNotifyPoliciesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListNotifyPoliciesCommonRequest method.
//    req, resp := client.ListNotifyPoliciesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListNotifyPoliciesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListNotifyPoliciesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListNotifyPoliciesCommon API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation ListNotifyPoliciesCommon for usage and error information.
func (c *VMP) ListNotifyPoliciesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListNotifyPoliciesCommonRequest(input)
	return out, req.Send()
}

// ListNotifyPoliciesCommonWithContext is the same as ListNotifyPoliciesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListNotifyPoliciesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListNotifyPoliciesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListNotifyPoliciesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListNotifyPolicies = "ListNotifyPolicies"

// ListNotifyPoliciesRequest generates a "byteplus/request.Request" representing the
// client's request for the ListNotifyPolicies operation. The "output" return
// value will be populated with the ListNotifyPoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListNotifyPoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListNotifyPoliciesCommon Send returns without error.
//
// See ListNotifyPolicies for more information on using the ListNotifyPolicies
// API call, and error handling.
//
//    // Example sending a request using the ListNotifyPoliciesRequest method.
//    req, resp := client.ListNotifyPoliciesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListNotifyPoliciesRequest(input *ListNotifyPoliciesInput) (req *request.Request, output *ListNotifyPoliciesOutput) {
	op := &request.Operation{
		Name:       opListNotifyPolicies,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListNotifyPoliciesInput{}
	}

	output = &ListNotifyPoliciesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListNotifyPolicies API operation for VMP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VMP's
// API operation ListNotifyPolicies for usage and error information.
func (c *VMP) ListNotifyPolicies(input *ListNotifyPoliciesInput) (*ListNotifyPoliciesOutput, error) {
	req, out := c.ListNotifyPoliciesRequest(input)
	return out, req.Send()
}

// ListNotifyPoliciesWithContext is the same as ListNotifyPolicies with the addition of
// the ability to pass a context and additional request options.
//
// See ListNotifyPolicies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListNotifyPoliciesWithContext(ctx byteplus.Context, input *ListNotifyPoliciesInput, opts ...request.Option) (*ListNotifyPoliciesOutput, error) {
	req, out := c.ListNotifyPoliciesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListNotifyPoliciesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChannelNotifyTemplateIds []*string `type:"list" json:",omitempty"`

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListNotifyPoliciesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListNotifyPoliciesInput) GoString() string {
	return s.String()
}

// SetChannelNotifyTemplateIds sets the ChannelNotifyTemplateIds field's value.
func (s *FilterForListNotifyPoliciesInput) SetChannelNotifyTemplateIds(v []*string) *FilterForListNotifyPoliciesInput {
	s.ChannelNotifyTemplateIds = v
	return s
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *FilterForListNotifyPoliciesInput) SetContactGroupIds(v []*string) *FilterForListNotifyPoliciesInput {
	s.ContactGroupIds = v
	return s
}

// SetIds sets the Ids field's value.
func (s *FilterForListNotifyPoliciesInput) SetIds(v []*string) *FilterForListNotifyPoliciesInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListNotifyPoliciesInput) SetName(v string) *FilterForListNotifyPoliciesInput {
	s.Name = &v
	return s
}

type ItemForListNotifyPoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChannelNotifyTemplateIds []*string `type:"list" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Levels []*LevelForListNotifyPoliciesOutput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListNotifyPoliciesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListNotifyPoliciesOutput) GoString() string {
	return s.String()
}

// SetChannelNotifyTemplateIds sets the ChannelNotifyTemplateIds field's value.
func (s *ItemForListNotifyPoliciesOutput) SetChannelNotifyTemplateIds(v []*string) *ItemForListNotifyPoliciesOutput {
	s.ChannelNotifyTemplateIds = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListNotifyPoliciesOutput) SetCreateTime(v string) *ItemForListNotifyPoliciesOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListNotifyPoliciesOutput) SetDescription(v string) *ItemForListNotifyPoliciesOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListNotifyPoliciesOutput) SetId(v string) *ItemForListNotifyPoliciesOutput {
	s.Id = &v
	return s
}

// SetLevels sets the Levels field's value.
func (s *ItemForListNotifyPoliciesOutput) SetLevels(v []*LevelForListNotifyPoliciesOutput) *ItemForListNotifyPoliciesOutput {
	s.Levels = v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListNotifyPoliciesOutput) SetName(v string) *ItemForListNotifyPoliciesOutput {
	s.Name = &v
	return s
}

type LevelForListNotifyPoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Channels []*string `type:"list" json:",omitempty"`

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	ResolvedChannels []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s LevelForListNotifyPoliciesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LevelForListNotifyPoliciesOutput) GoString() string {
	return s.String()
}

// SetChannels sets the Channels field's value.
func (s *LevelForListNotifyPoliciesOutput) SetChannels(v []*string) *LevelForListNotifyPoliciesOutput {
	s.Channels = v
	return s
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *LevelForListNotifyPoliciesOutput) SetContactGroupIds(v []*string) *LevelForListNotifyPoliciesOutput {
	s.ContactGroupIds = v
	return s
}

// SetLevel sets the Level field's value.
func (s *LevelForListNotifyPoliciesOutput) SetLevel(v string) *LevelForListNotifyPoliciesOutput {
	s.Level = &v
	return s
}

// SetResolvedChannels sets the ResolvedChannels field's value.
func (s *LevelForListNotifyPoliciesOutput) SetResolvedChannels(v []*string) *LevelForListNotifyPoliciesOutput {
	s.ResolvedChannels = v
	return s
}

type ListNotifyPoliciesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListNotifyPoliciesInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListNotifyPoliciesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListNotifyPoliciesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListNotifyPoliciesInput) SetFilter(v *FilterForListNotifyPoliciesInput) *ListNotifyPoliciesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListNotifyPoliciesInput) SetPageNumber(v int64) *ListNotifyPoliciesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListNotifyPoliciesInput) SetPageSize(v int64) *ListNotifyPoliciesInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListNotifyPoliciesInput) SetSortBy(v string) *ListNotifyPoliciesInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListNotifyPoliciesInput) SetSortOrder(v string) *ListNotifyPoliciesInput {
	s.SortOrder = &v
	return s
}

type ListNotifyPoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListNotifyPoliciesOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListNotifyPoliciesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListNotifyPoliciesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListNotifyPoliciesOutput) SetItems(v []*ItemForListNotifyPoliciesOutput) *ListNotifyPoliciesOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListNotifyPoliciesOutput) SetTotal(v int64) *ListNotifyPoliciesOutput {
	s.Total = &v
	return s
}
