// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package kafka

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeAclsCommon = "DescribeAcls"

// DescribeAclsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeAclsCommon operation. The "output" return
// value will be populated with the DescribeAclsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAclsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAclsCommon Send returns without error.
//
// See DescribeAclsCommon for more information on using the DescribeAclsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeAclsCommonRequest method.
//    req, resp := client.DescribeAclsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *KAFKA) DescribeAclsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeAclsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAclsCommon API operation for KAFKA.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for KAFKA's
// API operation DescribeAclsCommon for usage and error information.
func (c *KAFKA) DescribeAclsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeAclsCommonRequest(input)
	return out, req.Send()
}

// DescribeAclsCommonWithContext is the same as DescribeAclsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAclsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *KAFKA) DescribeAclsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeAclsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAcls = "DescribeAcls"

// DescribeAclsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeAcls operation. The "output" return
// value will be populated with the DescribeAclsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAclsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAclsCommon Send returns without error.
//
// See DescribeAcls for more information on using the DescribeAcls
// API call, and error handling.
//
//    // Example sending a request using the DescribeAclsRequest method.
//    req, resp := client.DescribeAclsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *KAFKA) DescribeAclsRequest(input *DescribeAclsInput) (req *request.Request, output *DescribeAclsOutput) {
	op := &request.Operation{
		Name:       opDescribeAcls,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAclsInput{}
	}

	output = &DescribeAclsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAcls API operation for KAFKA.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for KAFKA's
// API operation DescribeAcls for usage and error information.
func (c *KAFKA) DescribeAcls(input *DescribeAclsInput) (*DescribeAclsOutput, error) {
	req, out := c.DescribeAclsRequest(input)
	return out, req.Send()
}

// DescribeAclsWithContext is the same as DescribeAcls with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAcls for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *KAFKA) DescribeAclsWithContext(ctx byteplus.Context, input *DescribeAclsInput, opts ...request.Option) (*DescribeAclsOutput, error) {
	req, out := c.DescribeAclsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AclForDescribeAclsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessPolicy *string `type:"string" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	PatternType *string `type:"string" json:",omitempty"`

	Resource *string `type:"string" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AclForDescribeAclsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s AclForDescribeAclsOutput) GoString() string {
	return s.String()
}

// SetAccessPolicy sets the AccessPolicy field's value.
func (s *AclForDescribeAclsOutput) SetAccessPolicy(v string) *AclForDescribeAclsOutput {
	s.AccessPolicy = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *AclForDescribeAclsOutput) SetIp(v string) *AclForDescribeAclsOutput {
	s.Ip = &v
	return s
}

// SetPatternType sets the PatternType field's value.
func (s *AclForDescribeAclsOutput) SetPatternType(v string) *AclForDescribeAclsOutput {
	s.PatternType = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *AclForDescribeAclsOutput) SetResource(v string) *AclForDescribeAclsOutput {
	s.Resource = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *AclForDescribeAclsOutput) SetResourceType(v string) *AclForDescribeAclsOutput {
	s.ResourceType = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *AclForDescribeAclsOutput) SetUserName(v string) *AclForDescribeAclsOutput {
	s.UserName = &v
	return s
}

type DescribeAclsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessPolicy *string `type:"string" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	Ip *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	PatternType *string `type:"string" json:",omitempty"`

	Resource *string `type:"string" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAclsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAclsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAclsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeAclsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccessPolicy sets the AccessPolicy field's value.
func (s *DescribeAclsInput) SetAccessPolicy(v string) *DescribeAclsInput {
	s.AccessPolicy = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeAclsInput) SetInstanceId(v string) *DescribeAclsInput {
	s.InstanceId = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *DescribeAclsInput) SetIp(v string) *DescribeAclsInput {
	s.Ip = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeAclsInput) SetPageNumber(v int32) *DescribeAclsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeAclsInput) SetPageSize(v int32) *DescribeAclsInput {
	s.PageSize = &v
	return s
}

// SetPatternType sets the PatternType field's value.
func (s *DescribeAclsInput) SetPatternType(v string) *DescribeAclsInput {
	s.PatternType = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *DescribeAclsInput) SetResource(v string) *DescribeAclsInput {
	s.Resource = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *DescribeAclsInput) SetResourceType(v string) *DescribeAclsInput {
	s.ResourceType = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *DescribeAclsInput) SetUserName(v string) *DescribeAclsInput {
	s.UserName = &v
	return s
}

type DescribeAclsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Acls []*AclForDescribeAclsOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAclsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAclsOutput) GoString() string {
	return s.String()
}

// SetAcls sets the Acls field's value.
func (s *DescribeAclsOutput) SetAcls(v []*AclForDescribeAclsOutput) *DescribeAclsOutput {
	s.Acls = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeAclsOutput) SetTotal(v int32) *DescribeAclsOutput {
	s.Total = &v
	return s
}
