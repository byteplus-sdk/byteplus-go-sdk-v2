// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package escloud

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyIpAllowListCommon = "ModifyIpAllowList"

// ModifyIpAllowListCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyIpAllowListCommon operation. The "output" return
// value will be populated with the ModifyIpAllowListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyIpAllowListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyIpAllowListCommon Send returns without error.
//
// See ModifyIpAllowListCommon for more information on using the ModifyIpAllowListCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyIpAllowListCommonRequest method.
//    req, resp := client.ModifyIpAllowListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ESCLOUD) ModifyIpAllowListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyIpAllowListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyIpAllowListCommon API operation for ESCLOUD.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ESCLOUD's
// API operation ModifyIpAllowListCommon for usage and error information.
func (c *ESCLOUD) ModifyIpAllowListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyIpAllowListCommonRequest(input)
	return out, req.Send()
}

// ModifyIpAllowListCommonWithContext is the same as ModifyIpAllowListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyIpAllowListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ESCLOUD) ModifyIpAllowListCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyIpAllowListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyIpAllowList = "ModifyIpAllowList"

// ModifyIpAllowListRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyIpAllowList operation. The "output" return
// value will be populated with the ModifyIpAllowListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyIpAllowListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyIpAllowListCommon Send returns without error.
//
// See ModifyIpAllowList for more information on using the ModifyIpAllowList
// API call, and error handling.
//
//    // Example sending a request using the ModifyIpAllowListRequest method.
//    req, resp := client.ModifyIpAllowListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ESCLOUD) ModifyIpAllowListRequest(input *ModifyIpAllowListInput) (req *request.Request, output *ModifyIpAllowListOutput) {
	op := &request.Operation{
		Name:       opModifyIpAllowList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyIpAllowListInput{}
	}

	output = &ModifyIpAllowListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyIpAllowList API operation for ESCLOUD.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ESCLOUD's
// API operation ModifyIpAllowList for usage and error information.
func (c *ESCLOUD) ModifyIpAllowList(input *ModifyIpAllowListInput) (*ModifyIpAllowListOutput, error) {
	req, out := c.ModifyIpAllowListRequest(input)
	return out, req.Send()
}

// ModifyIpAllowListWithContext is the same as ModifyIpAllowList with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyIpAllowList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ESCLOUD) ModifyIpAllowListWithContext(ctx byteplus.Context, input *ModifyIpAllowListInput, opts ...request.Option) (*ModifyIpAllowListOutput, error) {
	req, out := c.ModifyIpAllowListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyIpAllowListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Component is a required field
	Component *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// IpList is a required field
	IpList *string `type:"string" json:",omitempty" required:"true"`

	// Type is a required field
	Type *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ModifyIpAllowListInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyIpAllowListInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyIpAllowListInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyIpAllowListInput"}
	if s.Component == nil {
		invalidParams.Add(request.NewErrParamRequired("Component"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.IpList == nil {
		invalidParams.Add(request.NewErrParamRequired("IpList"))
	}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetComponent sets the Component field's value.
func (s *ModifyIpAllowListInput) SetComponent(v string) *ModifyIpAllowListInput {
	s.Component = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyIpAllowListInput) SetInstanceId(v string) *ModifyIpAllowListInput {
	s.InstanceId = &v
	return s
}

// SetIpList sets the IpList field's value.
func (s *ModifyIpAllowListInput) SetIpList(v string) *ModifyIpAllowListInput {
	s.IpList = &v
	return s
}

// SetType sets the Type field's value.
func (s *ModifyIpAllowListInput) SetType(v string) *ModifyIpAllowListInput {
	s.Type = &v
	return s
}

type ModifyIpAllowListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Message *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyIpAllowListOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyIpAllowListOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *ModifyIpAllowListOutput) SetMessage(v string) *ModifyIpAllowListOutput {
	s.Message = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ModifyIpAllowListOutput) SetStatus(v string) *ModifyIpAllowListOutput {
	s.Status = &v
	return s
}
