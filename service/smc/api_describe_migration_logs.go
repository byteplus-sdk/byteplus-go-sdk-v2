// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package smc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeMigrationLogsCommon = "DescribeMigrationLogs"

// DescribeMigrationLogsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeMigrationLogsCommon operation. The "output" return
// value will be populated with the DescribeMigrationLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMigrationLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMigrationLogsCommon Send returns without error.
//
// See DescribeMigrationLogsCommon for more information on using the DescribeMigrationLogsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeMigrationLogsCommonRequest method.
//    req, resp := client.DescribeMigrationLogsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SMC) DescribeMigrationLogsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeMigrationLogsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeMigrationLogsCommon API operation for SMC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for SMC's
// API operation DescribeMigrationLogsCommon for usage and error information.
func (c *SMC) DescribeMigrationLogsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeMigrationLogsCommonRequest(input)
	return out, req.Send()
}

// DescribeMigrationLogsCommonWithContext is the same as DescribeMigrationLogsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMigrationLogsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SMC) DescribeMigrationLogsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeMigrationLogsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeMigrationLogs = "DescribeMigrationLogs"

// DescribeMigrationLogsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeMigrationLogs operation. The "output" return
// value will be populated with the DescribeMigrationLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMigrationLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMigrationLogsCommon Send returns without error.
//
// See DescribeMigrationLogs for more information on using the DescribeMigrationLogs
// API call, and error handling.
//
//    // Example sending a request using the DescribeMigrationLogsRequest method.
//    req, resp := client.DescribeMigrationLogsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SMC) DescribeMigrationLogsRequest(input *DescribeMigrationLogsInput) (req *request.Request, output *DescribeMigrationLogsOutput) {
	op := &request.Operation{
		Name:       opDescribeMigrationLogs,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeMigrationLogsInput{}
	}

	output = &DescribeMigrationLogsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeMigrationLogs API operation for SMC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for SMC's
// API operation DescribeMigrationLogs for usage and error information.
func (c *SMC) DescribeMigrationLogs(input *DescribeMigrationLogsInput) (*DescribeMigrationLogsOutput, error) {
	req, out := c.DescribeMigrationLogsRequest(input)
	return out, req.Send()
}

// DescribeMigrationLogsWithContext is the same as DescribeMigrationLogs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMigrationLogs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SMC) DescribeMigrationLogsWithContext(ctx byteplus.Context, input *DescribeMigrationLogsInput, opts ...request.Option) (*DescribeMigrationLogsOutput, error) {
	req, out := c.DescribeMigrationLogsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeMigrationLogsInput struct {
	_ struct{} `type:"structure"`

	// MigrationJobId is a required field
	MigrationJobId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeMigrationLogsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMigrationLogsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeMigrationLogsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeMigrationLogsInput"}
	if s.MigrationJobId == nil {
		invalidParams.Add(request.NewErrParamRequired("MigrationJobId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMigrationJobId sets the MigrationJobId field's value.
func (s *DescribeMigrationLogsInput) SetMigrationJobId(v string) *DescribeMigrationLogsInput {
	s.MigrationJobId = &v
	return s
}

type DescribeMigrationLogsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CreatedAt *string `type:"string"`

	FinishedAt *string `type:"string"`

	Logs []*LogForDescribeMigrationLogsOutput `type:"list"`

	StartedAt *string `type:"string"`
}

// String returns the string representation
func (s DescribeMigrationLogsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMigrationLogsOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *DescribeMigrationLogsOutput) SetCreatedAt(v string) *DescribeMigrationLogsOutput {
	s.CreatedAt = &v
	return s
}

// SetFinishedAt sets the FinishedAt field's value.
func (s *DescribeMigrationLogsOutput) SetFinishedAt(v string) *DescribeMigrationLogsOutput {
	s.FinishedAt = &v
	return s
}

// SetLogs sets the Logs field's value.
func (s *DescribeMigrationLogsOutput) SetLogs(v []*LogForDescribeMigrationLogsOutput) *DescribeMigrationLogsOutput {
	s.Logs = v
	return s
}

// SetStartedAt sets the StartedAt field's value.
func (s *DescribeMigrationLogsOutput) SetStartedAt(v string) *DescribeMigrationLogsOutput {
	s.StartedAt = &v
	return s
}

type LogForDescribeMigrationLogsOutput struct {
	_ struct{} `type:"structure"`

	LogLevel *string `type:"string"`

	LogMessage *string `type:"string"`

	LogTime *string `type:"string"`
}

// String returns the string representation
func (s LogForDescribeMigrationLogsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LogForDescribeMigrationLogsOutput) GoString() string {
	return s.String()
}

// SetLogLevel sets the LogLevel field's value.
func (s *LogForDescribeMigrationLogsOutput) SetLogLevel(v string) *LogForDescribeMigrationLogsOutput {
	s.LogLevel = &v
	return s
}

// SetLogMessage sets the LogMessage field's value.
func (s *LogForDescribeMigrationLogsOutput) SetLogMessage(v string) *LogForDescribeMigrationLogsOutput {
	s.LogMessage = &v
	return s
}

// SetLogTime sets the LogTime field's value.
func (s *LogForDescribeMigrationLogsOutput) SetLogTime(v string) *LogForDescribeMigrationLogsOutput {
	s.LogTime = &v
	return s
}
