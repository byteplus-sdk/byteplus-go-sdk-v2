// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package smc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeMigrationSystemSupportTypesCommon = "DescribeMigrationSystemSupportTypes"

// DescribeMigrationSystemSupportTypesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeMigrationSystemSupportTypesCommon operation. The "output" return
// value will be populated with the DescribeMigrationSystemSupportTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMigrationSystemSupportTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMigrationSystemSupportTypesCommon Send returns without error.
//
// See DescribeMigrationSystemSupportTypesCommon for more information on using the DescribeMigrationSystemSupportTypesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeMigrationSystemSupportTypesCommonRequest method.
//    req, resp := client.DescribeMigrationSystemSupportTypesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SMC) DescribeMigrationSystemSupportTypesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeMigrationSystemSupportTypesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeMigrationSystemSupportTypesCommon API operation for SMC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for SMC's
// API operation DescribeMigrationSystemSupportTypesCommon for usage and error information.
func (c *SMC) DescribeMigrationSystemSupportTypesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeMigrationSystemSupportTypesCommonRequest(input)
	return out, req.Send()
}

// DescribeMigrationSystemSupportTypesCommonWithContext is the same as DescribeMigrationSystemSupportTypesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMigrationSystemSupportTypesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SMC) DescribeMigrationSystemSupportTypesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeMigrationSystemSupportTypesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeMigrationSystemSupportTypes = "DescribeMigrationSystemSupportTypes"

// DescribeMigrationSystemSupportTypesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeMigrationSystemSupportTypes operation. The "output" return
// value will be populated with the DescribeMigrationSystemSupportTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMigrationSystemSupportTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMigrationSystemSupportTypesCommon Send returns without error.
//
// See DescribeMigrationSystemSupportTypes for more information on using the DescribeMigrationSystemSupportTypes
// API call, and error handling.
//
//    // Example sending a request using the DescribeMigrationSystemSupportTypesRequest method.
//    req, resp := client.DescribeMigrationSystemSupportTypesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SMC) DescribeMigrationSystemSupportTypesRequest(input *DescribeMigrationSystemSupportTypesInput) (req *request.Request, output *DescribeMigrationSystemSupportTypesOutput) {
	op := &request.Operation{
		Name:       opDescribeMigrationSystemSupportTypes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeMigrationSystemSupportTypesInput{}
	}

	output = &DescribeMigrationSystemSupportTypesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeMigrationSystemSupportTypes API operation for SMC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for SMC's
// API operation DescribeMigrationSystemSupportTypes for usage and error information.
func (c *SMC) DescribeMigrationSystemSupportTypes(input *DescribeMigrationSystemSupportTypesInput) (*DescribeMigrationSystemSupportTypesOutput, error) {
	req, out := c.DescribeMigrationSystemSupportTypesRequest(input)
	return out, req.Send()
}

// DescribeMigrationSystemSupportTypesWithContext is the same as DescribeMigrationSystemSupportTypes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMigrationSystemSupportTypes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SMC) DescribeMigrationSystemSupportTypesWithContext(ctx byteplus.Context, input *DescribeMigrationSystemSupportTypesInput, opts ...request.Option) (*DescribeMigrationSystemSupportTypesOutput, error) {
	req, out := c.DescribeMigrationSystemSupportTypesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeMigrationSystemSupportTypesInput struct {
	_ struct{} `type:"structure"`

	// OS is a required field
	OS *string `type:"string" required:"true"`

	// Platform is a required field
	Platform *string `type:"string" required:"true"`

	// PlatformVersion is a required field
	PlatformVersion *string `type:"string" required:"true"`

	ProjectName *string `type:"string"`
}

// String returns the string representation
func (s DescribeMigrationSystemSupportTypesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMigrationSystemSupportTypesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeMigrationSystemSupportTypesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeMigrationSystemSupportTypesInput"}
	if s.OS == nil {
		invalidParams.Add(request.NewErrParamRequired("OS"))
	}
	if s.Platform == nil {
		invalidParams.Add(request.NewErrParamRequired("Platform"))
	}
	if s.PlatformVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("PlatformVersion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOS sets the OS field's value.
func (s *DescribeMigrationSystemSupportTypesInput) SetOS(v string) *DescribeMigrationSystemSupportTypesInput {
	s.OS = &v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *DescribeMigrationSystemSupportTypesInput) SetPlatform(v string) *DescribeMigrationSystemSupportTypesInput {
	s.Platform = &v
	return s
}

// SetPlatformVersion sets the PlatformVersion field's value.
func (s *DescribeMigrationSystemSupportTypesInput) SetPlatformVersion(v string) *DescribeMigrationSystemSupportTypesInput {
	s.PlatformVersion = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeMigrationSystemSupportTypesInput) SetProjectName(v string) *DescribeMigrationSystemSupportTypesInput {
	s.ProjectName = &v
	return s
}

type DescribeMigrationSystemSupportTypesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	TargetOSInfos []*TargetOSInfoForDescribeMigrationSystemSupportTypesOutput `type:"list"`
}

// String returns the string representation
func (s DescribeMigrationSystemSupportTypesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMigrationSystemSupportTypesOutput) GoString() string {
	return s.String()
}

// SetTargetOSInfos sets the TargetOSInfos field's value.
func (s *DescribeMigrationSystemSupportTypesOutput) SetTargetOSInfos(v []*TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) *DescribeMigrationSystemSupportTypesOutput {
	s.TargetOSInfos = v
	return s
}

type TargetOSInfoForDescribeMigrationSystemSupportTypesOutput struct {
	_ struct{} `type:"structure"`

	OS *string `type:"string"`

	OSName *string `type:"string"`

	Platform *string `type:"string"`

	PlatformVersion *string `type:"string"`
}

// String returns the string representation
func (s TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) GoString() string {
	return s.String()
}

// SetOS sets the OS field's value.
func (s *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) SetOS(v string) *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput {
	s.OS = &v
	return s
}

// SetOSName sets the OSName field's value.
func (s *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) SetOSName(v string) *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput {
	s.OSName = &v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) SetPlatform(v string) *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput {
	s.Platform = &v
	return s
}

// SetPlatformVersion sets the PlatformVersion field's value.
func (s *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput) SetPlatformVersion(v string) *TargetOSInfoForDescribeMigrationSystemSupportTypesOutput {
	s.PlatformVersion = &v
	return s
}
