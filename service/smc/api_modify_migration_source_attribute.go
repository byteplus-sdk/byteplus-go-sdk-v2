// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package smc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyMigrationSourceAttributeCommon = "ModifyMigrationSourceAttribute"

// ModifyMigrationSourceAttributeCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyMigrationSourceAttributeCommon operation. The "output" return
// value will be populated with the ModifyMigrationSourceAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyMigrationSourceAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyMigrationSourceAttributeCommon Send returns without error.
//
// See ModifyMigrationSourceAttributeCommon for more information on using the ModifyMigrationSourceAttributeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyMigrationSourceAttributeCommonRequest method.
//    req, resp := client.ModifyMigrationSourceAttributeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SMC) ModifyMigrationSourceAttributeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyMigrationSourceAttributeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyMigrationSourceAttributeCommon API operation for SMC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for SMC's
// API operation ModifyMigrationSourceAttributeCommon for usage and error information.
func (c *SMC) ModifyMigrationSourceAttributeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyMigrationSourceAttributeCommonRequest(input)
	return out, req.Send()
}

// ModifyMigrationSourceAttributeCommonWithContext is the same as ModifyMigrationSourceAttributeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyMigrationSourceAttributeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SMC) ModifyMigrationSourceAttributeCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyMigrationSourceAttributeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyMigrationSourceAttribute = "ModifyMigrationSourceAttribute"

// ModifyMigrationSourceAttributeRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyMigrationSourceAttribute operation. The "output" return
// value will be populated with the ModifyMigrationSourceAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyMigrationSourceAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyMigrationSourceAttributeCommon Send returns without error.
//
// See ModifyMigrationSourceAttribute for more information on using the ModifyMigrationSourceAttribute
// API call, and error handling.
//
//    // Example sending a request using the ModifyMigrationSourceAttributeRequest method.
//    req, resp := client.ModifyMigrationSourceAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SMC) ModifyMigrationSourceAttributeRequest(input *ModifyMigrationSourceAttributeInput) (req *request.Request, output *ModifyMigrationSourceAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyMigrationSourceAttribute,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyMigrationSourceAttributeInput{}
	}

	output = &ModifyMigrationSourceAttributeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyMigrationSourceAttribute API operation for SMC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for SMC's
// API operation ModifyMigrationSourceAttribute for usage and error information.
func (c *SMC) ModifyMigrationSourceAttribute(input *ModifyMigrationSourceAttributeInput) (*ModifyMigrationSourceAttributeOutput, error) {
	req, out := c.ModifyMigrationSourceAttributeRequest(input)
	return out, req.Send()
}

// ModifyMigrationSourceAttributeWithContext is the same as ModifyMigrationSourceAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyMigrationSourceAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SMC) ModifyMigrationSourceAttributeWithContext(ctx byteplus.Context, input *ModifyMigrationSourceAttributeInput, opts ...request.Option) (*ModifyMigrationSourceAttributeOutput, error) {
	req, out := c.ModifyMigrationSourceAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyMigrationSourceAttributeInput struct {
	_ struct{} `type:"structure"`

	MigrationSourceDescription *string `type:"string"`

	// SourceId is a required field
	SourceId *string `type:"string" required:"true"`

	SourceName *string `type:"string"`
}

// String returns the string representation
func (s ModifyMigrationSourceAttributeInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyMigrationSourceAttributeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyMigrationSourceAttributeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyMigrationSourceAttributeInput"}
	if s.SourceId == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMigrationSourceDescription sets the MigrationSourceDescription field's value.
func (s *ModifyMigrationSourceAttributeInput) SetMigrationSourceDescription(v string) *ModifyMigrationSourceAttributeInput {
	s.MigrationSourceDescription = &v
	return s
}

// SetSourceId sets the SourceId field's value.
func (s *ModifyMigrationSourceAttributeInput) SetSourceId(v string) *ModifyMigrationSourceAttributeInput {
	s.SourceId = &v
	return s
}

// SetSourceName sets the SourceName field's value.
func (s *ModifyMigrationSourceAttributeInput) SetSourceName(v string) *ModifyMigrationSourceAttributeInput {
	s.SourceName = &v
	return s
}

type ModifyMigrationSourceAttributeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	SourceId *string `type:"string"`
}

// String returns the string representation
func (s ModifyMigrationSourceAttributeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyMigrationSourceAttributeOutput) GoString() string {
	return s.String()
}

// SetSourceId sets the SourceId field's value.
func (s *ModifyMigrationSourceAttributeOutput) SetSourceId(v string) *ModifyMigrationSourceAttributeOutput {
	s.SourceId = &v
	return s
}
