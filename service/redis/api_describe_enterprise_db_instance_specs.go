// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeEnterpriseDBInstanceSpecsCommon = "DescribeEnterpriseDBInstanceSpecs"

// DescribeEnterpriseDBInstanceSpecsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeEnterpriseDBInstanceSpecsCommon operation. The "output" return
// value will be populated with the DescribeEnterpriseDBInstanceSpecsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEnterpriseDBInstanceSpecsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEnterpriseDBInstanceSpecsCommon Send returns without error.
//
// See DescribeEnterpriseDBInstanceSpecsCommon for more information on using the DescribeEnterpriseDBInstanceSpecsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeEnterpriseDBInstanceSpecsCommonRequest method.
//    req, resp := client.DescribeEnterpriseDBInstanceSpecsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeEnterpriseDBInstanceSpecsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeEnterpriseDBInstanceSpecsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeEnterpriseDBInstanceSpecsCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeEnterpriseDBInstanceSpecsCommon for usage and error information.
func (c *REDIS) DescribeEnterpriseDBInstanceSpecsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeEnterpriseDBInstanceSpecsCommonRequest(input)
	return out, req.Send()
}

// DescribeEnterpriseDBInstanceSpecsCommonWithContext is the same as DescribeEnterpriseDBInstanceSpecsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEnterpriseDBInstanceSpecsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeEnterpriseDBInstanceSpecsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeEnterpriseDBInstanceSpecsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeEnterpriseDBInstanceSpecs = "DescribeEnterpriseDBInstanceSpecs"

// DescribeEnterpriseDBInstanceSpecsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeEnterpriseDBInstanceSpecs operation. The "output" return
// value will be populated with the DescribeEnterpriseDBInstanceSpecsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEnterpriseDBInstanceSpecsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEnterpriseDBInstanceSpecsCommon Send returns without error.
//
// See DescribeEnterpriseDBInstanceSpecs for more information on using the DescribeEnterpriseDBInstanceSpecs
// API call, and error handling.
//
//    // Example sending a request using the DescribeEnterpriseDBInstanceSpecsRequest method.
//    req, resp := client.DescribeEnterpriseDBInstanceSpecsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeEnterpriseDBInstanceSpecsRequest(input *DescribeEnterpriseDBInstanceSpecsInput) (req *request.Request, output *DescribeEnterpriseDBInstanceSpecsOutput) {
	op := &request.Operation{
		Name:       opDescribeEnterpriseDBInstanceSpecs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeEnterpriseDBInstanceSpecsInput{}
	}

	output = &DescribeEnterpriseDBInstanceSpecsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeEnterpriseDBInstanceSpecs API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeEnterpriseDBInstanceSpecs for usage and error information.
func (c *REDIS) DescribeEnterpriseDBInstanceSpecs(input *DescribeEnterpriseDBInstanceSpecsInput) (*DescribeEnterpriseDBInstanceSpecsOutput, error) {
	req, out := c.DescribeEnterpriseDBInstanceSpecsRequest(input)
	return out, req.Send()
}

// DescribeEnterpriseDBInstanceSpecsWithContext is the same as DescribeEnterpriseDBInstanceSpecs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEnterpriseDBInstanceSpecs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeEnterpriseDBInstanceSpecsWithContext(ctx byteplus.Context, input *DescribeEnterpriseDBInstanceSpecsInput, opts ...request.Option) (*DescribeEnterpriseDBInstanceSpecsOutput, error) {
	req, out := c.DescribeEnterpriseDBInstanceSpecsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeEnterpriseDBInstanceSpecsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DataLayout *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeEnterpriseDBInstanceSpecsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEnterpriseDBInstanceSpecsInput) GoString() string {
	return s.String()
}

// SetDataLayout sets the DataLayout field's value.
func (s *DescribeEnterpriseDBInstanceSpecsInput) SetDataLayout(v string) *DescribeEnterpriseDBInstanceSpecsInput {
	s.DataLayout = &v
	return s
}

type DescribeEnterpriseDBInstanceSpecsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceSpecs []*InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeEnterpriseDBInstanceSpecsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEnterpriseDBInstanceSpecsOutput) GoString() string {
	return s.String()
}

// SetInstanceSpecs sets the InstanceSpecs field's value.
func (s *DescribeEnterpriseDBInstanceSpecsOutput) SetInstanceSpecs(v []*InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) *DescribeEnterpriseDBInstanceSpecsOutput {
	s.InstanceSpecs = v
	return s
}

type InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DataLayout *string `type:"string" json:",omitempty"`

	FlashCapacityMax *int32 `type:"int32" json:",omitempty"`

	FlashCapacityMin *int32 `type:"int32" json:",omitempty"`

	FlashCapacityStep *int32 `type:"int32" json:",omitempty"`

	RamCapacity *int32 `type:"int32" json:",omitempty"`

	ShardNumberSpecs []*ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) GoString() string {
	return s.String()
}

// SetDataLayout sets the DataLayout field's value.
func (s *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetDataLayout(v string) *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.DataLayout = &v
	return s
}

// SetFlashCapacityMax sets the FlashCapacityMax field's value.
func (s *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetFlashCapacityMax(v int32) *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.FlashCapacityMax = &v
	return s
}

// SetFlashCapacityMin sets the FlashCapacityMin field's value.
func (s *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetFlashCapacityMin(v int32) *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.FlashCapacityMin = &v
	return s
}

// SetFlashCapacityStep sets the FlashCapacityStep field's value.
func (s *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetFlashCapacityStep(v int32) *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.FlashCapacityStep = &v
	return s
}

// SetRamCapacity sets the RamCapacity field's value.
func (s *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetRamCapacity(v int32) *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.RamCapacity = &v
	return s
}

// SetShardNumberSpecs sets the ShardNumberSpecs field's value.
func (s *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetShardNumberSpecs(v []*ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) *InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.ShardNumberSpecs = v
	return s
}

type ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DefaultBandwidth *int32 `type:"int32" json:",omitempty"`

	DefaultMaxConnections *int32 `type:"int32" json:",omitempty"`

	ShardNumber *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) GoString() string {
	return s.String()
}

// SetDefaultBandwidth sets the DefaultBandwidth field's value.
func (s *ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetDefaultBandwidth(v int32) *ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.DefaultBandwidth = &v
	return s
}

// SetDefaultMaxConnections sets the DefaultMaxConnections field's value.
func (s *ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetDefaultMaxConnections(v int32) *ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.DefaultMaxConnections = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) SetShardNumber(v int32) *ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput {
	s.ShardNumber = &v
	return s
}
