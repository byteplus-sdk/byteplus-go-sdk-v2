// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateEnterpriseDBInstanceCommon = "CreateEnterpriseDBInstance"

// CreateEnterpriseDBInstanceCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateEnterpriseDBInstanceCommon operation. The "output" return
// value will be populated with the CreateEnterpriseDBInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateEnterpriseDBInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateEnterpriseDBInstanceCommon Send returns without error.
//
// See CreateEnterpriseDBInstanceCommon for more information on using the CreateEnterpriseDBInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateEnterpriseDBInstanceCommonRequest method.
//    req, resp := client.CreateEnterpriseDBInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) CreateEnterpriseDBInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateEnterpriseDBInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateEnterpriseDBInstanceCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation CreateEnterpriseDBInstanceCommon for usage and error information.
func (c *REDIS) CreateEnterpriseDBInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateEnterpriseDBInstanceCommonRequest(input)
	return out, req.Send()
}

// CreateEnterpriseDBInstanceCommonWithContext is the same as CreateEnterpriseDBInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateEnterpriseDBInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) CreateEnterpriseDBInstanceCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateEnterpriseDBInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateEnterpriseDBInstance = "CreateEnterpriseDBInstance"

// CreateEnterpriseDBInstanceRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateEnterpriseDBInstance operation. The "output" return
// value will be populated with the CreateEnterpriseDBInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateEnterpriseDBInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateEnterpriseDBInstanceCommon Send returns without error.
//
// See CreateEnterpriseDBInstance for more information on using the CreateEnterpriseDBInstance
// API call, and error handling.
//
//    // Example sending a request using the CreateEnterpriseDBInstanceRequest method.
//    req, resp := client.CreateEnterpriseDBInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) CreateEnterpriseDBInstanceRequest(input *CreateEnterpriseDBInstanceInput) (req *request.Request, output *CreateEnterpriseDBInstanceOutput) {
	op := &request.Operation{
		Name:       opCreateEnterpriseDBInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateEnterpriseDBInstanceInput{}
	}

	output = &CreateEnterpriseDBInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateEnterpriseDBInstance API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation CreateEnterpriseDBInstance for usage and error information.
func (c *REDIS) CreateEnterpriseDBInstance(input *CreateEnterpriseDBInstanceInput) (*CreateEnterpriseDBInstanceOutput, error) {
	req, out := c.CreateEnterpriseDBInstanceRequest(input)
	return out, req.Send()
}

// CreateEnterpriseDBInstanceWithContext is the same as CreateEnterpriseDBInstance with the addition of
// the ability to pass a context and additional request options.
//
// See CreateEnterpriseDBInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) CreateEnterpriseDBInstanceWithContext(ctx byteplus.Context, input *CreateEnterpriseDBInstanceInput, opts ...request.Option) (*CreateEnterpriseDBInstanceOutput, error) {
	req, out := c.CreateEnterpriseDBInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfigureNodeForCreateEnterpriseDBInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AZ *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConfigureNodeForCreateEnterpriseDBInstanceInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigureNodeForCreateEnterpriseDBInstanceInput) GoString() string {
	return s.String()
}

// SetAZ sets the AZ field's value.
func (s *ConfigureNodeForCreateEnterpriseDBInstanceInput) SetAZ(v string) *ConfigureNodeForCreateEnterpriseDBInstanceInput {
	s.AZ = &v
	return s
}

type CreateEnterpriseDBInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowListIds []*string `type:"list" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	// ChargeType is a required field
	ChargeType *string `type:"string" json:",omitempty" required:"true"`

	ClientToken *string `type:"string" json:",omitempty"`

	ConfigureNodes []*ConfigureNodeForCreateEnterpriseDBInstanceInput `type:"list" json:",omitempty"`

	// DataLayout is a required field
	DataLayout *string `type:"string" json:",omitempty" required:"true"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	// FlashPerShard is a required field
	FlashPerShard *int32 `type:"int32" json:",omitempty" required:"true"`

	InstanceName *string `type:"string" json:",omitempty"`

	Modules []*string `type:"list" json:",omitempty"`

	MultiAZ *string `type:"string" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	PurchaseMonths *int32 `type:"int32" json:",omitempty"`

	// RamPerShard is a required field
	RamPerShard *int32 `type:"int32" json:",omitempty" required:"true"`

	// RegionId is a required field
	RegionId *string `type:"string" json:",omitempty" required:"true"`

	// ShardNumber is a required field
	ShardNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// SubnetId is a required field
	SubnetId *string `type:"string" json:",omitempty" required:"true"`

	Tags []*TagForCreateEnterpriseDBInstanceInput `type:"list" json:",omitempty"`

	// VpcId is a required field
	VpcId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateEnterpriseDBInstanceInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateEnterpriseDBInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateEnterpriseDBInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateEnterpriseDBInstanceInput"}
	if s.ChargeType == nil {
		invalidParams.Add(request.NewErrParamRequired("ChargeType"))
	}
	if s.DataLayout == nil {
		invalidParams.Add(request.NewErrParamRequired("DataLayout"))
	}
	if s.FlashPerShard == nil {
		invalidParams.Add(request.NewErrParamRequired("FlashPerShard"))
	}
	if s.RamPerShard == nil {
		invalidParams.Add(request.NewErrParamRequired("RamPerShard"))
	}
	if s.RegionId == nil {
		invalidParams.Add(request.NewErrParamRequired("RegionId"))
	}
	if s.ShardNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("ShardNumber"))
	}
	if s.SubnetId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubnetId"))
	}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllowListIds sets the AllowListIds field's value.
func (s *CreateEnterpriseDBInstanceInput) SetAllowListIds(v []*string) *CreateEnterpriseDBInstanceInput {
	s.AllowListIds = v
	return s
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *CreateEnterpriseDBInstanceInput) SetAutoRenew(v bool) *CreateEnterpriseDBInstanceInput {
	s.AutoRenew = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *CreateEnterpriseDBInstanceInput) SetChargeType(v string) *CreateEnterpriseDBInstanceInput {
	s.ChargeType = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateEnterpriseDBInstanceInput) SetClientToken(v string) *CreateEnterpriseDBInstanceInput {
	s.ClientToken = &v
	return s
}

// SetConfigureNodes sets the ConfigureNodes field's value.
func (s *CreateEnterpriseDBInstanceInput) SetConfigureNodes(v []*ConfigureNodeForCreateEnterpriseDBInstanceInput) *CreateEnterpriseDBInstanceInput {
	s.ConfigureNodes = v
	return s
}

// SetDataLayout sets the DataLayout field's value.
func (s *CreateEnterpriseDBInstanceInput) SetDataLayout(v string) *CreateEnterpriseDBInstanceInput {
	s.DataLayout = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *CreateEnterpriseDBInstanceInput) SetDeletionProtection(v string) *CreateEnterpriseDBInstanceInput {
	s.DeletionProtection = &v
	return s
}

// SetFlashPerShard sets the FlashPerShard field's value.
func (s *CreateEnterpriseDBInstanceInput) SetFlashPerShard(v int32) *CreateEnterpriseDBInstanceInput {
	s.FlashPerShard = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *CreateEnterpriseDBInstanceInput) SetInstanceName(v string) *CreateEnterpriseDBInstanceInput {
	s.InstanceName = &v
	return s
}

// SetModules sets the Modules field's value.
func (s *CreateEnterpriseDBInstanceInput) SetModules(v []*string) *CreateEnterpriseDBInstanceInput {
	s.Modules = v
	return s
}

// SetMultiAZ sets the MultiAZ field's value.
func (s *CreateEnterpriseDBInstanceInput) SetMultiAZ(v string) *CreateEnterpriseDBInstanceInput {
	s.MultiAZ = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateEnterpriseDBInstanceInput) SetPassword(v string) *CreateEnterpriseDBInstanceInput {
	s.Password = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateEnterpriseDBInstanceInput) SetProjectName(v string) *CreateEnterpriseDBInstanceInput {
	s.ProjectName = &v
	return s
}

// SetPurchaseMonths sets the PurchaseMonths field's value.
func (s *CreateEnterpriseDBInstanceInput) SetPurchaseMonths(v int32) *CreateEnterpriseDBInstanceInput {
	s.PurchaseMonths = &v
	return s
}

// SetRamPerShard sets the RamPerShard field's value.
func (s *CreateEnterpriseDBInstanceInput) SetRamPerShard(v int32) *CreateEnterpriseDBInstanceInput {
	s.RamPerShard = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *CreateEnterpriseDBInstanceInput) SetRegionId(v string) *CreateEnterpriseDBInstanceInput {
	s.RegionId = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *CreateEnterpriseDBInstanceInput) SetShardNumber(v int32) *CreateEnterpriseDBInstanceInput {
	s.ShardNumber = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *CreateEnterpriseDBInstanceInput) SetSubnetId(v string) *CreateEnterpriseDBInstanceInput {
	s.SubnetId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateEnterpriseDBInstanceInput) SetTags(v []*TagForCreateEnterpriseDBInstanceInput) *CreateEnterpriseDBInstanceInput {
	s.Tags = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *CreateEnterpriseDBInstanceInput) SetVpcId(v string) *CreateEnterpriseDBInstanceInput {
	s.VpcId = &v
	return s
}

type CreateEnterpriseDBInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`

	OrderNO *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateEnterpriseDBInstanceOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateEnterpriseDBInstanceOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateEnterpriseDBInstanceOutput) SetInstanceId(v string) *CreateEnterpriseDBInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetOrderNO sets the OrderNO field's value.
func (s *CreateEnterpriseDBInstanceOutput) SetOrderNO(v string) *CreateEnterpriseDBInstanceOutput {
	s.OrderNO = &v
	return s
}

type TagForCreateEnterpriseDBInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForCreateEnterpriseDBInstanceInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateEnterpriseDBInstanceInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateEnterpriseDBInstanceInput) SetKey(v string) *TagForCreateEnterpriseDBInstanceInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateEnterpriseDBInstanceInput) SetValue(v string) *TagForCreateEnterpriseDBInstanceInput {
	s.Value = &v
	return s
}
