// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyDBInstanceVisitAddressCommon = "ModifyDBInstanceVisitAddress"

// ModifyDBInstanceVisitAddressCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyDBInstanceVisitAddressCommon operation. The "output" return
// value will be populated with the ModifyDBInstanceVisitAddressCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceVisitAddressCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceVisitAddressCommon Send returns without error.
//
// See ModifyDBInstanceVisitAddressCommon for more information on using the ModifyDBInstanceVisitAddressCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceVisitAddressCommonRequest method.
//    req, resp := client.ModifyDBInstanceVisitAddressCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) ModifyDBInstanceVisitAddressCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBInstanceVisitAddressCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceVisitAddressCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation ModifyDBInstanceVisitAddressCommon for usage and error information.
func (c *REDIS) ModifyDBInstanceVisitAddressCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceVisitAddressCommonRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceVisitAddressCommonWithContext is the same as ModifyDBInstanceVisitAddressCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceVisitAddressCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) ModifyDBInstanceVisitAddressCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceVisitAddressCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBInstanceVisitAddress = "ModifyDBInstanceVisitAddress"

// ModifyDBInstanceVisitAddressRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyDBInstanceVisitAddress operation. The "output" return
// value will be populated with the ModifyDBInstanceVisitAddressCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceVisitAddressCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceVisitAddressCommon Send returns without error.
//
// See ModifyDBInstanceVisitAddress for more information on using the ModifyDBInstanceVisitAddress
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceVisitAddressRequest method.
//    req, resp := client.ModifyDBInstanceVisitAddressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) ModifyDBInstanceVisitAddressRequest(input *ModifyDBInstanceVisitAddressInput) (req *request.Request, output *ModifyDBInstanceVisitAddressOutput) {
	op := &request.Operation{
		Name:       opModifyDBInstanceVisitAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBInstanceVisitAddressInput{}
	}

	output = &ModifyDBInstanceVisitAddressOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceVisitAddress API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation ModifyDBInstanceVisitAddress for usage and error information.
func (c *REDIS) ModifyDBInstanceVisitAddress(input *ModifyDBInstanceVisitAddressInput) (*ModifyDBInstanceVisitAddressOutput, error) {
	req, out := c.ModifyDBInstanceVisitAddressRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceVisitAddressWithContext is the same as ModifyDBInstanceVisitAddress with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceVisitAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) ModifyDBInstanceVisitAddressWithContext(ctx byteplus.Context, input *ModifyDBInstanceVisitAddressInput, opts ...request.Option) (*ModifyDBInstanceVisitAddressOutput, error) {
	req, out := c.ModifyDBInstanceVisitAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBInstanceVisitAddressInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AddrType is a required field
	AddrType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfAddrTypeForModifyDBInstanceVisitAddressInput"`

	ClientToken *string `type:"string" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	NewAddressPrefix *string `type:"string" json:",omitempty"`

	NewPort *int32 `type:"int32" json:",omitempty"`

	UpgradeRegionDomain *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ModifyDBInstanceVisitAddressInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceVisitAddressInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBInstanceVisitAddressInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBInstanceVisitAddressInput"}
	if s.AddrType == nil {
		invalidParams.Add(request.NewErrParamRequired("AddrType"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAddrType sets the AddrType field's value.
func (s *ModifyDBInstanceVisitAddressInput) SetAddrType(v string) *ModifyDBInstanceVisitAddressInput {
	s.AddrType = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyDBInstanceVisitAddressInput) SetClientToken(v string) *ModifyDBInstanceVisitAddressInput {
	s.ClientToken = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBInstanceVisitAddressInput) SetInstanceId(v string) *ModifyDBInstanceVisitAddressInput {
	s.InstanceId = &v
	return s
}

// SetNewAddressPrefix sets the NewAddressPrefix field's value.
func (s *ModifyDBInstanceVisitAddressInput) SetNewAddressPrefix(v string) *ModifyDBInstanceVisitAddressInput {
	s.NewAddressPrefix = &v
	return s
}

// SetNewPort sets the NewPort field's value.
func (s *ModifyDBInstanceVisitAddressInput) SetNewPort(v int32) *ModifyDBInstanceVisitAddressInput {
	s.NewPort = &v
	return s
}

// SetUpgradeRegionDomain sets the UpgradeRegionDomain field's value.
func (s *ModifyDBInstanceVisitAddressInput) SetUpgradeRegionDomain(v bool) *ModifyDBInstanceVisitAddressInput {
	s.UpgradeRegionDomain = &v
	return s
}

type ModifyDBInstanceVisitAddressOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBInstanceVisitAddressOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceVisitAddressOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPrivate is a EnumOfAddrTypeForModifyDBInstanceVisitAddressInput enum value
	EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPrivate = "Private"

	// EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPublic is a EnumOfAddrTypeForModifyDBInstanceVisitAddressInput enum value
	EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPublic = "Public"

	// EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPublicZone is a EnumOfAddrTypeForModifyDBInstanceVisitAddressInput enum value
	EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPublicZone = "PublicZone"

	// EnumOfAddrTypeForModifyDBInstanceVisitAddressInputStorageInner is a EnumOfAddrTypeForModifyDBInstanceVisitAddressInput enum value
	EnumOfAddrTypeForModifyDBInstanceVisitAddressInputStorageInner = "StorageInner"

	// EnumOfAddrTypeForModifyDBInstanceVisitAddressInputDirectLink is a EnumOfAddrTypeForModifyDBInstanceVisitAddressInput enum value
	EnumOfAddrTypeForModifyDBInstanceVisitAddressInputDirectLink = "DirectLink"

	// EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPublicZoneAffinity is a EnumOfAddrTypeForModifyDBInstanceVisitAddressInput enum value
	EnumOfAddrTypeForModifyDBInstanceVisitAddressInputPublicZoneAffinity = "PublicZoneAffinity"
)
