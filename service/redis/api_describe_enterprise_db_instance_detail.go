// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeEnterpriseDBInstanceDetailCommon = "DescribeEnterpriseDBInstanceDetail"

// DescribeEnterpriseDBInstanceDetailCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeEnterpriseDBInstanceDetailCommon operation. The "output" return
// value will be populated with the DescribeEnterpriseDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEnterpriseDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEnterpriseDBInstanceDetailCommon Send returns without error.
//
// See DescribeEnterpriseDBInstanceDetailCommon for more information on using the DescribeEnterpriseDBInstanceDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeEnterpriseDBInstanceDetailCommonRequest method.
//    req, resp := client.DescribeEnterpriseDBInstanceDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeEnterpriseDBInstanceDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeEnterpriseDBInstanceDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeEnterpriseDBInstanceDetailCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeEnterpriseDBInstanceDetailCommon for usage and error information.
func (c *REDIS) DescribeEnterpriseDBInstanceDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeEnterpriseDBInstanceDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeEnterpriseDBInstanceDetailCommonWithContext is the same as DescribeEnterpriseDBInstanceDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEnterpriseDBInstanceDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeEnterpriseDBInstanceDetailCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeEnterpriseDBInstanceDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeEnterpriseDBInstanceDetail = "DescribeEnterpriseDBInstanceDetail"

// DescribeEnterpriseDBInstanceDetailRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeEnterpriseDBInstanceDetail operation. The "output" return
// value will be populated with the DescribeEnterpriseDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEnterpriseDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEnterpriseDBInstanceDetailCommon Send returns without error.
//
// See DescribeEnterpriseDBInstanceDetail for more information on using the DescribeEnterpriseDBInstanceDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeEnterpriseDBInstanceDetailRequest method.
//    req, resp := client.DescribeEnterpriseDBInstanceDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeEnterpriseDBInstanceDetailRequest(input *DescribeEnterpriseDBInstanceDetailInput) (req *request.Request, output *DescribeEnterpriseDBInstanceDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeEnterpriseDBInstanceDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeEnterpriseDBInstanceDetailInput{}
	}

	output = &DescribeEnterpriseDBInstanceDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeEnterpriseDBInstanceDetail API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeEnterpriseDBInstanceDetail for usage and error information.
func (c *REDIS) DescribeEnterpriseDBInstanceDetail(input *DescribeEnterpriseDBInstanceDetailInput) (*DescribeEnterpriseDBInstanceDetailOutput, error) {
	req, out := c.DescribeEnterpriseDBInstanceDetailRequest(input)
	return out, req.Send()
}

// DescribeEnterpriseDBInstanceDetailWithContext is the same as DescribeEnterpriseDBInstanceDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEnterpriseDBInstanceDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeEnterpriseDBInstanceDetailWithContext(ctx byteplus.Context, input *DescribeEnterpriseDBInstanceDetailInput, opts ...request.Option) (*DescribeEnterpriseDBInstanceDetailOutput, error) {
	req, out := c.DescribeEnterpriseDBInstanceDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CapacityForDescribeEnterpriseDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`

	Used *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CapacityForDescribeEnterpriseDBInstanceDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CapacityForDescribeEnterpriseDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetTotal sets the Total field's value.
func (s *CapacityForDescribeEnterpriseDBInstanceDetailOutput) SetTotal(v int64) *CapacityForDescribeEnterpriseDBInstanceDetailOutput {
	s.Total = &v
	return s
}

// SetUsed sets the Used field's value.
func (s *CapacityForDescribeEnterpriseDBInstanceDetailOutput) SetUsed(v int64) *CapacityForDescribeEnterpriseDBInstanceDetailOutput {
	s.Used = &v
	return s
}

type DescribeEnterpriseDBInstanceDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeEnterpriseDBInstanceDetailInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEnterpriseDBInstanceDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeEnterpriseDBInstanceDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeEnterpriseDBInstanceDetailInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeEnterpriseDBInstanceDetailInput) SetInstanceId(v string) *DescribeEnterpriseDBInstanceDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeEnterpriseDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	Capacity *CapacityForDescribeEnterpriseDBInstanceDetailOutput `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DataLayout *string `type:"string" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty"`

	ExpiredTime *string `type:"string" json:",omitempty"`

	FlashPerShard *int32 `type:"int32" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	MaintenanceTime *string `type:"string" json:",omitempty"`

	Modules []*string `type:"list" json:",omitempty"`

	MultiAZ *string `type:"string" json:",omitempty"`

	NodeNumber *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RamPerShard *int32 `type:"int32" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	ShardNumber *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubnetId *string `type:"string" json:",omitempty"`

	Tags []*TagForDescribeEnterpriseDBInstanceDetailOutput `type:"list" json:",omitempty"`

	VisitAddrs []*VisitAddrForDescribeEnterpriseDBInstanceDetailOutput `type:"list" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeEnterpriseDBInstanceDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEnterpriseDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetAutoRenew(v bool) *DescribeEnterpriseDBInstanceDetailOutput {
	s.AutoRenew = &v
	return s
}

// SetCapacity sets the Capacity field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetCapacity(v *CapacityForDescribeEnterpriseDBInstanceDetailOutput) *DescribeEnterpriseDBInstanceDetailOutput {
	s.Capacity = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetChargeType(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.ChargeType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetCreateTime(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDataLayout sets the DataLayout field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetDataLayout(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.DataLayout = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetDeletionProtection(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.DeletionProtection = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetEngineVersion(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.EngineVersion = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetExpiredTime(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.ExpiredTime = &v
	return s
}

// SetFlashPerShard sets the FlashPerShard field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetFlashPerShard(v int32) *DescribeEnterpriseDBInstanceDetailOutput {
	s.FlashPerShard = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetInstanceId(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetInstanceName(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.InstanceName = &v
	return s
}

// SetMaintenanceTime sets the MaintenanceTime field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetMaintenanceTime(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.MaintenanceTime = &v
	return s
}

// SetModules sets the Modules field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetModules(v []*string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.Modules = v
	return s
}

// SetMultiAZ sets the MultiAZ field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetMultiAZ(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.MultiAZ = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetNodeNumber(v int32) *DescribeEnterpriseDBInstanceDetailOutput {
	s.NodeNumber = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetProjectName(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.ProjectName = &v
	return s
}

// SetRamPerShard sets the RamPerShard field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetRamPerShard(v int32) *DescribeEnterpriseDBInstanceDetailOutput {
	s.RamPerShard = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetRegionId(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.RegionId = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetShardNumber(v int32) *DescribeEnterpriseDBInstanceDetailOutput {
	s.ShardNumber = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetStatus(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.Status = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetSubnetId(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.SubnetId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetTags(v []*TagForDescribeEnterpriseDBInstanceDetailOutput) *DescribeEnterpriseDBInstanceDetailOutput {
	s.Tags = v
	return s
}

// SetVisitAddrs sets the VisitAddrs field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetVisitAddrs(v []*VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) *DescribeEnterpriseDBInstanceDetailOutput {
	s.VisitAddrs = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetVpcId(v string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.VpcId = &v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *DescribeEnterpriseDBInstanceDetailOutput) SetZoneIds(v []*string) *DescribeEnterpriseDBInstanceDetailOutput {
	s.ZoneIds = v
	return s
}

type TagForDescribeEnterpriseDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeEnterpriseDBInstanceDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeEnterpriseDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeEnterpriseDBInstanceDetailOutput) SetKey(v string) *TagForDescribeEnterpriseDBInstanceDetailOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeEnterpriseDBInstanceDetailOutput) SetValue(v string) *TagForDescribeEnterpriseDBInstanceDetailOutput {
	s.Value = &v
	return s
}

type VisitAddrForDescribeEnterpriseDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AddrType *string `type:"string" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	IPAddress *string `type:"string" json:",omitempty"`

	Port *string `type:"string" json:",omitempty"`

	VIP *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAddrType sets the AddrType field's value.
func (s *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) SetAddrType(v string) *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput {
	s.AddrType = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) SetEipId(v string) *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput {
	s.EipId = &v
	return s
}

// SetIPAddress sets the IPAddress field's value.
func (s *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) SetIPAddress(v string) *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput {
	s.IPAddress = &v
	return s
}

// SetPort sets the Port field's value.
func (s *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) SetPort(v string) *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput {
	s.Port = &v
	return s
}

// SetVIP sets the VIP field's value.
func (s *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput) SetVIP(v string) *VisitAddrForDescribeEnterpriseDBInstanceDetailOutput {
	s.VIP = &v
	return s
}
