// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteDBEndpointDirectLinkAddressCommon = "DeleteDBEndpointDirectLinkAddress"

// DeleteDBEndpointDirectLinkAddressCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteDBEndpointDirectLinkAddressCommon operation. The "output" return
// value will be populated with the DeleteDBEndpointDirectLinkAddressCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDBEndpointDirectLinkAddressCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDBEndpointDirectLinkAddressCommon Send returns without error.
//
// See DeleteDBEndpointDirectLinkAddressCommon for more information on using the DeleteDBEndpointDirectLinkAddressCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteDBEndpointDirectLinkAddressCommonRequest method.
//    req, resp := client.DeleteDBEndpointDirectLinkAddressCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DeleteDBEndpointDirectLinkAddressCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteDBEndpointDirectLinkAddressCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteDBEndpointDirectLinkAddressCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DeleteDBEndpointDirectLinkAddressCommon for usage and error information.
func (c *REDIS) DeleteDBEndpointDirectLinkAddressCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteDBEndpointDirectLinkAddressCommonRequest(input)
	return out, req.Send()
}

// DeleteDBEndpointDirectLinkAddressCommonWithContext is the same as DeleteDBEndpointDirectLinkAddressCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDBEndpointDirectLinkAddressCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DeleteDBEndpointDirectLinkAddressCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteDBEndpointDirectLinkAddressCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDBEndpointDirectLinkAddress = "DeleteDBEndpointDirectLinkAddress"

// DeleteDBEndpointDirectLinkAddressRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteDBEndpointDirectLinkAddress operation. The "output" return
// value will be populated with the DeleteDBEndpointDirectLinkAddressCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDBEndpointDirectLinkAddressCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDBEndpointDirectLinkAddressCommon Send returns without error.
//
// See DeleteDBEndpointDirectLinkAddress for more information on using the DeleteDBEndpointDirectLinkAddress
// API call, and error handling.
//
//    // Example sending a request using the DeleteDBEndpointDirectLinkAddressRequest method.
//    req, resp := client.DeleteDBEndpointDirectLinkAddressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DeleteDBEndpointDirectLinkAddressRequest(input *DeleteDBEndpointDirectLinkAddressInput) (req *request.Request, output *DeleteDBEndpointDirectLinkAddressOutput) {
	op := &request.Operation{
		Name:       opDeleteDBEndpointDirectLinkAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteDBEndpointDirectLinkAddressInput{}
	}

	output = &DeleteDBEndpointDirectLinkAddressOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteDBEndpointDirectLinkAddress API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DeleteDBEndpointDirectLinkAddress for usage and error information.
func (c *REDIS) DeleteDBEndpointDirectLinkAddress(input *DeleteDBEndpointDirectLinkAddressInput) (*DeleteDBEndpointDirectLinkAddressOutput, error) {
	req, out := c.DeleteDBEndpointDirectLinkAddressRequest(input)
	return out, req.Send()
}

// DeleteDBEndpointDirectLinkAddressWithContext is the same as DeleteDBEndpointDirectLinkAddress with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDBEndpointDirectLinkAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DeleteDBEndpointDirectLinkAddressWithContext(ctx byteplus.Context, input *DeleteDBEndpointDirectLinkAddressInput, opts ...request.Option) (*DeleteDBEndpointDirectLinkAddressOutput, error) {
	req, out := c.DeleteDBEndpointDirectLinkAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteDBEndpointDirectLinkAddressInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientToken *string `type:"string" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteDBEndpointDirectLinkAddressInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDBEndpointDirectLinkAddressInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteDBEndpointDirectLinkAddressInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteDBEndpointDirectLinkAddressInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *DeleteDBEndpointDirectLinkAddressInput) SetClientToken(v string) *DeleteDBEndpointDirectLinkAddressInput {
	s.ClientToken = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DeleteDBEndpointDirectLinkAddressInput) SetInstanceId(v string) *DeleteDBEndpointDirectLinkAddressInput {
	s.InstanceId = &v
	return s
}

type DeleteDBEndpointDirectLinkAddressOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteDBEndpointDirectLinkAddressOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDBEndpointDirectLinkAddressOutput) GoString() string {
	return s.String()
}
