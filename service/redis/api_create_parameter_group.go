// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateParameterGroupCommon = "CreateParameterGroup"

// CreateParameterGroupCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateParameterGroupCommon operation. The "output" return
// value will be populated with the CreateParameterGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateParameterGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateParameterGroupCommon Send returns without error.
//
// See CreateParameterGroupCommon for more information on using the CreateParameterGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateParameterGroupCommonRequest method.
//    req, resp := client.CreateParameterGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) CreateParameterGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateParameterGroupCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateParameterGroupCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation CreateParameterGroupCommon for usage and error information.
func (c *REDIS) CreateParameterGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateParameterGroupCommonRequest(input)
	return out, req.Send()
}

// CreateParameterGroupCommonWithContext is the same as CreateParameterGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateParameterGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) CreateParameterGroupCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateParameterGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateParameterGroup = "CreateParameterGroup"

// CreateParameterGroupRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateParameterGroup operation. The "output" return
// value will be populated with the CreateParameterGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateParameterGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateParameterGroupCommon Send returns without error.
//
// See CreateParameterGroup for more information on using the CreateParameterGroup
// API call, and error handling.
//
//    // Example sending a request using the CreateParameterGroupRequest method.
//    req, resp := client.CreateParameterGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) CreateParameterGroupRequest(input *CreateParameterGroupInput) (req *request.Request, output *CreateParameterGroupOutput) {
	op := &request.Operation{
		Name:       opCreateParameterGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateParameterGroupInput{}
	}

	output = &CreateParameterGroupOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateParameterGroup API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation CreateParameterGroup for usage and error information.
func (c *REDIS) CreateParameterGroup(input *CreateParameterGroupInput) (*CreateParameterGroupOutput, error) {
	req, out := c.CreateParameterGroupRequest(input)
	return out, req.Send()
}

// CreateParameterGroupWithContext is the same as CreateParameterGroup with the addition of
// the ability to pass a context and additional request options.
//
// See CreateParameterGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) CreateParameterGroupWithContext(ctx byteplus.Context, input *CreateParameterGroupInput, opts ...request.Option) (*CreateParameterGroupOutput, error) {
	req, out := c.CreateParameterGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateParameterGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// EngineVersion is a required field
	EngineVersion *string `type:"string" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	ParamValues []*ParamValueForCreateParameterGroupInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateParameterGroupInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateParameterGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateParameterGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateParameterGroupInput"}
	if s.EngineVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("EngineVersion"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *CreateParameterGroupInput) SetDescription(v string) *CreateParameterGroupInput {
	s.Description = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *CreateParameterGroupInput) SetEngineVersion(v string) *CreateParameterGroupInput {
	s.EngineVersion = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateParameterGroupInput) SetName(v string) *CreateParameterGroupInput {
	s.Name = &v
	return s
}

// SetParamValues sets the ParamValues field's value.
func (s *CreateParameterGroupInput) SetParamValues(v []*ParamValueForCreateParameterGroupInput) *CreateParameterGroupInput {
	s.ParamValues = v
	return s
}

type CreateParameterGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ParameterGroupId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateParameterGroupOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateParameterGroupOutput) GoString() string {
	return s.String()
}

// SetParameterGroupId sets the ParameterGroupId field's value.
func (s *CreateParameterGroupOutput) SetParameterGroupId(v string) *CreateParameterGroupOutput {
	s.ParameterGroupId = &v
	return s
}

type ParamValueForCreateParameterGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ParamValueForCreateParameterGroupInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ParamValueForCreateParameterGroupInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *ParamValueForCreateParameterGroupInput) SetName(v string) *ParamValueForCreateParameterGroupInput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ParamValueForCreateParameterGroupInput) SetValue(v string) *ParamValueForCreateParameterGroupInput {
	s.Value = &v
	return s
}
