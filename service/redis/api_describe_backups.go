// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeBackupsCommon = "DescribeBackups"

// DescribeBackupsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeBackupsCommon operation. The "output" return
// value will be populated with the DescribeBackupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupsCommon Send returns without error.
//
// See DescribeBackupsCommon for more information on using the DescribeBackupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupsCommonRequest method.
//    req, resp := client.DescribeBackupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeBackupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeBackupsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackupsCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeBackupsCommon for usage and error information.
func (c *REDIS) DescribeBackupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupsCommonRequest(input)
	return out, req.Send()
}

// DescribeBackupsCommonWithContext is the same as DescribeBackupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeBackupsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeBackups = "DescribeBackups"

// DescribeBackupsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeBackups operation. The "output" return
// value will be populated with the DescribeBackupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupsCommon Send returns without error.
//
// See DescribeBackups for more information on using the DescribeBackups
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupsRequest method.
//    req, resp := client.DescribeBackupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeBackupsRequest(input *DescribeBackupsInput) (req *request.Request, output *DescribeBackupsOutput) {
	op := &request.Operation{
		Name:       opDescribeBackups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeBackupsInput{}
	}

	output = &DescribeBackupsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackups API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeBackups for usage and error information.
func (c *REDIS) DescribeBackups(input *DescribeBackupsInput) (*DescribeBackupsOutput, error) {
	req, out := c.DescribeBackupsRequest(input)
	return out, req.Send()
}

// DescribeBackupsWithContext is the same as DescribeBackups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeBackupsWithContext(ctx byteplus.Context, input *DescribeBackupsInput, opts ...request.Option) (*DescribeBackupsOutput, error) {
	req, out := c.DescribeBackupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BackupForDescribeBackupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupPointId *string `type:"string" json:",omitempty"`

	BackupPointName *string `type:"string" json:",omitempty"`

	BackupStrategy *string `type:"string" json:",omitempty" enum:"EnumOfBackupStrategyForDescribeBackupsOutput"`

	BackupType *string `type:"string" json:",omitempty" enum:"EnumOfBackupTypeForDescribeBackupsOutput"`

	EndTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceInfo *InstanceInfoForDescribeBackupsOutput `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Size *int64 `type:"int64" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForDescribeBackupsOutput"`

	TTL *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BackupForDescribeBackupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s BackupForDescribeBackupsOutput) GoString() string {
	return s.String()
}

// SetBackupPointId sets the BackupPointId field's value.
func (s *BackupForDescribeBackupsOutput) SetBackupPointId(v string) *BackupForDescribeBackupsOutput {
	s.BackupPointId = &v
	return s
}

// SetBackupPointName sets the BackupPointName field's value.
func (s *BackupForDescribeBackupsOutput) SetBackupPointName(v string) *BackupForDescribeBackupsOutput {
	s.BackupPointName = &v
	return s
}

// SetBackupStrategy sets the BackupStrategy field's value.
func (s *BackupForDescribeBackupsOutput) SetBackupStrategy(v string) *BackupForDescribeBackupsOutput {
	s.BackupStrategy = &v
	return s
}

// SetBackupType sets the BackupType field's value.
func (s *BackupForDescribeBackupsOutput) SetBackupType(v string) *BackupForDescribeBackupsOutput {
	s.BackupType = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *BackupForDescribeBackupsOutput) SetEndTime(v string) *BackupForDescribeBackupsOutput {
	s.EndTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *BackupForDescribeBackupsOutput) SetInstanceId(v string) *BackupForDescribeBackupsOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceInfo sets the InstanceInfo field's value.
func (s *BackupForDescribeBackupsOutput) SetInstanceInfo(v *InstanceInfoForDescribeBackupsOutput) *BackupForDescribeBackupsOutput {
	s.InstanceInfo = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *BackupForDescribeBackupsOutput) SetProjectName(v string) *BackupForDescribeBackupsOutput {
	s.ProjectName = &v
	return s
}

// SetSize sets the Size field's value.
func (s *BackupForDescribeBackupsOutput) SetSize(v int64) *BackupForDescribeBackupsOutput {
	s.Size = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *BackupForDescribeBackupsOutput) SetStartTime(v string) *BackupForDescribeBackupsOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *BackupForDescribeBackupsOutput) SetStatus(v string) *BackupForDescribeBackupsOutput {
	s.Status = &v
	return s
}

// SetTTL sets the TTL field's value.
func (s *BackupForDescribeBackupsOutput) SetTTL(v int32) *BackupForDescribeBackupsOutput {
	s.TTL = &v
	return s
}

type DescribeBackupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupPointId *string `type:"string" json:",omitempty"`

	BackupPointName *string `type:"string" json:",omitempty"`

	BackupStrategyList []*string `type:"list" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Scope *string `type:"string" json:",omitempty" enum:"EnumOfScopeForDescribeBackupsInput"`

	StartTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupsInput) GoString() string {
	return s.String()
}

// SetBackupPointId sets the BackupPointId field's value.
func (s *DescribeBackupsInput) SetBackupPointId(v string) *DescribeBackupsInput {
	s.BackupPointId = &v
	return s
}

// SetBackupPointName sets the BackupPointName field's value.
func (s *DescribeBackupsInput) SetBackupPointName(v string) *DescribeBackupsInput {
	s.BackupPointName = &v
	return s
}

// SetBackupStrategyList sets the BackupStrategyList field's value.
func (s *DescribeBackupsInput) SetBackupStrategyList(v []*string) *DescribeBackupsInput {
	s.BackupStrategyList = v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeBackupsInput) SetEndTime(v string) *DescribeBackupsInput {
	s.EndTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeBackupsInput) SetInstanceId(v string) *DescribeBackupsInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeBackupsInput) SetPageNumber(v int32) *DescribeBackupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeBackupsInput) SetPageSize(v int32) *DescribeBackupsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeBackupsInput) SetProjectName(v string) *DescribeBackupsInput {
	s.ProjectName = &v
	return s
}

// SetScope sets the Scope field's value.
func (s *DescribeBackupsInput) SetScope(v string) *DescribeBackupsInput {
	s.Scope = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeBackupsInput) SetStartTime(v string) *DescribeBackupsInput {
	s.StartTime = &v
	return s
}

type DescribeBackupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Backups []*BackupForDescribeBackupsOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupsOutput) GoString() string {
	return s.String()
}

// SetBackups sets the Backups field's value.
func (s *DescribeBackupsOutput) SetBackups(v []*BackupForDescribeBackupsOutput) *DescribeBackupsOutput {
	s.Backups = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeBackupsOutput) SetTotal(v int32) *DescribeBackupsOutput {
	s.Total = &v
	return s
}

type InstanceInfoForDescribeBackupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *int64 `type:"int64" json:",omitempty"`

	ArchType *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty"`

	ExpiredTime *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	MaintenanceTime *string `type:"string" json:",omitempty"`

	NetworkType *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	Replicas *int32 `type:"int32" json:",omitempty"`

	ShardCapacity *float64 `type:"double" json:",omitempty"`

	ShardNumber *int32 `type:"int32" json:",omitempty"`

	TotalCapacity *int64 `type:"int64" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s InstanceInfoForDescribeBackupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceInfoForDescribeBackupsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetAccountId(v int64) *InstanceInfoForDescribeBackupsOutput {
	s.AccountId = &v
	return s
}

// SetArchType sets the ArchType field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetArchType(v string) *InstanceInfoForDescribeBackupsOutput {
	s.ArchType = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetChargeType(v string) *InstanceInfoForDescribeBackupsOutput {
	s.ChargeType = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetDeletionProtection(v string) *InstanceInfoForDescribeBackupsOutput {
	s.DeletionProtection = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetEngineVersion(v string) *InstanceInfoForDescribeBackupsOutput {
	s.EngineVersion = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetExpiredTime(v string) *InstanceInfoForDescribeBackupsOutput {
	s.ExpiredTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetInstanceId(v string) *InstanceInfoForDescribeBackupsOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetInstanceName(v string) *InstanceInfoForDescribeBackupsOutput {
	s.InstanceName = &v
	return s
}

// SetMaintenanceTime sets the MaintenanceTime field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetMaintenanceTime(v string) *InstanceInfoForDescribeBackupsOutput {
	s.MaintenanceTime = &v
	return s
}

// SetNetworkType sets the NetworkType field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetNetworkType(v string) *InstanceInfoForDescribeBackupsOutput {
	s.NetworkType = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetRegionId(v string) *InstanceInfoForDescribeBackupsOutput {
	s.RegionId = &v
	return s
}

// SetReplicas sets the Replicas field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetReplicas(v int32) *InstanceInfoForDescribeBackupsOutput {
	s.Replicas = &v
	return s
}

// SetShardCapacity sets the ShardCapacity field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetShardCapacity(v float64) *InstanceInfoForDescribeBackupsOutput {
	s.ShardCapacity = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetShardNumber(v int32) *InstanceInfoForDescribeBackupsOutput {
	s.ShardNumber = &v
	return s
}

// SetTotalCapacity sets the TotalCapacity field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetTotalCapacity(v int64) *InstanceInfoForDescribeBackupsOutput {
	s.TotalCapacity = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetVpcId(v string) *InstanceInfoForDescribeBackupsOutput {
	s.VpcId = &v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *InstanceInfoForDescribeBackupsOutput) SetZoneIds(v []*string) *InstanceInfoForDescribeBackupsOutput {
	s.ZoneIds = v
	return s
}

const (
	// EnumOfBackupStrategyForDescribeBackupsOutputManualBackup is a EnumOfBackupStrategyForDescribeBackupsOutput enum value
	EnumOfBackupStrategyForDescribeBackupsOutputManualBackup = "ManualBackup"

	// EnumOfBackupStrategyForDescribeBackupsOutputAutomatedBackup is a EnumOfBackupStrategyForDescribeBackupsOutput enum value
	EnumOfBackupStrategyForDescribeBackupsOutputAutomatedBackup = "AutomatedBackup"

	// EnumOfBackupStrategyForDescribeBackupsOutputDataFlashBack is a EnumOfBackupStrategyForDescribeBackupsOutput enum value
	EnumOfBackupStrategyForDescribeBackupsOutputDataFlashBack = "DataFlashBack"

	// EnumOfBackupStrategyForDescribeBackupsOutputAllStrategy is a EnumOfBackupStrategyForDescribeBackupsOutput enum value
	EnumOfBackupStrategyForDescribeBackupsOutputAllStrategy = "AllStrategy"
)

const (
	// EnumOfBackupStrategyListListForDescribeBackupsInputManualBackup is a EnumOfBackupStrategyListListForDescribeBackupsInput enum value
	EnumOfBackupStrategyListListForDescribeBackupsInputManualBackup = "ManualBackup"

	// EnumOfBackupStrategyListListForDescribeBackupsInputAutomatedBackup is a EnumOfBackupStrategyListListForDescribeBackupsInput enum value
	EnumOfBackupStrategyListListForDescribeBackupsInputAutomatedBackup = "AutomatedBackup"

	// EnumOfBackupStrategyListListForDescribeBackupsInputDataFlashBack is a EnumOfBackupStrategyListListForDescribeBackupsInput enum value
	EnumOfBackupStrategyListListForDescribeBackupsInputDataFlashBack = "DataFlashBack"

	// EnumOfBackupStrategyListListForDescribeBackupsInputAllStrategy is a EnumOfBackupStrategyListListForDescribeBackupsInput enum value
	EnumOfBackupStrategyListListForDescribeBackupsInputAllStrategy = "AllStrategy"
)

const (
	// EnumOfBackupTypeForDescribeBackupsOutputInvalid is a EnumOfBackupTypeForDescribeBackupsOutput enum value
	EnumOfBackupTypeForDescribeBackupsOutputInvalid = "Invalid"

	// EnumOfBackupTypeForDescribeBackupsOutputFull is a EnumOfBackupTypeForDescribeBackupsOutput enum value
	EnumOfBackupTypeForDescribeBackupsOutputFull = "Full"

	// EnumOfBackupTypeForDescribeBackupsOutputInc is a EnumOfBackupTypeForDescribeBackupsOutput enum value
	EnumOfBackupTypeForDescribeBackupsOutputInc = "Inc"

	// EnumOfBackupTypeForDescribeBackupsOutputAll is a EnumOfBackupTypeForDescribeBackupsOutput enum value
	EnumOfBackupTypeForDescribeBackupsOutputAll = "All"
)

const (
	// EnumOfScopeForDescribeBackupsInputOneInstance is a EnumOfScopeForDescribeBackupsInput enum value
	EnumOfScopeForDescribeBackupsInputOneInstance = "OneInstance"

	// EnumOfScopeForDescribeBackupsInputDestroyedInstances is a EnumOfScopeForDescribeBackupsInput enum value
	EnumOfScopeForDescribeBackupsInputDestroyedInstances = "DestroyedInstances"

	// EnumOfScopeForDescribeBackupsInputAccountInstances is a EnumOfScopeForDescribeBackupsInput enum value
	EnumOfScopeForDescribeBackupsInputAccountInstances = "AccountInstances"
)

const (
	// EnumOfStatusForDescribeBackupsOutputCreating is a EnumOfStatusForDescribeBackupsOutput enum value
	EnumOfStatusForDescribeBackupsOutputCreating = "Creating"

	// EnumOfStatusForDescribeBackupsOutputAvailable is a EnumOfStatusForDescribeBackupsOutput enum value
	EnumOfStatusForDescribeBackupsOutputAvailable = "Available"

	// EnumOfStatusForDescribeBackupsOutputUnavailable is a EnumOfStatusForDescribeBackupsOutput enum value
	EnumOfStatusForDescribeBackupsOutputUnavailable = "Unavailable"

	// EnumOfStatusForDescribeBackupsOutputDeleting is a EnumOfStatusForDescribeBackupsOutput enum value
	EnumOfStatusForDescribeBackupsOutputDeleting = "Deleting"
)
