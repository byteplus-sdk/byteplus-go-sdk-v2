// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeParameterGroupDetailCommon = "DescribeParameterGroupDetail"

// DescribeParameterGroupDetailCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeParameterGroupDetailCommon operation. The "output" return
// value will be populated with the DescribeParameterGroupDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeParameterGroupDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeParameterGroupDetailCommon Send returns without error.
//
// See DescribeParameterGroupDetailCommon for more information on using the DescribeParameterGroupDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeParameterGroupDetailCommonRequest method.
//    req, resp := client.DescribeParameterGroupDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeParameterGroupDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeParameterGroupDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeParameterGroupDetailCommon API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeParameterGroupDetailCommon for usage and error information.
func (c *REDIS) DescribeParameterGroupDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeParameterGroupDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeParameterGroupDetailCommonWithContext is the same as DescribeParameterGroupDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeParameterGroupDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeParameterGroupDetailCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeParameterGroupDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeParameterGroupDetail = "DescribeParameterGroupDetail"

// DescribeParameterGroupDetailRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeParameterGroupDetail operation. The "output" return
// value will be populated with the DescribeParameterGroupDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeParameterGroupDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeParameterGroupDetailCommon Send returns without error.
//
// See DescribeParameterGroupDetail for more information on using the DescribeParameterGroupDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeParameterGroupDetailRequest method.
//    req, resp := client.DescribeParameterGroupDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeParameterGroupDetailRequest(input *DescribeParameterGroupDetailInput) (req *request.Request, output *DescribeParameterGroupDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeParameterGroupDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeParameterGroupDetailInput{}
	}

	output = &DescribeParameterGroupDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeParameterGroupDetail API operation for REDIS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for REDIS's
// API operation DescribeParameterGroupDetail for usage and error information.
func (c *REDIS) DescribeParameterGroupDetail(input *DescribeParameterGroupDetailInput) (*DescribeParameterGroupDetailOutput, error) {
	req, out := c.DescribeParameterGroupDetailRequest(input)
	return out, req.Send()
}

// DescribeParameterGroupDetailWithContext is the same as DescribeParameterGroupDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeParameterGroupDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeParameterGroupDetailWithContext(ctx byteplus.Context, input *DescribeParameterGroupDetailInput, opts ...request.Option) (*DescribeParameterGroupDetailOutput, error) {
	req, out := c.DescribeParameterGroupDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeParameterGroupDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ParameterGroupId is a required field
	ParameterGroupId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeParameterGroupDetailInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeParameterGroupDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeParameterGroupDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeParameterGroupDetailInput"}
	if s.ParameterGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ParameterGroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetParameterGroupId sets the ParameterGroupId field's value.
func (s *DescribeParameterGroupDetailInput) SetParameterGroupId(v string) *DescribeParameterGroupDetailInput {
	s.ParameterGroupId = &v
	return s
}

type DescribeParameterGroupDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ParameterGroupInfo *ParameterGroupInfoForDescribeParameterGroupDetailOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeParameterGroupDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeParameterGroupDetailOutput) GoString() string {
	return s.String()
}

// SetParameterGroupInfo sets the ParameterGroupInfo field's value.
func (s *DescribeParameterGroupDetailOutput) SetParameterGroupInfo(v *ParameterGroupInfoForDescribeParameterGroupDetailOutput) *DescribeParameterGroupDetailOutput {
	s.ParameterGroupInfo = v
	return s
}

type OptionForDescribeParameterGroupDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s OptionForDescribeParameterGroupDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s OptionForDescribeParameterGroupDetailOutput) GoString() string {
	return s.String()
}

type ParameterForDescribeParameterGroupDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CurrentValue *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	NeedReboot *bool `type:"boolean" json:",omitempty"`

	Options []*OptionForDescribeParameterGroupDetailOutput `type:"list" json:",omitempty"`

	ParamName *string `type:"string" json:",omitempty"`

	Range *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ParameterForDescribeParameterGroupDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ParameterForDescribeParameterGroupDetailOutput) GoString() string {
	return s.String()
}

// SetCurrentValue sets the CurrentValue field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetCurrentValue(v string) *ParameterForDescribeParameterGroupDetailOutput {
	s.CurrentValue = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetDescription(v string) *ParameterForDescribeParameterGroupDetailOutput {
	s.Description = &v
	return s
}

// SetNeedReboot sets the NeedReboot field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetNeedReboot(v bool) *ParameterForDescribeParameterGroupDetailOutput {
	s.NeedReboot = &v
	return s
}

// SetOptions sets the Options field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetOptions(v []*OptionForDescribeParameterGroupDetailOutput) *ParameterForDescribeParameterGroupDetailOutput {
	s.Options = v
	return s
}

// SetParamName sets the ParamName field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetParamName(v string) *ParameterForDescribeParameterGroupDetailOutput {
	s.ParamName = &v
	return s
}

// SetRange sets the Range field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetRange(v string) *ParameterForDescribeParameterGroupDetailOutput {
	s.Range = &v
	return s
}

// SetType sets the Type field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetType(v string) *ParameterForDescribeParameterGroupDetailOutput {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ParameterForDescribeParameterGroupDetailOutput) SetUnit(v string) *ParameterForDescribeParameterGroupDetailOutput {
	s.Unit = &v
	return s
}

type ParameterGroupInfoForDescribeParameterGroupDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Default *bool `type:"boolean" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ParameterGroupId *string `type:"string" json:",omitempty"`

	Parameters []*ParameterForDescribeParameterGroupDetailOutput `type:"list" json:",omitempty"`

	Source *string `type:"string" json:",omitempty" enum:"EnumOfSourceForDescribeParameterGroupDetailOutput"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ParameterGroupInfoForDescribeParameterGroupDetailOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ParameterGroupInfoForDescribeParameterGroupDetailOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetCreateTime(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDefault sets the Default field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetDefault(v bool) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.Default = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetDescription(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.Description = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetEngineVersion(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.EngineVersion = &v
	return s
}

// SetName sets the Name field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetName(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.Name = &v
	return s
}

// SetParameterGroupId sets the ParameterGroupId field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetParameterGroupId(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.ParameterGroupId = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetParameters(v []*ParameterForDescribeParameterGroupDetailOutput) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.Parameters = v
	return s
}

// SetSource sets the Source field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetSource(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.Source = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ParameterGroupInfoForDescribeParameterGroupDetailOutput) SetUpdateTime(v string) *ParameterGroupInfoForDescribeParameterGroupDetailOutput {
	s.UpdateTime = &v
	return s
}

const (
	// EnumOfSourceForDescribeParameterGroupDetailOutputSystem is a EnumOfSourceForDescribeParameterGroupDetailOutput enum value
	EnumOfSourceForDescribeParameterGroupDetailOutputSystem = "System"

	// EnumOfSourceForDescribeParameterGroupDetailOutputUser is a EnumOfSourceForDescribeParameterGroupDetailOutput enum value
	EnumOfSourceForDescribeParameterGroupDetailOutputUser = "User"
)
