// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmssql

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeTosRestoreTasksCommon = "DescribeTosRestoreTasks"

// DescribeTosRestoreTasksCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeTosRestoreTasksCommon operation. The "output" return
// value will be populated with the DescribeTosRestoreTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTosRestoreTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTosRestoreTasksCommon Send returns without error.
//
// See DescribeTosRestoreTasksCommon for more information on using the DescribeTosRestoreTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTosRestoreTasksCommonRequest method.
//    req, resp := client.DescribeTosRestoreTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMSSQL) DescribeTosRestoreTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTosRestoreTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTosRestoreTasksCommon API operation for RDS_MSSQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MSSQL's
// API operation DescribeTosRestoreTasksCommon for usage and error information.
func (c *RDSMSSQL) DescribeTosRestoreTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTosRestoreTasksCommonRequest(input)
	return out, req.Send()
}

// DescribeTosRestoreTasksCommonWithContext is the same as DescribeTosRestoreTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTosRestoreTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMSSQL) DescribeTosRestoreTasksCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTosRestoreTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTosRestoreTasks = "DescribeTosRestoreTasks"

// DescribeTosRestoreTasksRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeTosRestoreTasks operation. The "output" return
// value will be populated with the DescribeTosRestoreTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTosRestoreTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTosRestoreTasksCommon Send returns without error.
//
// See DescribeTosRestoreTasks for more information on using the DescribeTosRestoreTasks
// API call, and error handling.
//
//    // Example sending a request using the DescribeTosRestoreTasksRequest method.
//    req, resp := client.DescribeTosRestoreTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMSSQL) DescribeTosRestoreTasksRequest(input *DescribeTosRestoreTasksInput) (req *request.Request, output *DescribeTosRestoreTasksOutput) {
	op := &request.Operation{
		Name:       opDescribeTosRestoreTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTosRestoreTasksInput{}
	}

	output = &DescribeTosRestoreTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTosRestoreTasks API operation for RDS_MSSQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MSSQL's
// API operation DescribeTosRestoreTasks for usage and error information.
func (c *RDSMSSQL) DescribeTosRestoreTasks(input *DescribeTosRestoreTasksInput) (*DescribeTosRestoreTasksOutput, error) {
	req, out := c.DescribeTosRestoreTasksRequest(input)
	return out, req.Send()
}

// DescribeTosRestoreTasksWithContext is the same as DescribeTosRestoreTasks with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTosRestoreTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMSSQL) DescribeTosRestoreTasksWithContext(ctx byteplus.Context, input *DescribeTosRestoreTasksInput, opts ...request.Option) (*DescribeTosRestoreTasksOutput, error) {
	req, out := c.DescribeTosRestoreTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTosRestoreTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	QueryEndTime *string `type:"string" json:",omitempty"`

	QueryStartTime *string `type:"string" json:",omitempty"`

	RestoreTaskIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTosRestoreTasksInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTosRestoreTasksInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeTosRestoreTasksInput) SetInstanceId(v string) *DescribeTosRestoreTasksInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeTosRestoreTasksInput) SetInstanceName(v string) *DescribeTosRestoreTasksInput {
	s.InstanceName = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTosRestoreTasksInput) SetPageNumber(v int32) *DescribeTosRestoreTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTosRestoreTasksInput) SetPageSize(v int32) *DescribeTosRestoreTasksInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeTosRestoreTasksInput) SetProjectName(v string) *DescribeTosRestoreTasksInput {
	s.ProjectName = &v
	return s
}

// SetQueryEndTime sets the QueryEndTime field's value.
func (s *DescribeTosRestoreTasksInput) SetQueryEndTime(v string) *DescribeTosRestoreTasksInput {
	s.QueryEndTime = &v
	return s
}

// SetQueryStartTime sets the QueryStartTime field's value.
func (s *DescribeTosRestoreTasksInput) SetQueryStartTime(v string) *DescribeTosRestoreTasksInput {
	s.QueryStartTime = &v
	return s
}

// SetRestoreTaskIds sets the RestoreTaskIds field's value.
func (s *DescribeTosRestoreTasksInput) SetRestoreTaskIds(v []*string) *DescribeTosRestoreTasksInput {
	s.RestoreTaskIds = v
	return s
}

type DescribeTosRestoreTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RestoreTasks []*RestoreTaskForDescribeTosRestoreTasksOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTosRestoreTasksOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTosRestoreTasksOutput) GoString() string {
	return s.String()
}

// SetRestoreTasks sets the RestoreTasks field's value.
func (s *DescribeTosRestoreTasksOutput) SetRestoreTasks(v []*RestoreTaskForDescribeTosRestoreTasksOutput) *DescribeTosRestoreTasksOutput {
	s.RestoreTasks = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeTosRestoreTasksOutput) SetTotal(v int32) *DescribeTosRestoreTasksOutput {
	s.Total = &v
	return s
}

type RestoreTaskForDescribeTosRestoreTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	IsReplace *bool `type:"boolean" json:",omitempty"`

	RestoreTaskId *string `type:"string" json:",omitempty"`

	RestoreType *string `type:"string" json:",omitempty"`

	TaskDesc *string `type:"string" json:",omitempty"`

	TaskEndTime *string `type:"string" json:",omitempty"`

	TaskStartTime *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RestoreTaskForDescribeTosRestoreTasksOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s RestoreTaskForDescribeTosRestoreTasksOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetInstanceId(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetInstanceName(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.InstanceName = &v
	return s
}

// SetIsReplace sets the IsReplace field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetIsReplace(v bool) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.IsReplace = &v
	return s
}

// SetRestoreTaskId sets the RestoreTaskId field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetRestoreTaskId(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.RestoreTaskId = &v
	return s
}

// SetRestoreType sets the RestoreType field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetRestoreType(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.RestoreType = &v
	return s
}

// SetTaskDesc sets the TaskDesc field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetTaskDesc(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.TaskDesc = &v
	return s
}

// SetTaskEndTime sets the TaskEndTime field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetTaskEndTime(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.TaskEndTime = &v
	return s
}

// SetTaskStartTime sets the TaskStartTime field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetTaskStartTime(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.TaskStartTime = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetTaskStatus(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *RestoreTaskForDescribeTosRestoreTasksOutput) SetTaskType(v string) *RestoreTaskForDescribeTosRestoreTasksOutput {
	s.TaskType = &v
	return s
}
