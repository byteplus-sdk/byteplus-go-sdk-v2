// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmssql

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyInstanceAdvancedFeaturesCommon = "ModifyInstanceAdvancedFeatures"

// ModifyInstanceAdvancedFeaturesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyInstanceAdvancedFeaturesCommon operation. The "output" return
// value will be populated with the ModifyInstanceAdvancedFeaturesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceAdvancedFeaturesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceAdvancedFeaturesCommon Send returns without error.
//
// See ModifyInstanceAdvancedFeaturesCommon for more information on using the ModifyInstanceAdvancedFeaturesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstanceAdvancedFeaturesCommonRequest method.
//    req, resp := client.ModifyInstanceAdvancedFeaturesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMSSQL) ModifyInstanceAdvancedFeaturesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstanceAdvancedFeaturesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyInstanceAdvancedFeaturesCommon API operation for RDS_MSSQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MSSQL's
// API operation ModifyInstanceAdvancedFeaturesCommon for usage and error information.
func (c *RDSMSSQL) ModifyInstanceAdvancedFeaturesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceAdvancedFeaturesCommonRequest(input)
	return out, req.Send()
}

// ModifyInstanceAdvancedFeaturesCommonWithContext is the same as ModifyInstanceAdvancedFeaturesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceAdvancedFeaturesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMSSQL) ModifyInstanceAdvancedFeaturesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceAdvancedFeaturesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceAdvancedFeatures = "ModifyInstanceAdvancedFeatures"

// ModifyInstanceAdvancedFeaturesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyInstanceAdvancedFeatures operation. The "output" return
// value will be populated with the ModifyInstanceAdvancedFeaturesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceAdvancedFeaturesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceAdvancedFeaturesCommon Send returns without error.
//
// See ModifyInstanceAdvancedFeatures for more information on using the ModifyInstanceAdvancedFeatures
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstanceAdvancedFeaturesRequest method.
//    req, resp := client.ModifyInstanceAdvancedFeaturesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMSSQL) ModifyInstanceAdvancedFeaturesRequest(input *ModifyInstanceAdvancedFeaturesInput) (req *request.Request, output *ModifyInstanceAdvancedFeaturesOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceAdvancedFeatures,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstanceAdvancedFeaturesInput{}
	}

	output = &ModifyInstanceAdvancedFeaturesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyInstanceAdvancedFeatures API operation for RDS_MSSQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MSSQL's
// API operation ModifyInstanceAdvancedFeatures for usage and error information.
func (c *RDSMSSQL) ModifyInstanceAdvancedFeatures(input *ModifyInstanceAdvancedFeaturesInput) (*ModifyInstanceAdvancedFeaturesOutput, error) {
	req, out := c.ModifyInstanceAdvancedFeaturesRequest(input)
	return out, req.Send()
}

// ModifyInstanceAdvancedFeaturesWithContext is the same as ModifyInstanceAdvancedFeatures with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceAdvancedFeatures for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMSSQL) ModifyInstanceAdvancedFeaturesWithContext(ctx byteplus.Context, input *ModifyInstanceAdvancedFeaturesInput, opts ...request.Option) (*ModifyInstanceAdvancedFeaturesOutput, error) {
	req, out := c.ModifyInstanceAdvancedFeaturesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyInstanceAdvancedFeaturesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AdvancedFeatures is a required field
	AdvancedFeatures *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ModifyInstanceAdvancedFeaturesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceAdvancedFeaturesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyInstanceAdvancedFeaturesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyInstanceAdvancedFeaturesInput"}
	if s.AdvancedFeatures == nil {
		invalidParams.Add(request.NewErrParamRequired("AdvancedFeatures"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAdvancedFeatures sets the AdvancedFeatures field's value.
func (s *ModifyInstanceAdvancedFeaturesInput) SetAdvancedFeatures(v string) *ModifyInstanceAdvancedFeaturesInput {
	s.AdvancedFeatures = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceAdvancedFeaturesInput) SetInstanceId(v string) *ModifyInstanceAdvancedFeaturesInput {
	s.InstanceId = &v
	return s
}

type ModifyInstanceAdvancedFeaturesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AdvancedFeatures *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyInstanceAdvancedFeaturesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceAdvancedFeaturesOutput) GoString() string {
	return s.String()
}

// SetAdvancedFeatures sets the AdvancedFeatures field's value.
func (s *ModifyInstanceAdvancedFeaturesOutput) SetAdvancedFeatures(v string) *ModifyInstanceAdvancedFeaturesOutput {
	s.AdvancedFeatures = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceAdvancedFeaturesOutput) SetInstanceId(v string) *ModifyInstanceAdvancedFeaturesOutput {
	s.InstanceId = &v
	return s
}
