// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmssql

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateTosRestoreCommon = "CreateTosRestore"

// CreateTosRestoreCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTosRestoreCommon operation. The "output" return
// value will be populated with the CreateTosRestoreCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTosRestoreCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTosRestoreCommon Send returns without error.
//
// See CreateTosRestoreCommon for more information on using the CreateTosRestoreCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTosRestoreCommonRequest method.
//    req, resp := client.CreateTosRestoreCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMSSQL) CreateTosRestoreCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTosRestoreCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateTosRestoreCommon API operation for RDS_MSSQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MSSQL's
// API operation CreateTosRestoreCommon for usage and error information.
func (c *RDSMSSQL) CreateTosRestoreCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTosRestoreCommonRequest(input)
	return out, req.Send()
}

// CreateTosRestoreCommonWithContext is the same as CreateTosRestoreCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTosRestoreCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMSSQL) CreateTosRestoreCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTosRestoreCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTosRestore = "CreateTosRestore"

// CreateTosRestoreRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTosRestore operation. The "output" return
// value will be populated with the CreateTosRestoreCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTosRestoreCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTosRestoreCommon Send returns without error.
//
// See CreateTosRestore for more information on using the CreateTosRestore
// API call, and error handling.
//
//    // Example sending a request using the CreateTosRestoreRequest method.
//    req, resp := client.CreateTosRestoreRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMSSQL) CreateTosRestoreRequest(input *CreateTosRestoreInput) (req *request.Request, output *CreateTosRestoreOutput) {
	op := &request.Operation{
		Name:       opCreateTosRestore,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTosRestoreInput{}
	}

	output = &CreateTosRestoreOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateTosRestore API operation for RDS_MSSQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_MSSQL's
// API operation CreateTosRestore for usage and error information.
func (c *RDSMSSQL) CreateTosRestore(input *CreateTosRestoreInput) (*CreateTosRestoreOutput, error) {
	req, out := c.CreateTosRestoreRequest(input)
	return out, req.Send()
}

// CreateTosRestoreWithContext is the same as CreateTosRestore with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTosRestore for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMSSQL) CreateTosRestoreWithContext(ctx byteplus.Context, input *CreateTosRestoreInput, opts ...request.Option) (*CreateTosRestoreOutput, error) {
	req, out := c.CreateTosRestoreRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTosRestoreInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Databases []*DatabaseForCreateTosRestoreInput `type:"list" json:",omitempty"`

	IsOnline *bool `type:"boolean" json:",omitempty"`

	IsReplace *bool `type:"boolean" json:",omitempty"`

	RestoreType *string `type:"string" json:",omitempty"`

	// TargetDBInstanceId is a required field
	TargetDBInstanceId *string `type:"string" json:",omitempty" required:"true"`

	// TosObjectPositions is a required field
	TosObjectPositions *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateTosRestoreInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTosRestoreInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTosRestoreInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTosRestoreInput"}
	if s.TargetDBInstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("TargetDBInstanceId"))
	}
	if s.TosObjectPositions == nil {
		invalidParams.Add(request.NewErrParamRequired("TosObjectPositions"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDatabases sets the Databases field's value.
func (s *CreateTosRestoreInput) SetDatabases(v []*DatabaseForCreateTosRestoreInput) *CreateTosRestoreInput {
	s.Databases = v
	return s
}

// SetIsOnline sets the IsOnline field's value.
func (s *CreateTosRestoreInput) SetIsOnline(v bool) *CreateTosRestoreInput {
	s.IsOnline = &v
	return s
}

// SetIsReplace sets the IsReplace field's value.
func (s *CreateTosRestoreInput) SetIsReplace(v bool) *CreateTosRestoreInput {
	s.IsReplace = &v
	return s
}

// SetRestoreType sets the RestoreType field's value.
func (s *CreateTosRestoreInput) SetRestoreType(v string) *CreateTosRestoreInput {
	s.RestoreType = &v
	return s
}

// SetTargetDBInstanceId sets the TargetDBInstanceId field's value.
func (s *CreateTosRestoreInput) SetTargetDBInstanceId(v string) *CreateTosRestoreInput {
	s.TargetDBInstanceId = &v
	return s
}

// SetTosObjectPositions sets the TosObjectPositions field's value.
func (s *CreateTosRestoreInput) SetTosObjectPositions(v string) *CreateTosRestoreInput {
	s.TosObjectPositions = &v
	return s
}

type CreateTosRestoreOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RestoreTaskId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateTosRestoreOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTosRestoreOutput) GoString() string {
	return s.String()
}

// SetRestoreTaskId sets the RestoreTaskId field's value.
func (s *CreateTosRestoreOutput) SetRestoreTaskId(v string) *CreateTosRestoreOutput {
	s.RestoreTaskId = &v
	return s
}

type DatabaseForCreateTosRestoreInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DBName *string `type:"string" json:",omitempty"`

	NewDBName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DatabaseForCreateTosRestoreInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DatabaseForCreateTosRestoreInput) GoString() string {
	return s.String()
}

// SetDBName sets the DBName field's value.
func (s *DatabaseForCreateTosRestoreInput) SetDBName(v string) *DatabaseForCreateTosRestoreInput {
	s.DBName = &v
	return s
}

// SetNewDBName sets the NewDBName field's value.
func (s *DatabaseForCreateTosRestoreInput) SetNewDBName(v string) *DatabaseForCreateTosRestoreInput {
	s.NewDBName = &v
	return s
}
