// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package alb

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeServerGroupBackendServersCommon = "DescribeServerGroupBackendServers"

// DescribeServerGroupBackendServersCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeServerGroupBackendServersCommon operation. The "output" return
// value will be populated with the DescribeServerGroupBackendServersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeServerGroupBackendServersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeServerGroupBackendServersCommon Send returns without error.
//
// See DescribeServerGroupBackendServersCommon for more information on using the DescribeServerGroupBackendServersCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeServerGroupBackendServersCommonRequest method.
//    req, resp := client.DescribeServerGroupBackendServersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) DescribeServerGroupBackendServersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeServerGroupBackendServersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeServerGroupBackendServersCommon API operation for ALB.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ALB's
// API operation DescribeServerGroupBackendServersCommon for usage and error information.
func (c *ALB) DescribeServerGroupBackendServersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeServerGroupBackendServersCommonRequest(input)
	return out, req.Send()
}

// DescribeServerGroupBackendServersCommonWithContext is the same as DescribeServerGroupBackendServersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServerGroupBackendServersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DescribeServerGroupBackendServersCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeServerGroupBackendServersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeServerGroupBackendServers = "DescribeServerGroupBackendServers"

// DescribeServerGroupBackendServersRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeServerGroupBackendServers operation. The "output" return
// value will be populated with the DescribeServerGroupBackendServersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeServerGroupBackendServersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeServerGroupBackendServersCommon Send returns without error.
//
// See DescribeServerGroupBackendServers for more information on using the DescribeServerGroupBackendServers
// API call, and error handling.
//
//    // Example sending a request using the DescribeServerGroupBackendServersRequest method.
//    req, resp := client.DescribeServerGroupBackendServersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) DescribeServerGroupBackendServersRequest(input *DescribeServerGroupBackendServersInput) (req *request.Request, output *DescribeServerGroupBackendServersOutput) {
	op := &request.Operation{
		Name:       opDescribeServerGroupBackendServers,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeServerGroupBackendServersInput{}
	}

	output = &DescribeServerGroupBackendServersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeServerGroupBackendServers API operation for ALB.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ALB's
// API operation DescribeServerGroupBackendServers for usage and error information.
func (c *ALB) DescribeServerGroupBackendServers(input *DescribeServerGroupBackendServersInput) (*DescribeServerGroupBackendServersOutput, error) {
	req, out := c.DescribeServerGroupBackendServersRequest(input)
	return out, req.Send()
}

// DescribeServerGroupBackendServersWithContext is the same as DescribeServerGroupBackendServers with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServerGroupBackendServers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DescribeServerGroupBackendServersWithContext(ctx byteplus.Context, input *DescribeServerGroupBackendServersInput, opts ...request.Option) (*DescribeServerGroupBackendServersOutput, error) {
	req, out := c.DescribeServerGroupBackendServersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeServerGroupBackendServersInput struct {
	_ struct{} `type:"structure"`

	InstanceIds []*string `type:"list"`

	Ips []*string `type:"list"`

	PageNumber *string `type:"string"`

	PageSize *string `type:"string"`

	// ServerGroupId is a required field
	ServerGroupId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeServerGroupBackendServersInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServerGroupBackendServersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeServerGroupBackendServersInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeServerGroupBackendServersInput"}
	if s.ServerGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerGroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *DescribeServerGroupBackendServersInput) SetInstanceIds(v []*string) *DescribeServerGroupBackendServersInput {
	s.InstanceIds = v
	return s
}

// SetIps sets the Ips field's value.
func (s *DescribeServerGroupBackendServersInput) SetIps(v []*string) *DescribeServerGroupBackendServersInput {
	s.Ips = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeServerGroupBackendServersInput) SetPageNumber(v string) *DescribeServerGroupBackendServersInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeServerGroupBackendServersInput) SetPageSize(v string) *DescribeServerGroupBackendServersInput {
	s.PageSize = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *DescribeServerGroupBackendServersInput) SetServerGroupId(v string) *DescribeServerGroupBackendServersInput {
	s.ServerGroupId = &v
	return s
}

type DescribeServerGroupBackendServersOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	Servers []*ServerForDescribeServerGroupBackendServersOutput `type:"list"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeServerGroupBackendServersOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServerGroupBackendServersOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeServerGroupBackendServersOutput) SetPageNumber(v int64) *DescribeServerGroupBackendServersOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeServerGroupBackendServersOutput) SetPageSize(v int64) *DescribeServerGroupBackendServersOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeServerGroupBackendServersOutput) SetRequestId(v string) *DescribeServerGroupBackendServersOutput {
	s.RequestId = &v
	return s
}

// SetServers sets the Servers field's value.
func (s *DescribeServerGroupBackendServersOutput) SetServers(v []*ServerForDescribeServerGroupBackendServersOutput) *DescribeServerGroupBackendServersOutput {
	s.Servers = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeServerGroupBackendServersOutput) SetTotalCount(v int64) *DescribeServerGroupBackendServersOutput {
	s.TotalCount = &v
	return s
}

type ServerForDescribeServerGroupBackendServersOutput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	InstanceId *string `type:"string"`

	Ip *string `type:"string"`

	Port *int64 `type:"integer"`

	RemoteEnabled *string `type:"string"`

	ServerId *string `type:"string"`

	Type *string `type:"string"`

	Weight *int64 `type:"integer"`
}

// String returns the string representation
func (s ServerForDescribeServerGroupBackendServersOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerForDescribeServerGroupBackendServersOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetDescription(v string) *ServerForDescribeServerGroupBackendServersOutput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetInstanceId(v string) *ServerForDescribeServerGroupBackendServersOutput {
	s.InstanceId = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetIp(v string) *ServerForDescribeServerGroupBackendServersOutput {
	s.Ip = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetPort(v int64) *ServerForDescribeServerGroupBackendServersOutput {
	s.Port = &v
	return s
}

// SetRemoteEnabled sets the RemoteEnabled field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetRemoteEnabled(v string) *ServerForDescribeServerGroupBackendServersOutput {
	s.RemoteEnabled = &v
	return s
}

// SetServerId sets the ServerId field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetServerId(v string) *ServerForDescribeServerGroupBackendServersOutput {
	s.ServerId = &v
	return s
}

// SetType sets the Type field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetType(v string) *ServerForDescribeServerGroupBackendServersOutput {
	s.Type = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ServerForDescribeServerGroupBackendServersOutput) SetWeight(v int64) *ServerForDescribeServerGroupBackendServersOutput {
	s.Weight = &v
	return s
}
