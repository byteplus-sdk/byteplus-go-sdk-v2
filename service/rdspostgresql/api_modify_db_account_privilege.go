// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdspostgresql

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyDBAccountPrivilegeCommon = "ModifyDBAccountPrivilege"

// ModifyDBAccountPrivilegeCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyDBAccountPrivilegeCommon operation. The "output" return
// value will be populated with the ModifyDBAccountPrivilegeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBAccountPrivilegeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBAccountPrivilegeCommon Send returns without error.
//
// See ModifyDBAccountPrivilegeCommon for more information on using the ModifyDBAccountPrivilegeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBAccountPrivilegeCommonRequest method.
//    req, resp := client.ModifyDBAccountPrivilegeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSPOSTGRESQL) ModifyDBAccountPrivilegeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBAccountPrivilegeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBAccountPrivilegeCommon API operation for RDS_POSTGRESQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_POSTGRESQL's
// API operation ModifyDBAccountPrivilegeCommon for usage and error information.
func (c *RDSPOSTGRESQL) ModifyDBAccountPrivilegeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBAccountPrivilegeCommonRequest(input)
	return out, req.Send()
}

// ModifyDBAccountPrivilegeCommonWithContext is the same as ModifyDBAccountPrivilegeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBAccountPrivilegeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSPOSTGRESQL) ModifyDBAccountPrivilegeCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBAccountPrivilegeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBAccountPrivilege = "ModifyDBAccountPrivilege"

// ModifyDBAccountPrivilegeRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyDBAccountPrivilege operation. The "output" return
// value will be populated with the ModifyDBAccountPrivilegeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBAccountPrivilegeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBAccountPrivilegeCommon Send returns without error.
//
// See ModifyDBAccountPrivilege for more information on using the ModifyDBAccountPrivilege
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBAccountPrivilegeRequest method.
//    req, resp := client.ModifyDBAccountPrivilegeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSPOSTGRESQL) ModifyDBAccountPrivilegeRequest(input *ModifyDBAccountPrivilegeInput) (req *request.Request, output *ModifyDBAccountPrivilegeOutput) {
	op := &request.Operation{
		Name:       opModifyDBAccountPrivilege,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBAccountPrivilegeInput{}
	}

	output = &ModifyDBAccountPrivilegeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBAccountPrivilege API operation for RDS_POSTGRESQL.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for RDS_POSTGRESQL's
// API operation ModifyDBAccountPrivilege for usage and error information.
func (c *RDSPOSTGRESQL) ModifyDBAccountPrivilege(input *ModifyDBAccountPrivilegeInput) (*ModifyDBAccountPrivilegeOutput, error) {
	req, out := c.ModifyDBAccountPrivilegeRequest(input)
	return out, req.Send()
}

// ModifyDBAccountPrivilegeWithContext is the same as ModifyDBAccountPrivilege with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBAccountPrivilege for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSPOSTGRESQL) ModifyDBAccountPrivilegeWithContext(ctx byteplus.Context, input *ModifyDBAccountPrivilegeInput, opts ...request.Option) (*ModifyDBAccountPrivilegeOutput, error) {
	req, out := c.ModifyDBAccountPrivilegeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBAccountPrivilegeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AccountName is a required field
	AccountName *string `type:"string" json:",omitempty" required:"true"`

	// AccountPrivileges is a required field
	AccountPrivileges *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ModifyDBAccountPrivilegeInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBAccountPrivilegeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBAccountPrivilegeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBAccountPrivilegeInput"}
	if s.AccountName == nil {
		invalidParams.Add(request.NewErrParamRequired("AccountName"))
	}
	if s.AccountPrivileges == nil {
		invalidParams.Add(request.NewErrParamRequired("AccountPrivileges"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccountName sets the AccountName field's value.
func (s *ModifyDBAccountPrivilegeInput) SetAccountName(v string) *ModifyDBAccountPrivilegeInput {
	s.AccountName = &v
	return s
}

// SetAccountPrivileges sets the AccountPrivileges field's value.
func (s *ModifyDBAccountPrivilegeInput) SetAccountPrivileges(v string) *ModifyDBAccountPrivilegeInput {
	s.AccountPrivileges = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBAccountPrivilegeInput) SetInstanceId(v string) *ModifyDBAccountPrivilegeInput {
	s.InstanceId = &v
	return s
}

type ModifyDBAccountPrivilegeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBAccountPrivilegeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBAccountPrivilegeOutput) GoString() string {
	return s.String()
}
