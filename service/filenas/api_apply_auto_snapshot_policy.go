// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opApplyAutoSnapshotPolicyCommon = "ApplyAutoSnapshotPolicy"

// ApplyAutoSnapshotPolicyCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ApplyAutoSnapshotPolicyCommon operation. The "output" return
// value will be populated with the ApplyAutoSnapshotPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ApplyAutoSnapshotPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ApplyAutoSnapshotPolicyCommon Send returns without error.
//
// See ApplyAutoSnapshotPolicyCommon for more information on using the ApplyAutoSnapshotPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the ApplyAutoSnapshotPolicyCommonRequest method.
//    req, resp := client.ApplyAutoSnapshotPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) ApplyAutoSnapshotPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opApplyAutoSnapshotPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ApplyAutoSnapshotPolicyCommon API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation ApplyAutoSnapshotPolicyCommon for usage and error information.
func (c *FILENAS) ApplyAutoSnapshotPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ApplyAutoSnapshotPolicyCommonRequest(input)
	return out, req.Send()
}

// ApplyAutoSnapshotPolicyCommonWithContext is the same as ApplyAutoSnapshotPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ApplyAutoSnapshotPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) ApplyAutoSnapshotPolicyCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ApplyAutoSnapshotPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opApplyAutoSnapshotPolicy = "ApplyAutoSnapshotPolicy"

// ApplyAutoSnapshotPolicyRequest generates a "byteplus/request.Request" representing the
// client's request for the ApplyAutoSnapshotPolicy operation. The "output" return
// value will be populated with the ApplyAutoSnapshotPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ApplyAutoSnapshotPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ApplyAutoSnapshotPolicyCommon Send returns without error.
//
// See ApplyAutoSnapshotPolicy for more information on using the ApplyAutoSnapshotPolicy
// API call, and error handling.
//
//    // Example sending a request using the ApplyAutoSnapshotPolicyRequest method.
//    req, resp := client.ApplyAutoSnapshotPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) ApplyAutoSnapshotPolicyRequest(input *ApplyAutoSnapshotPolicyInput) (req *request.Request, output *ApplyAutoSnapshotPolicyOutput) {
	op := &request.Operation{
		Name:       opApplyAutoSnapshotPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ApplyAutoSnapshotPolicyInput{}
	}

	output = &ApplyAutoSnapshotPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ApplyAutoSnapshotPolicy API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation ApplyAutoSnapshotPolicy for usage and error information.
func (c *FILENAS) ApplyAutoSnapshotPolicy(input *ApplyAutoSnapshotPolicyInput) (*ApplyAutoSnapshotPolicyOutput, error) {
	req, out := c.ApplyAutoSnapshotPolicyRequest(input)
	return out, req.Send()
}

// ApplyAutoSnapshotPolicyWithContext is the same as ApplyAutoSnapshotPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See ApplyAutoSnapshotPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) ApplyAutoSnapshotPolicyWithContext(ctx byteplus.Context, input *ApplyAutoSnapshotPolicyInput, opts ...request.Option) (*ApplyAutoSnapshotPolicyOutput, error) {
	req, out := c.ApplyAutoSnapshotPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApplyAutoSnapshotPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AutoSnapshotPolicyId is a required field
	AutoSnapshotPolicyId *string `type:"string" json:",omitempty" required:"true"`

	// FileSystemIds is a required field
	FileSystemIds *string `type:"string" json:",omitempty" required:"true"`

	// SnapshotPolicyId is a required field
	SnapshotPolicyId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ApplyAutoSnapshotPolicyInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyAutoSnapshotPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ApplyAutoSnapshotPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ApplyAutoSnapshotPolicyInput"}
	if s.AutoSnapshotPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("AutoSnapshotPolicyId"))
	}
	if s.FileSystemIds == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemIds"))
	}
	if s.SnapshotPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("SnapshotPolicyId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoSnapshotPolicyId sets the AutoSnapshotPolicyId field's value.
func (s *ApplyAutoSnapshotPolicyInput) SetAutoSnapshotPolicyId(v string) *ApplyAutoSnapshotPolicyInput {
	s.AutoSnapshotPolicyId = &v
	return s
}

// SetFileSystemIds sets the FileSystemIds field's value.
func (s *ApplyAutoSnapshotPolicyInput) SetFileSystemIds(v string) *ApplyAutoSnapshotPolicyInput {
	s.FileSystemIds = &v
	return s
}

// SetSnapshotPolicyId sets the SnapshotPolicyId field's value.
func (s *ApplyAutoSnapshotPolicyInput) SetSnapshotPolicyId(v string) *ApplyAutoSnapshotPolicyInput {
	s.SnapshotPolicyId = &v
	return s
}

type ApplyAutoSnapshotPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ApplyAutoSnapshotPolicyOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyAutoSnapshotPolicyOutput) GoString() string {
	return s.String()
}
