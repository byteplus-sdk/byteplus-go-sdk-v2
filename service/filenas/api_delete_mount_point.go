// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteMountPointCommon = "DeleteMountPoint"

// DeleteMountPointCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteMountPointCommon operation. The "output" return
// value will be populated with the DeleteMountPointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteMountPointCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteMountPointCommon Send returns without error.
//
// See DeleteMountPointCommon for more information on using the DeleteMountPointCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteMountPointCommonRequest method.
//    req, resp := client.DeleteMountPointCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DeleteMountPointCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteMountPointCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteMountPointCommon API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation DeleteMountPointCommon for usage and error information.
func (c *FILENAS) DeleteMountPointCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteMountPointCommonRequest(input)
	return out, req.Send()
}

// DeleteMountPointCommonWithContext is the same as DeleteMountPointCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteMountPointCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DeleteMountPointCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteMountPointCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteMountPoint = "DeleteMountPoint"

// DeleteMountPointRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteMountPoint operation. The "output" return
// value will be populated with the DeleteMountPointCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteMountPointCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteMountPointCommon Send returns without error.
//
// See DeleteMountPoint for more information on using the DeleteMountPoint
// API call, and error handling.
//
//    // Example sending a request using the DeleteMountPointRequest method.
//    req, resp := client.DeleteMountPointRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DeleteMountPointRequest(input *DeleteMountPointInput) (req *request.Request, output *DeleteMountPointOutput) {
	op := &request.Operation{
		Name:       opDeleteMountPoint,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteMountPointInput{}
	}

	output = &DeleteMountPointOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteMountPoint API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation DeleteMountPoint for usage and error information.
func (c *FILENAS) DeleteMountPoint(input *DeleteMountPointInput) (*DeleteMountPointOutput, error) {
	req, out := c.DeleteMountPointRequest(input)
	return out, req.Send()
}

// DeleteMountPointWithContext is the same as DeleteMountPoint with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteMountPoint for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DeleteMountPointWithContext(ctx byteplus.Context, input *DeleteMountPointInput, opts ...request.Option) (*DeleteMountPointOutput, error) {
	req, out := c.DeleteMountPointRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteMountPointInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FileSystemId is a required field
	FileSystemId *string `type:"string" json:",omitempty" required:"true"`

	// MountPointId is a required field
	MountPointId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteMountPointInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteMountPointInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteMountPointInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteMountPointInput"}
	if s.FileSystemId == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemId"))
	}
	if s.MountPointId == nil {
		invalidParams.Add(request.NewErrParamRequired("MountPointId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *DeleteMountPointInput) SetFileSystemId(v string) *DeleteMountPointInput {
	s.FileSystemId = &v
	return s
}

// SetMountPointId sets the MountPointId field's value.
func (s *DeleteMountPointInput) SetMountPointId(v string) *DeleteMountPointInput {
	s.MountPointId = &v
	return s
}

type DeleteMountPointOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteMountPointOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteMountPointOutput) GoString() string {
	return s.String()
}
