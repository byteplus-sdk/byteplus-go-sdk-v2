// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeFileSystemsCommon = "DescribeFileSystems"

// DescribeFileSystemsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeFileSystemsCommon operation. The "output" return
// value will be populated with the DescribeFileSystemsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeFileSystemsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeFileSystemsCommon Send returns without error.
//
// See DescribeFileSystemsCommon for more information on using the DescribeFileSystemsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeFileSystemsCommonRequest method.
//    req, resp := client.DescribeFileSystemsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DescribeFileSystemsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeFileSystemsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeFileSystemsCommon API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation DescribeFileSystemsCommon for usage and error information.
func (c *FILENAS) DescribeFileSystemsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeFileSystemsCommonRequest(input)
	return out, req.Send()
}

// DescribeFileSystemsCommonWithContext is the same as DescribeFileSystemsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeFileSystemsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DescribeFileSystemsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeFileSystemsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeFileSystems = "DescribeFileSystems"

// DescribeFileSystemsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeFileSystems operation. The "output" return
// value will be populated with the DescribeFileSystemsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeFileSystemsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeFileSystemsCommon Send returns without error.
//
// See DescribeFileSystems for more information on using the DescribeFileSystems
// API call, and error handling.
//
//    // Example sending a request using the DescribeFileSystemsRequest method.
//    req, resp := client.DescribeFileSystemsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DescribeFileSystemsRequest(input *DescribeFileSystemsInput) (req *request.Request, output *DescribeFileSystemsOutput) {
	op := &request.Operation{
		Name:       opDescribeFileSystems,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeFileSystemsInput{}
	}

	output = &DescribeFileSystemsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeFileSystems API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation DescribeFileSystems for usage and error information.
func (c *FILENAS) DescribeFileSystems(input *DescribeFileSystemsInput) (*DescribeFileSystemsOutput, error) {
	req, out := c.DescribeFileSystemsRequest(input)
	return out, req.Send()
}

// DescribeFileSystemsWithContext is the same as DescribeFileSystems with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeFileSystems for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DescribeFileSystemsWithContext(ctx byteplus.Context, input *DescribeFileSystemsInput, opts ...request.Option) (*DescribeFileSystemsOutput, error) {
	req, out := c.DescribeFileSystemsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CachePerformanceForDescribeFileSystemsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BaseBandwidth *int32 `type:"int32" json:",omitempty"`

	CacheBandwidth *int32 `type:"int32" json:",omitempty"`

	DataFlowBandwidth *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s CachePerformanceForDescribeFileSystemsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CachePerformanceForDescribeFileSystemsOutput) GoString() string {
	return s.String()
}

// SetBaseBandwidth sets the BaseBandwidth field's value.
func (s *CachePerformanceForDescribeFileSystemsOutput) SetBaseBandwidth(v int32) *CachePerformanceForDescribeFileSystemsOutput {
	s.BaseBandwidth = &v
	return s
}

// SetCacheBandwidth sets the CacheBandwidth field's value.
func (s *CachePerformanceForDescribeFileSystemsOutput) SetCacheBandwidth(v int32) *CachePerformanceForDescribeFileSystemsOutput {
	s.CacheBandwidth = &v
	return s
}

// SetDataFlowBandwidth sets the DataFlowBandwidth field's value.
func (s *CachePerformanceForDescribeFileSystemsOutput) SetDataFlowBandwidth(v int32) *CachePerformanceForDescribeFileSystemsOutput {
	s.DataFlowBandwidth = &v
	return s
}

type CapacityForDescribeFileSystemsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`

	Used *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CapacityForDescribeFileSystemsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CapacityForDescribeFileSystemsOutput) GoString() string {
	return s.String()
}

// SetTotal sets the Total field's value.
func (s *CapacityForDescribeFileSystemsOutput) SetTotal(v int64) *CapacityForDescribeFileSystemsOutput {
	s.Total = &v
	return s
}

// SetUsed sets the Used field's value.
func (s *CapacityForDescribeFileSystemsOutput) SetUsed(v int64) *CapacityForDescribeFileSystemsOutput {
	s.Used = &v
	return s
}

type DescribeFileSystemsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FileSystemIds *string `type:"string" json:",omitempty"`

	FileSystemType *string `type:"string" json:",omitempty" enum:"EnumOfFileSystemTypeForDescribeFileSystemsInput"`

	Filters []*FilterForDescribeFileSystemsInput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForDescribeFileSystemsInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeFileSystemsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFileSystemsInput) GoString() string {
	return s.String()
}

// SetFileSystemIds sets the FileSystemIds field's value.
func (s *DescribeFileSystemsInput) SetFileSystemIds(v string) *DescribeFileSystemsInput {
	s.FileSystemIds = &v
	return s
}

// SetFileSystemType sets the FileSystemType field's value.
func (s *DescribeFileSystemsInput) SetFileSystemType(v string) *DescribeFileSystemsInput {
	s.FileSystemType = &v
	return s
}

// SetFilters sets the Filters field's value.
func (s *DescribeFileSystemsInput) SetFilters(v []*FilterForDescribeFileSystemsInput) *DescribeFileSystemsInput {
	s.Filters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeFileSystemsInput) SetPageNumber(v int32) *DescribeFileSystemsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeFileSystemsInput) SetPageSize(v int32) *DescribeFileSystemsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeFileSystemsInput) SetProjectName(v string) *DescribeFileSystemsInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeFileSystemsInput) SetTagFilters(v []*TagFilterForDescribeFileSystemsInput) *DescribeFileSystemsInput {
	s.TagFilters = v
	return s
}

type DescribeFileSystemsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileSystems []*FileSystemForDescribeFileSystemsOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeFileSystemsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFileSystemsOutput) GoString() string {
	return s.String()
}

// SetFileSystems sets the FileSystems field's value.
func (s *DescribeFileSystemsOutput) SetFileSystems(v []*FileSystemForDescribeFileSystemsOutput) *DescribeFileSystemsOutput {
	s.FileSystems = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeFileSystemsOutput) SetPageNumber(v int32) *DescribeFileSystemsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeFileSystemsOutput) SetPageSize(v int32) *DescribeFileSystemsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeFileSystemsOutput) SetTotalCount(v int32) *DescribeFileSystemsOutput {
	s.TotalCount = &v
	return s
}

type FileSystemForDescribeFileSystemsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CachePerformance *CachePerformanceForDescribeFileSystemsOutput `type:"structure" json:",omitempty"`

	Capacity *CapacityForDescribeFileSystemsOutput `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty" enum:"EnumOfChargeTypeForDescribeFileSystemsOutput"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	FileSystemId *string `type:"string" json:",omitempty"`

	FileSystemName *string `type:"string" json:",omitempty"`

	FileSystemType *string `type:"string" json:",omitempty" enum:"EnumOfFileSystemTypeForDescribeFileSystemsOutput"`

	ProjectName *string `type:"string" json:",omitempty"`

	ProtocolType *string `type:"string" json:",omitempty" enum:"EnumOfProtocolTypeForDescribeFileSystemsOutput"`

	RegionId *string `type:"string" json:",omitempty"`

	SnapshotCount *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForDescribeFileSystemsOutput"`

	StorageType *string `type:"string" json:",omitempty" enum:"EnumOfStorageTypeForDescribeFileSystemsOutput"`

	Tags []*TagForDescribeFileSystemsOutput `type:"list" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`

	ZoneName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FileSystemForDescribeFileSystemsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FileSystemForDescribeFileSystemsOutput) GoString() string {
	return s.String()
}

// SetCachePerformance sets the CachePerformance field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetCachePerformance(v *CachePerformanceForDescribeFileSystemsOutput) *FileSystemForDescribeFileSystemsOutput {
	s.CachePerformance = v
	return s
}

// SetCapacity sets the Capacity field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetCapacity(v *CapacityForDescribeFileSystemsOutput) *FileSystemForDescribeFileSystemsOutput {
	s.Capacity = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetChargeType(v string) *FileSystemForDescribeFileSystemsOutput {
	s.ChargeType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetCreateTime(v string) *FileSystemForDescribeFileSystemsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetDescription(v string) *FileSystemForDescribeFileSystemsOutput {
	s.Description = &v
	return s
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetFileSystemId(v string) *FileSystemForDescribeFileSystemsOutput {
	s.FileSystemId = &v
	return s
}

// SetFileSystemName sets the FileSystemName field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetFileSystemName(v string) *FileSystemForDescribeFileSystemsOutput {
	s.FileSystemName = &v
	return s
}

// SetFileSystemType sets the FileSystemType field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetFileSystemType(v string) *FileSystemForDescribeFileSystemsOutput {
	s.FileSystemType = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetProjectName(v string) *FileSystemForDescribeFileSystemsOutput {
	s.ProjectName = &v
	return s
}

// SetProtocolType sets the ProtocolType field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetProtocolType(v string) *FileSystemForDescribeFileSystemsOutput {
	s.ProtocolType = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetRegionId(v string) *FileSystemForDescribeFileSystemsOutput {
	s.RegionId = &v
	return s
}

// SetSnapshotCount sets the SnapshotCount field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetSnapshotCount(v int32) *FileSystemForDescribeFileSystemsOutput {
	s.SnapshotCount = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetStatus(v string) *FileSystemForDescribeFileSystemsOutput {
	s.Status = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetStorageType(v string) *FileSystemForDescribeFileSystemsOutput {
	s.StorageType = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetTags(v []*TagForDescribeFileSystemsOutput) *FileSystemForDescribeFileSystemsOutput {
	s.Tags = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetUpdateTime(v string) *FileSystemForDescribeFileSystemsOutput {
	s.UpdateTime = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetVersion(v string) *FileSystemForDescribeFileSystemsOutput {
	s.Version = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetZoneId(v string) *FileSystemForDescribeFileSystemsOutput {
	s.ZoneId = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *FileSystemForDescribeFileSystemsOutput) SetZoneName(v string) *FileSystemForDescribeFileSystemsOutput {
	s.ZoneName = &v
	return s
}

type FilterForDescribeFileSystemsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty" enum:"EnumOfKeyForDescribeFileSystemsInput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForDescribeFileSystemsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForDescribeFileSystemsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *FilterForDescribeFileSystemsInput) SetKey(v string) *FilterForDescribeFileSystemsInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *FilterForDescribeFileSystemsInput) SetValue(v string) *FilterForDescribeFileSystemsInput {
	s.Value = &v
	return s
}

type TagFilterForDescribeFileSystemsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForDescribeFileSystemsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeFileSystemsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeFileSystemsInput) SetKey(v string) *TagFilterForDescribeFileSystemsInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagFilterForDescribeFileSystemsInput) SetValue(v string) *TagFilterForDescribeFileSystemsInput {
	s.Value = &v
	return s
}

type TagForDescribeFileSystemsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForDescribeFileSystemsOutput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeFileSystemsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeFileSystemsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeFileSystemsOutput) SetKey(v string) *TagForDescribeFileSystemsOutput {
	s.Key = &v
	return s
}

// SetType sets the Type field's value.
func (s *TagForDescribeFileSystemsOutput) SetType(v string) *TagForDescribeFileSystemsOutput {
	s.Type = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeFileSystemsOutput) SetValue(v string) *TagForDescribeFileSystemsOutput {
	s.Value = &v
	return s
}

const (
	// EnumOfChargeTypeForDescribeFileSystemsOutputPayAsYouGo is a EnumOfChargeTypeForDescribeFileSystemsOutput enum value
	EnumOfChargeTypeForDescribeFileSystemsOutputPayAsYouGo = "PayAsYouGo"

	// EnumOfChargeTypeForDescribeFileSystemsOutputSubscription is a EnumOfChargeTypeForDescribeFileSystemsOutput enum value
	EnumOfChargeTypeForDescribeFileSystemsOutputSubscription = "Subscription"

	// EnumOfChargeTypeForDescribeFileSystemsOutputPackage is a EnumOfChargeTypeForDescribeFileSystemsOutput enum value
	EnumOfChargeTypeForDescribeFileSystemsOutputPackage = "Package"

	// EnumOfChargeTypeForDescribeFileSystemsOutputNotEnabled is a EnumOfChargeTypeForDescribeFileSystemsOutput enum value
	EnumOfChargeTypeForDescribeFileSystemsOutputNotEnabled = "NotEnabled"
)

const (
	// EnumOfFileSystemTypeForDescribeFileSystemsInputExtreme is a EnumOfFileSystemTypeForDescribeFileSystemsInput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsInputExtreme = "Extreme"

	// EnumOfFileSystemTypeForDescribeFileSystemsInputCapacity is a EnumOfFileSystemTypeForDescribeFileSystemsInput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsInputCapacity = "Capacity"

	// EnumOfFileSystemTypeForDescribeFileSystemsInputCache is a EnumOfFileSystemTypeForDescribeFileSystemsInput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsInputCache = "Cache"
)

const (
	// EnumOfFileSystemTypeForDescribeFileSystemsOutputExtreme is a EnumOfFileSystemTypeForDescribeFileSystemsOutput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsOutputExtreme = "Extreme"

	// EnumOfFileSystemTypeForDescribeFileSystemsOutputCommon is a EnumOfFileSystemTypeForDescribeFileSystemsOutput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsOutputCommon = "Common"

	// EnumOfFileSystemTypeForDescribeFileSystemsOutputCache is a EnumOfFileSystemTypeForDescribeFileSystemsOutput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsOutputCache = "Cache"

	// EnumOfFileSystemTypeForDescribeFileSystemsOutputCapacity is a EnumOfFileSystemTypeForDescribeFileSystemsOutput enum value
	EnumOfFileSystemTypeForDescribeFileSystemsOutputCapacity = "Capacity"
)

const (
	// EnumOfKeyForDescribeFileSystemsInputStatus is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputStatus = "Status"

	// EnumOfKeyForDescribeFileSystemsInputFileSystemName is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputFileSystemName = "FileSystemName"

	// EnumOfKeyForDescribeFileSystemsInputZoneId is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputZoneId = "ZoneId"

	// EnumOfKeyForDescribeFileSystemsInputProtocolType is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputProtocolType = "ProtocolType"

	// EnumOfKeyForDescribeFileSystemsInputStorageType is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputStorageType = "StorageType"

	// EnumOfKeyForDescribeFileSystemsInputChargeType is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputChargeType = "ChargeType"

	// EnumOfKeyForDescribeFileSystemsInputPermissionGroupId is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputPermissionGroupId = "PermissionGroupId"

	// EnumOfKeyForDescribeFileSystemsInputMountPointId is a EnumOfKeyForDescribeFileSystemsInput enum value
	EnumOfKeyForDescribeFileSystemsInputMountPointId = "MountPointId"
)

const (
	// EnumOfProtocolTypeForDescribeFileSystemsOutputNfs is a EnumOfProtocolTypeForDescribeFileSystemsOutput enum value
	EnumOfProtocolTypeForDescribeFileSystemsOutputNfs = "NFS"
)

const (
	// EnumOfStatusForDescribeFileSystemsOutputUnknown is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputUnknown = "Unknown"

	// EnumOfStatusForDescribeFileSystemsOutputRunning is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputRunning = "Running"

	// EnumOfStatusForDescribeFileSystemsOutputCreating is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputCreating = "Creating"

	// EnumOfStatusForDescribeFileSystemsOutputExpanding is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputExpanding = "Expanding"

	// EnumOfStatusForDescribeFileSystemsOutputError is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputError = "Error"

	// EnumOfStatusForDescribeFileSystemsOutputDeleting is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputDeleting = "Deleting"

	// EnumOfStatusForDescribeFileSystemsOutputDeleteError is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputDeleteError = "DeleteError"

	// EnumOfStatusForDescribeFileSystemsOutputDeleted is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputDeleted = "Deleted"

	// EnumOfStatusForDescribeFileSystemsOutputStopped is a EnumOfStatusForDescribeFileSystemsOutput enum value
	EnumOfStatusForDescribeFileSystemsOutputStopped = "Stopped"
)

const (
	// EnumOfStorageTypeForDescribeFileSystemsOutputStandard is a EnumOfStorageTypeForDescribeFileSystemsOutput enum value
	EnumOfStorageTypeForDescribeFileSystemsOutputStandard = "Standard"

	// EnumOfStorageTypeForDescribeFileSystemsOutputAdvance is a EnumOfStorageTypeForDescribeFileSystemsOutput enum value
	EnumOfStorageTypeForDescribeFileSystemsOutputAdvance = "Advance"
)

const (
	// EnumOfTypeForDescribeFileSystemsOutputCustom is a EnumOfTypeForDescribeFileSystemsOutput enum value
	EnumOfTypeForDescribeFileSystemsOutputCustom = "Custom"

	// EnumOfTypeForDescribeFileSystemsOutputSystem is a EnumOfTypeForDescribeFileSystemsOutput enum value
	EnumOfTypeForDescribeFileSystemsOutputSystem = "System"
)
