// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribePermissionGroupsCommon = "DescribePermissionGroups"

// DescribePermissionGroupsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribePermissionGroupsCommon operation. The "output" return
// value will be populated with the DescribePermissionGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribePermissionGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribePermissionGroupsCommon Send returns without error.
//
// See DescribePermissionGroupsCommon for more information on using the DescribePermissionGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribePermissionGroupsCommonRequest method.
//    req, resp := client.DescribePermissionGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DescribePermissionGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribePermissionGroupsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribePermissionGroupsCommon API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation DescribePermissionGroupsCommon for usage and error information.
func (c *FILENAS) DescribePermissionGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribePermissionGroupsCommonRequest(input)
	return out, req.Send()
}

// DescribePermissionGroupsCommonWithContext is the same as DescribePermissionGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribePermissionGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DescribePermissionGroupsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribePermissionGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribePermissionGroups = "DescribePermissionGroups"

// DescribePermissionGroupsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribePermissionGroups operation. The "output" return
// value will be populated with the DescribePermissionGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribePermissionGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribePermissionGroupsCommon Send returns without error.
//
// See DescribePermissionGroups for more information on using the DescribePermissionGroups
// API call, and error handling.
//
//    // Example sending a request using the DescribePermissionGroupsRequest method.
//    req, resp := client.DescribePermissionGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) DescribePermissionGroupsRequest(input *DescribePermissionGroupsInput) (req *request.Request, output *DescribePermissionGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribePermissionGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribePermissionGroupsInput{}
	}

	output = &DescribePermissionGroupsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribePermissionGroups API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation DescribePermissionGroups for usage and error information.
func (c *FILENAS) DescribePermissionGroups(input *DescribePermissionGroupsInput) (*DescribePermissionGroupsOutput, error) {
	req, out := c.DescribePermissionGroupsRequest(input)
	return out, req.Send()
}

// DescribePermissionGroupsWithContext is the same as DescribePermissionGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribePermissionGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) DescribePermissionGroupsWithContext(ctx byteplus.Context, input *DescribePermissionGroupsInput, opts ...request.Option) (*DescribePermissionGroupsOutput, error) {
	req, out := c.DescribePermissionGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribePermissionGroupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FileSystemType is a required field
	FileSystemType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfFileSystemTypeForDescribePermissionGroupsInput"`

	Filters []*FilterForDescribePermissionGroupsInput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribePermissionGroupsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribePermissionGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribePermissionGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribePermissionGroupsInput"}
	if s.FileSystemType == nil {
		invalidParams.Add(request.NewErrParamRequired("FileSystemType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFileSystemType sets the FileSystemType field's value.
func (s *DescribePermissionGroupsInput) SetFileSystemType(v string) *DescribePermissionGroupsInput {
	s.FileSystemType = &v
	return s
}

// SetFilters sets the Filters field's value.
func (s *DescribePermissionGroupsInput) SetFilters(v []*FilterForDescribePermissionGroupsInput) *DescribePermissionGroupsInput {
	s.Filters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribePermissionGroupsInput) SetPageNumber(v int32) *DescribePermissionGroupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribePermissionGroupsInput) SetPageSize(v int32) *DescribePermissionGroupsInput {
	s.PageSize = &v
	return s
}

type DescribePermissionGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	PermissionGroups []*PermissionGroupForDescribePermissionGroupsOutput `type:"list" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribePermissionGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribePermissionGroupsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribePermissionGroupsOutput) SetPageNumber(v int32) *DescribePermissionGroupsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribePermissionGroupsOutput) SetPageSize(v int32) *DescribePermissionGroupsOutput {
	s.PageSize = &v
	return s
}

// SetPermissionGroups sets the PermissionGroups field's value.
func (s *DescribePermissionGroupsOutput) SetPermissionGroups(v []*PermissionGroupForDescribePermissionGroupsOutput) *DescribePermissionGroupsOutput {
	s.PermissionGroups = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribePermissionGroupsOutput) SetTotalCount(v int32) *DescribePermissionGroupsOutput {
	s.TotalCount = &v
	return s
}

type FilterForDescribePermissionGroupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty" enum:"EnumOfKeyForDescribePermissionGroupsInput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForDescribePermissionGroupsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForDescribePermissionGroupsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *FilterForDescribePermissionGroupsInput) SetKey(v string) *FilterForDescribePermissionGroupsInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *FilterForDescribePermissionGroupsInput) SetValue(v string) *FilterForDescribePermissionGroupsInput {
	s.Value = &v
	return s
}

type MountPointForDescribePermissionGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FileSystemId *string `type:"string" json:",omitempty"`

	MountPointId *string `type:"string" json:",omitempty"`

	MountPointName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MountPointForDescribePermissionGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s MountPointForDescribePermissionGroupsOutput) GoString() string {
	return s.String()
}

// SetFileSystemId sets the FileSystemId field's value.
func (s *MountPointForDescribePermissionGroupsOutput) SetFileSystemId(v string) *MountPointForDescribePermissionGroupsOutput {
	s.FileSystemId = &v
	return s
}

// SetMountPointId sets the MountPointId field's value.
func (s *MountPointForDescribePermissionGroupsOutput) SetMountPointId(v string) *MountPointForDescribePermissionGroupsOutput {
	s.MountPointId = &v
	return s
}

// SetMountPointName sets the MountPointName field's value.
func (s *MountPointForDescribePermissionGroupsOutput) SetMountPointName(v string) *MountPointForDescribePermissionGroupsOutput {
	s.MountPointName = &v
	return s
}

type PermissionGroupForDescribePermissionGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	FileSystemCount *int32 `type:"int32" json:",omitempty"`

	FileSystemType *string `type:"string" json:",omitempty" enum:"EnumOfFileSystemTypeForDescribePermissionGroupsOutput"`

	MountPoints []*MountPointForDescribePermissionGroupsOutput `type:"list" json:",omitempty"`

	PermissionGroupId *string `type:"string" json:",omitempty"`

	PermissionGroupName *string `type:"string" json:",omitempty"`

	PermissionRuleCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PermissionGroupForDescribePermissionGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s PermissionGroupForDescribePermissionGroupsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetCreateTime(v string) *PermissionGroupForDescribePermissionGroupsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetDescription(v string) *PermissionGroupForDescribePermissionGroupsOutput {
	s.Description = &v
	return s
}

// SetFileSystemCount sets the FileSystemCount field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetFileSystemCount(v int32) *PermissionGroupForDescribePermissionGroupsOutput {
	s.FileSystemCount = &v
	return s
}

// SetFileSystemType sets the FileSystemType field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetFileSystemType(v string) *PermissionGroupForDescribePermissionGroupsOutput {
	s.FileSystemType = &v
	return s
}

// SetMountPoints sets the MountPoints field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetMountPoints(v []*MountPointForDescribePermissionGroupsOutput) *PermissionGroupForDescribePermissionGroupsOutput {
	s.MountPoints = v
	return s
}

// SetPermissionGroupId sets the PermissionGroupId field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetPermissionGroupId(v string) *PermissionGroupForDescribePermissionGroupsOutput {
	s.PermissionGroupId = &v
	return s
}

// SetPermissionGroupName sets the PermissionGroupName field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetPermissionGroupName(v string) *PermissionGroupForDescribePermissionGroupsOutput {
	s.PermissionGroupName = &v
	return s
}

// SetPermissionRuleCount sets the PermissionRuleCount field's value.
func (s *PermissionGroupForDescribePermissionGroupsOutput) SetPermissionRuleCount(v int32) *PermissionGroupForDescribePermissionGroupsOutput {
	s.PermissionRuleCount = &v
	return s
}

const (
	// EnumOfFileSystemTypeForDescribePermissionGroupsInputExtreme is a EnumOfFileSystemTypeForDescribePermissionGroupsInput enum value
	EnumOfFileSystemTypeForDescribePermissionGroupsInputExtreme = "Extreme"

	// EnumOfFileSystemTypeForDescribePermissionGroupsInputCapacity is a EnumOfFileSystemTypeForDescribePermissionGroupsInput enum value
	EnumOfFileSystemTypeForDescribePermissionGroupsInputCapacity = "Capacity"

	// EnumOfFileSystemTypeForDescribePermissionGroupsInputCache is a EnumOfFileSystemTypeForDescribePermissionGroupsInput enum value
	EnumOfFileSystemTypeForDescribePermissionGroupsInputCache = "Cache"
)

const (
	// EnumOfFileSystemTypeForDescribePermissionGroupsOutputExtreme is a EnumOfFileSystemTypeForDescribePermissionGroupsOutput enum value
	EnumOfFileSystemTypeForDescribePermissionGroupsOutputExtreme = "Extreme"

	// EnumOfFileSystemTypeForDescribePermissionGroupsOutputCapacity is a EnumOfFileSystemTypeForDescribePermissionGroupsOutput enum value
	EnumOfFileSystemTypeForDescribePermissionGroupsOutputCapacity = "Capacity"

	// EnumOfFileSystemTypeForDescribePermissionGroupsOutputCache is a EnumOfFileSystemTypeForDescribePermissionGroupsOutput enum value
	EnumOfFileSystemTypeForDescribePermissionGroupsOutputCache = "Cache"
)

const (
	// EnumOfKeyForDescribePermissionGroupsInputPermissionGroupName is a EnumOfKeyForDescribePermissionGroupsInput enum value
	EnumOfKeyForDescribePermissionGroupsInputPermissionGroupName = "PermissionGroupName"

	// EnumOfKeyForDescribePermissionGroupsInputPermissionGroupId is a EnumOfKeyForDescribePermissionGroupsInput enum value
	EnumOfKeyForDescribePermissionGroupsInputPermissionGroupId = "PermissionGroupId"
)
