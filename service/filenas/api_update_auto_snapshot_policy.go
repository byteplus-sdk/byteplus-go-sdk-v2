// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package filenas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opUpdateAutoSnapshotPolicyCommon = "UpdateAutoSnapshotPolicy"

// UpdateAutoSnapshotPolicyCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the UpdateAutoSnapshotPolicyCommon operation. The "output" return
// value will be populated with the UpdateAutoSnapshotPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAutoSnapshotPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAutoSnapshotPolicyCommon Send returns without error.
//
// See UpdateAutoSnapshotPolicyCommon for more information on using the UpdateAutoSnapshotPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAutoSnapshotPolicyCommonRequest method.
//    req, resp := client.UpdateAutoSnapshotPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) UpdateAutoSnapshotPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAutoSnapshotPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAutoSnapshotPolicyCommon API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation UpdateAutoSnapshotPolicyCommon for usage and error information.
func (c *FILENAS) UpdateAutoSnapshotPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAutoSnapshotPolicyCommonRequest(input)
	return out, req.Send()
}

// UpdateAutoSnapshotPolicyCommonWithContext is the same as UpdateAutoSnapshotPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAutoSnapshotPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) UpdateAutoSnapshotPolicyCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAutoSnapshotPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAutoSnapshotPolicy = "UpdateAutoSnapshotPolicy"

// UpdateAutoSnapshotPolicyRequest generates a "byteplus/request.Request" representing the
// client's request for the UpdateAutoSnapshotPolicy operation. The "output" return
// value will be populated with the UpdateAutoSnapshotPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAutoSnapshotPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAutoSnapshotPolicyCommon Send returns without error.
//
// See UpdateAutoSnapshotPolicy for more information on using the UpdateAutoSnapshotPolicy
// API call, and error handling.
//
//    // Example sending a request using the UpdateAutoSnapshotPolicyRequest method.
//    req, resp := client.UpdateAutoSnapshotPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FILENAS) UpdateAutoSnapshotPolicyRequest(input *UpdateAutoSnapshotPolicyInput) (req *request.Request, output *UpdateAutoSnapshotPolicyOutput) {
	op := &request.Operation{
		Name:       opUpdateAutoSnapshotPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAutoSnapshotPolicyInput{}
	}

	output = &UpdateAutoSnapshotPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAutoSnapshotPolicy API operation for FILENAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for FILENAS's
// API operation UpdateAutoSnapshotPolicy for usage and error information.
func (c *FILENAS) UpdateAutoSnapshotPolicy(input *UpdateAutoSnapshotPolicyInput) (*UpdateAutoSnapshotPolicyOutput, error) {
	req, out := c.UpdateAutoSnapshotPolicyRequest(input)
	return out, req.Send()
}

// UpdateAutoSnapshotPolicyWithContext is the same as UpdateAutoSnapshotPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAutoSnapshotPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FILENAS) UpdateAutoSnapshotPolicyWithContext(ctx byteplus.Context, input *UpdateAutoSnapshotPolicyInput, opts ...request.Option) (*UpdateAutoSnapshotPolicyOutput, error) {
	req, out := c.UpdateAutoSnapshotPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateAutoSnapshotPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AutoSnapshotPolicyId is a required field
	AutoSnapshotPolicyId *string `type:"string" json:",omitempty" required:"true"`

	AutoSnapshotPolicyName *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	RepeatWeekdays *string `type:"string" json:",omitempty"`

	RetentionDays *string `type:"string" json:",omitempty"`

	TimePoints *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAutoSnapshotPolicyInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAutoSnapshotPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAutoSnapshotPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateAutoSnapshotPolicyInput"}
	if s.AutoSnapshotPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("AutoSnapshotPolicyId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoSnapshotPolicyId sets the AutoSnapshotPolicyId field's value.
func (s *UpdateAutoSnapshotPolicyInput) SetAutoSnapshotPolicyId(v string) *UpdateAutoSnapshotPolicyInput {
	s.AutoSnapshotPolicyId = &v
	return s
}

// SetAutoSnapshotPolicyName sets the AutoSnapshotPolicyName field's value.
func (s *UpdateAutoSnapshotPolicyInput) SetAutoSnapshotPolicyName(v string) *UpdateAutoSnapshotPolicyInput {
	s.AutoSnapshotPolicyName = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateAutoSnapshotPolicyInput) SetDescription(v string) *UpdateAutoSnapshotPolicyInput {
	s.Description = &v
	return s
}

// SetRepeatWeekdays sets the RepeatWeekdays field's value.
func (s *UpdateAutoSnapshotPolicyInput) SetRepeatWeekdays(v string) *UpdateAutoSnapshotPolicyInput {
	s.RepeatWeekdays = &v
	return s
}

// SetRetentionDays sets the RetentionDays field's value.
func (s *UpdateAutoSnapshotPolicyInput) SetRetentionDays(v string) *UpdateAutoSnapshotPolicyInput {
	s.RetentionDays = &v
	return s
}

// SetTimePoints sets the TimePoints field's value.
func (s *UpdateAutoSnapshotPolicyInput) SetTimePoints(v string) *UpdateAutoSnapshotPolicyInput {
	s.TimePoints = &v
	return s
}

type UpdateAutoSnapshotPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateAutoSnapshotPolicyOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAutoSnapshotPolicyOutput) GoString() string {
	return s.String()
}
