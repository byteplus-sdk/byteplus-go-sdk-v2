// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyVolumeChargeTypeCommon = "ModifyVolumeChargeType"

// ModifyVolumeChargeTypeCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyVolumeChargeTypeCommon operation. The "output" return
// value will be populated with the ModifyVolumeChargeTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVolumeChargeTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVolumeChargeTypeCommon Send returns without error.
//
// See ModifyVolumeChargeTypeCommon for more information on using the ModifyVolumeChargeTypeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyVolumeChargeTypeCommonRequest method.
//    req, resp := client.ModifyVolumeChargeTypeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) ModifyVolumeChargeTypeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyVolumeChargeTypeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVolumeChargeTypeCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation ModifyVolumeChargeTypeCommon for usage and error information.
func (c *STORAGEEBS) ModifyVolumeChargeTypeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyVolumeChargeTypeCommonRequest(input)
	return out, req.Send()
}

// ModifyVolumeChargeTypeCommonWithContext is the same as ModifyVolumeChargeTypeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVolumeChargeTypeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) ModifyVolumeChargeTypeCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyVolumeChargeTypeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVolumeChargeType = "ModifyVolumeChargeType"

// ModifyVolumeChargeTypeRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyVolumeChargeType operation. The "output" return
// value will be populated with the ModifyVolumeChargeTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVolumeChargeTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVolumeChargeTypeCommon Send returns without error.
//
// See ModifyVolumeChargeType for more information on using the ModifyVolumeChargeType
// API call, and error handling.
//
//    // Example sending a request using the ModifyVolumeChargeTypeRequest method.
//    req, resp := client.ModifyVolumeChargeTypeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) ModifyVolumeChargeTypeRequest(input *ModifyVolumeChargeTypeInput) (req *request.Request, output *ModifyVolumeChargeTypeOutput) {
	op := &request.Operation{
		Name:       opModifyVolumeChargeType,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyVolumeChargeTypeInput{}
	}

	output = &ModifyVolumeChargeTypeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVolumeChargeType API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation ModifyVolumeChargeType for usage and error information.
func (c *STORAGEEBS) ModifyVolumeChargeType(input *ModifyVolumeChargeTypeInput) (*ModifyVolumeChargeTypeOutput, error) {
	req, out := c.ModifyVolumeChargeTypeRequest(input)
	return out, req.Send()
}

// ModifyVolumeChargeTypeWithContext is the same as ModifyVolumeChargeType with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVolumeChargeType for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) ModifyVolumeChargeTypeWithContext(ctx byteplus.Context, input *ModifyVolumeChargeTypeInput, opts ...request.Option) (*ModifyVolumeChargeTypeOutput, error) {
	req, out := c.ModifyVolumeChargeTypeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyVolumeChargeTypeInput struct {
	_ struct{} `type:"structure"`

	AutoPay *bool `type:"boolean"`

	// DiskChargeType is a required field
	DiskChargeType *string `type:"string" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`

	// VolumeIds is a required field
	VolumeIds []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s ModifyVolumeChargeTypeInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVolumeChargeTypeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyVolumeChargeTypeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyVolumeChargeTypeInput"}
	if s.DiskChargeType == nil {
		invalidParams.Add(request.NewErrParamRequired("DiskChargeType"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.VolumeIds == nil {
		invalidParams.Add(request.NewErrParamRequired("VolumeIds"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoPay sets the AutoPay field's value.
func (s *ModifyVolumeChargeTypeInput) SetAutoPay(v bool) *ModifyVolumeChargeTypeInput {
	s.AutoPay = &v
	return s
}

// SetDiskChargeType sets the DiskChargeType field's value.
func (s *ModifyVolumeChargeTypeInput) SetDiskChargeType(v string) *ModifyVolumeChargeTypeInput {
	s.DiskChargeType = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyVolumeChargeTypeInput) SetInstanceId(v string) *ModifyVolumeChargeTypeInput {
	s.InstanceId = &v
	return s
}

// SetVolumeIds sets the VolumeIds field's value.
func (s *ModifyVolumeChargeTypeInput) SetVolumeIds(v []*string) *ModifyVolumeChargeTypeInput {
	s.VolumeIds = v
	return s
}

type ModifyVolumeChargeTypeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Number *string `type:"string"`
}

// String returns the string representation
func (s ModifyVolumeChargeTypeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVolumeChargeTypeOutput) GoString() string {
	return s.String()
}

// SetNumber sets the Number field's value.
func (s *ModifyVolumeChargeTypeOutput) SetNumber(v string) *ModifyVolumeChargeTypeOutput {
	s.Number = &v
	return s
}
