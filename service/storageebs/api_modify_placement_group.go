// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyPlacementGroupCommon = "ModifyPlacementGroup"

// ModifyPlacementGroupCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyPlacementGroupCommon operation. The "output" return
// value will be populated with the ModifyPlacementGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyPlacementGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyPlacementGroupCommon Send returns without error.
//
// See ModifyPlacementGroupCommon for more information on using the ModifyPlacementGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyPlacementGroupCommonRequest method.
//    req, resp := client.ModifyPlacementGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) ModifyPlacementGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyPlacementGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyPlacementGroupCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation ModifyPlacementGroupCommon for usage and error information.
func (c *STORAGEEBS) ModifyPlacementGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyPlacementGroupCommonRequest(input)
	return out, req.Send()
}

// ModifyPlacementGroupCommonWithContext is the same as ModifyPlacementGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyPlacementGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) ModifyPlacementGroupCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyPlacementGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyPlacementGroup = "ModifyPlacementGroup"

// ModifyPlacementGroupRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyPlacementGroup operation. The "output" return
// value will be populated with the ModifyPlacementGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyPlacementGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyPlacementGroupCommon Send returns without error.
//
// See ModifyPlacementGroup for more information on using the ModifyPlacementGroup
// API call, and error handling.
//
//    // Example sending a request using the ModifyPlacementGroupRequest method.
//    req, resp := client.ModifyPlacementGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) ModifyPlacementGroupRequest(input *ModifyPlacementGroupInput) (req *request.Request, output *ModifyPlacementGroupOutput) {
	op := &request.Operation{
		Name:       opModifyPlacementGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyPlacementGroupInput{}
	}

	output = &ModifyPlacementGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyPlacementGroup API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation ModifyPlacementGroup for usage and error information.
func (c *STORAGEEBS) ModifyPlacementGroup(input *ModifyPlacementGroupInput) (*ModifyPlacementGroupOutput, error) {
	req, out := c.ModifyPlacementGroupRequest(input)
	return out, req.Send()
}

// ModifyPlacementGroupWithContext is the same as ModifyPlacementGroup with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyPlacementGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) ModifyPlacementGroupWithContext(ctx byteplus.Context, input *ModifyPlacementGroupInput, opts ...request.Option) (*ModifyPlacementGroupOutput, error) {
	req, out := c.ModifyPlacementGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyPlacementGroupInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	// Id is a required field
	Id *string `type:"string" required:"true"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s ModifyPlacementGroupInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyPlacementGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyPlacementGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyPlacementGroupInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyPlacementGroupInput) SetDescription(v string) *ModifyPlacementGroupInput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ModifyPlacementGroupInput) SetId(v string) *ModifyPlacementGroupInput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ModifyPlacementGroupInput) SetName(v string) *ModifyPlacementGroupInput {
	s.Name = &v
	return s
}

type ModifyPlacementGroupOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyPlacementGroupOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyPlacementGroupOutput) GoString() string {
	return s.String()
}
