// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeSnapshotGroupsCommon = "DescribeSnapshotGroups"

// DescribeSnapshotGroupsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeSnapshotGroupsCommon operation. The "output" return
// value will be populated with the DescribeSnapshotGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSnapshotGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSnapshotGroupsCommon Send returns without error.
//
// See DescribeSnapshotGroupsCommon for more information on using the DescribeSnapshotGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSnapshotGroupsCommonRequest method.
//    req, resp := client.DescribeSnapshotGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) DescribeSnapshotGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSnapshotGroupsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSnapshotGroupsCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation DescribeSnapshotGroupsCommon for usage and error information.
func (c *STORAGEEBS) DescribeSnapshotGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSnapshotGroupsCommonRequest(input)
	return out, req.Send()
}

// DescribeSnapshotGroupsCommonWithContext is the same as DescribeSnapshotGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSnapshotGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) DescribeSnapshotGroupsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSnapshotGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSnapshotGroups = "DescribeSnapshotGroups"

// DescribeSnapshotGroupsRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeSnapshotGroups operation. The "output" return
// value will be populated with the DescribeSnapshotGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSnapshotGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSnapshotGroupsCommon Send returns without error.
//
// See DescribeSnapshotGroups for more information on using the DescribeSnapshotGroups
// API call, and error handling.
//
//    // Example sending a request using the DescribeSnapshotGroupsRequest method.
//    req, resp := client.DescribeSnapshotGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) DescribeSnapshotGroupsRequest(input *DescribeSnapshotGroupsInput) (req *request.Request, output *DescribeSnapshotGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribeSnapshotGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSnapshotGroupsInput{}
	}

	output = &DescribeSnapshotGroupsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSnapshotGroups API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation DescribeSnapshotGroups for usage and error information.
func (c *STORAGEEBS) DescribeSnapshotGroups(input *DescribeSnapshotGroupsInput) (*DescribeSnapshotGroupsOutput, error) {
	req, out := c.DescribeSnapshotGroupsRequest(input)
	return out, req.Send()
}

// DescribeSnapshotGroupsWithContext is the same as DescribeSnapshotGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSnapshotGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) DescribeSnapshotGroupsWithContext(ctx byteplus.Context, input *DescribeSnapshotGroupsInput, opts ...request.Option) (*DescribeSnapshotGroupsOutput, error) {
	req, out := c.DescribeSnapshotGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSnapshotGroupsInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	Name *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `max:"100" type:"int32"`

	ProjectName *string `type:"string"`

	SnapshotGroupIds []*string `type:"list"`

	Status []*string `type:"list"`

	TagFilters []*TagFilterForDescribeSnapshotGroupsInput `type:"list"`
}

// String returns the string representation
func (s DescribeSnapshotGroupsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSnapshotGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeSnapshotGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeSnapshotGroupsInput"}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeSnapshotGroupsInput) SetInstanceId(v string) *DescribeSnapshotGroupsInput {
	s.InstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeSnapshotGroupsInput) SetName(v string) *DescribeSnapshotGroupsInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeSnapshotGroupsInput) SetPageNumber(v int32) *DescribeSnapshotGroupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSnapshotGroupsInput) SetPageSize(v int32) *DescribeSnapshotGroupsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeSnapshotGroupsInput) SetProjectName(v string) *DescribeSnapshotGroupsInput {
	s.ProjectName = &v
	return s
}

// SetSnapshotGroupIds sets the SnapshotGroupIds field's value.
func (s *DescribeSnapshotGroupsInput) SetSnapshotGroupIds(v []*string) *DescribeSnapshotGroupsInput {
	s.SnapshotGroupIds = v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeSnapshotGroupsInput) SetStatus(v []*string) *DescribeSnapshotGroupsInput {
	s.Status = v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeSnapshotGroupsInput) SetTagFilters(v []*TagFilterForDescribeSnapshotGroupsInput) *DescribeSnapshotGroupsInput {
	s.TagFilters = v
	return s
}

type DescribeSnapshotGroupsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	SnapshotGroups []*SnapshotGroupForDescribeSnapshotGroupsOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeSnapshotGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSnapshotGroupsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeSnapshotGroupsOutput) SetPageNumber(v int32) *DescribeSnapshotGroupsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSnapshotGroupsOutput) SetPageSize(v int32) *DescribeSnapshotGroupsOutput {
	s.PageSize = &v
	return s
}

// SetSnapshotGroups sets the SnapshotGroups field's value.
func (s *DescribeSnapshotGroupsOutput) SetSnapshotGroups(v []*SnapshotGroupForDescribeSnapshotGroupsOutput) *DescribeSnapshotGroupsOutput {
	s.SnapshotGroups = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeSnapshotGroupsOutput) SetTotalCount(v int32) *DescribeSnapshotGroupsOutput {
	s.TotalCount = &v
	return s
}

type SnapshotForDescribeSnapshotGroupsOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	ImageId *string `type:"string"`

	InstantAccess *bool `type:"boolean"`

	Progress *int32 `type:"int32"`

	ProjectName *string `type:"string"`

	RetentionDays *int32 `type:"int32"`

	Shared *bool `type:"boolean"`

	SnapshotGroupId *string `type:"string"`

	SnapshotId *string `type:"string"`

	SnapshotName *string `type:"string"`

	SnapshotType *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDescribeSnapshotGroupsOutput `type:"list"`

	VolumeId *string `type:"string"`

	VolumeKind *string `type:"string"`

	VolumeName *string `type:"string"`

	VolumeSize *int64 `type:"int64"`

	VolumeStatus *string `type:"string"`

	VolumeType *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s SnapshotForDescribeSnapshotGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s SnapshotForDescribeSnapshotGroupsOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetCreationTime(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetDescription(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.Description = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetImageId(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.ImageId = &v
	return s
}

// SetInstantAccess sets the InstantAccess field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetInstantAccess(v bool) *SnapshotForDescribeSnapshotGroupsOutput {
	s.InstantAccess = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetProgress(v int32) *SnapshotForDescribeSnapshotGroupsOutput {
	s.Progress = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetProjectName(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.ProjectName = &v
	return s
}

// SetRetentionDays sets the RetentionDays field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetRetentionDays(v int32) *SnapshotForDescribeSnapshotGroupsOutput {
	s.RetentionDays = &v
	return s
}

// SetShared sets the Shared field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetShared(v bool) *SnapshotForDescribeSnapshotGroupsOutput {
	s.Shared = &v
	return s
}

// SetSnapshotGroupId sets the SnapshotGroupId field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetSnapshotGroupId(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.SnapshotGroupId = &v
	return s
}

// SetSnapshotId sets the SnapshotId field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetSnapshotId(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.SnapshotId = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetSnapshotName(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.SnapshotName = &v
	return s
}

// SetSnapshotType sets the SnapshotType field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetSnapshotType(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.SnapshotType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetStatus(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetTags(v []*TagForDescribeSnapshotGroupsOutput) *SnapshotForDescribeSnapshotGroupsOutput {
	s.Tags = v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetVolumeId(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.VolumeId = &v
	return s
}

// SetVolumeKind sets the VolumeKind field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetVolumeKind(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.VolumeKind = &v
	return s
}

// SetVolumeName sets the VolumeName field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetVolumeName(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.VolumeName = &v
	return s
}

// SetVolumeSize sets the VolumeSize field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetVolumeSize(v int64) *SnapshotForDescribeSnapshotGroupsOutput {
	s.VolumeSize = &v
	return s
}

// SetVolumeStatus sets the VolumeStatus field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetVolumeStatus(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.VolumeStatus = &v
	return s
}

// SetVolumeType sets the VolumeType field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetVolumeType(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.VolumeType = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *SnapshotForDescribeSnapshotGroupsOutput) SetZoneId(v string) *SnapshotForDescribeSnapshotGroupsOutput {
	s.ZoneId = &v
	return s
}

type SnapshotGroupForDescribeSnapshotGroupsOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	ImageId *string `type:"string"`

	InstanceId *string `type:"string"`

	Name *string `type:"string"`

	ProjectName *string `type:"string"`

	SnapshotGroupId *string `type:"string"`

	Snapshots []*SnapshotForDescribeSnapshotGroupsOutput `type:"list"`

	Status *string `type:"string"`

	Tags []*TagForDescribeSnapshotGroupsOutput `type:"list"`
}

// String returns the string representation
func (s SnapshotGroupForDescribeSnapshotGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s SnapshotGroupForDescribeSnapshotGroupsOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetCreationTime(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetDescription(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.Description = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetImageId(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.ImageId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetInstanceId(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.InstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetName(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetProjectName(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.ProjectName = &v
	return s
}

// SetSnapshotGroupId sets the SnapshotGroupId field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetSnapshotGroupId(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.SnapshotGroupId = &v
	return s
}

// SetSnapshots sets the Snapshots field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetSnapshots(v []*SnapshotForDescribeSnapshotGroupsOutput) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.Snapshots = v
	return s
}

// SetStatus sets the Status field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetStatus(v string) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *SnapshotGroupForDescribeSnapshotGroupsOutput) SetTags(v []*TagForDescribeSnapshotGroupsOutput) *SnapshotGroupForDescribeSnapshotGroupsOutput {
	s.Tags = v
	return s
}

type TagFilterForDescribeSnapshotGroupsInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeSnapshotGroupsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeSnapshotGroupsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeSnapshotGroupsInput) SetKey(v string) *TagFilterForDescribeSnapshotGroupsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeSnapshotGroupsInput) SetValues(v []*string) *TagFilterForDescribeSnapshotGroupsInput {
	s.Values = v
	return s
}

type TagForDescribeSnapshotGroupsOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeSnapshotGroupsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeSnapshotGroupsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeSnapshotGroupsOutput) SetKey(v string) *TagForDescribeSnapshotGroupsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeSnapshotGroupsOutput) SetValue(v string) *TagForDescribeSnapshotGroupsOutput {
	s.Value = &v
	return s
}
