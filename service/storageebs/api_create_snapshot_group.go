// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateSnapshotGroupCommon = "CreateSnapshotGroup"

// CreateSnapshotGroupCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateSnapshotGroupCommon operation. The "output" return
// value will be populated with the CreateSnapshotGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateSnapshotGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateSnapshotGroupCommon Send returns without error.
//
// See CreateSnapshotGroupCommon for more information on using the CreateSnapshotGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateSnapshotGroupCommonRequest method.
//    req, resp := client.CreateSnapshotGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) CreateSnapshotGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateSnapshotGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateSnapshotGroupCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation CreateSnapshotGroupCommon for usage and error information.
func (c *STORAGEEBS) CreateSnapshotGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateSnapshotGroupCommonRequest(input)
	return out, req.Send()
}

// CreateSnapshotGroupCommonWithContext is the same as CreateSnapshotGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSnapshotGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) CreateSnapshotGroupCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateSnapshotGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateSnapshotGroup = "CreateSnapshotGroup"

// CreateSnapshotGroupRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateSnapshotGroup operation. The "output" return
// value will be populated with the CreateSnapshotGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateSnapshotGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateSnapshotGroupCommon Send returns without error.
//
// See CreateSnapshotGroup for more information on using the CreateSnapshotGroup
// API call, and error handling.
//
//    // Example sending a request using the CreateSnapshotGroupRequest method.
//    req, resp := client.CreateSnapshotGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) CreateSnapshotGroupRequest(input *CreateSnapshotGroupInput) (req *request.Request, output *CreateSnapshotGroupOutput) {
	op := &request.Operation{
		Name:       opCreateSnapshotGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateSnapshotGroupInput{}
	}

	output = &CreateSnapshotGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateSnapshotGroup API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation CreateSnapshotGroup for usage and error information.
func (c *STORAGEEBS) CreateSnapshotGroup(input *CreateSnapshotGroupInput) (*CreateSnapshotGroupOutput, error) {
	req, out := c.CreateSnapshotGroupRequest(input)
	return out, req.Send()
}

// CreateSnapshotGroupWithContext is the same as CreateSnapshotGroup with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSnapshotGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) CreateSnapshotGroupWithContext(ctx byteplus.Context, input *CreateSnapshotGroupInput, opts ...request.Option) (*CreateSnapshotGroupOutput, error) {
	req, out := c.CreateSnapshotGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateSnapshotGroupInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	InstanceId *string `type:"string"`

	Name *string `type:"string"`

	ProjectName *string `type:"string"`

	Tags []*TagForCreateSnapshotGroupInput `type:"list"`

	// VolumeIds is a required field
	VolumeIds []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s CreateSnapshotGroupInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSnapshotGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateSnapshotGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateSnapshotGroupInput"}
	if s.VolumeIds == nil {
		invalidParams.Add(request.NewErrParamRequired("VolumeIds"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateSnapshotGroupInput) SetClientToken(v string) *CreateSnapshotGroupInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateSnapshotGroupInput) SetDescription(v string) *CreateSnapshotGroupInput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateSnapshotGroupInput) SetInstanceId(v string) *CreateSnapshotGroupInput {
	s.InstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateSnapshotGroupInput) SetName(v string) *CreateSnapshotGroupInput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateSnapshotGroupInput) SetProjectName(v string) *CreateSnapshotGroupInput {
	s.ProjectName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateSnapshotGroupInput) SetTags(v []*TagForCreateSnapshotGroupInput) *CreateSnapshotGroupInput {
	s.Tags = v
	return s
}

// SetVolumeIds sets the VolumeIds field's value.
func (s *CreateSnapshotGroupInput) SetVolumeIds(v []*string) *CreateSnapshotGroupInput {
	s.VolumeIds = v
	return s
}

type CreateSnapshotGroupOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	SnapshotGroupId *string `type:"string"`
}

// String returns the string representation
func (s CreateSnapshotGroupOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSnapshotGroupOutput) GoString() string {
	return s.String()
}

// SetSnapshotGroupId sets the SnapshotGroupId field's value.
func (s *CreateSnapshotGroupOutput) SetSnapshotGroupId(v string) *CreateSnapshotGroupOutput {
	s.SnapshotGroupId = &v
	return s
}

type TagForCreateSnapshotGroupInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForCreateSnapshotGroupInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateSnapshotGroupInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateSnapshotGroupInput) SetKey(v string) *TagForCreateSnapshotGroupInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateSnapshotGroupInput) SetValue(v string) *TagForCreateSnapshotGroupInput {
	s.Value = &v
	return s
}
