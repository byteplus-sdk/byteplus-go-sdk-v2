// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeVolumeTypeCommon = "DescribeVolumeType"

// DescribeVolumeTypeCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeVolumeTypeCommon operation. The "output" return
// value will be populated with the DescribeVolumeTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVolumeTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVolumeTypeCommon Send returns without error.
//
// See DescribeVolumeTypeCommon for more information on using the DescribeVolumeTypeCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVolumeTypeCommonRequest method.
//    req, resp := client.DescribeVolumeTypeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) DescribeVolumeTypeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVolumeTypeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVolumeTypeCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation DescribeVolumeTypeCommon for usage and error information.
func (c *STORAGEEBS) DescribeVolumeTypeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVolumeTypeCommonRequest(input)
	return out, req.Send()
}

// DescribeVolumeTypeCommonWithContext is the same as DescribeVolumeTypeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVolumeTypeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) DescribeVolumeTypeCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVolumeTypeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVolumeType = "DescribeVolumeType"

// DescribeVolumeTypeRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeVolumeType operation. The "output" return
// value will be populated with the DescribeVolumeTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVolumeTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVolumeTypeCommon Send returns without error.
//
// See DescribeVolumeType for more information on using the DescribeVolumeType
// API call, and error handling.
//
//    // Example sending a request using the DescribeVolumeTypeRequest method.
//    req, resp := client.DescribeVolumeTypeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) DescribeVolumeTypeRequest(input *DescribeVolumeTypeInput) (req *request.Request, output *DescribeVolumeTypeOutput) {
	op := &request.Operation{
		Name:       opDescribeVolumeType,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVolumeTypeInput{}
	}

	output = &DescribeVolumeTypeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVolumeType API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation DescribeVolumeType for usage and error information.
func (c *STORAGEEBS) DescribeVolumeType(input *DescribeVolumeTypeInput) (*DescribeVolumeTypeOutput, error) {
	req, out := c.DescribeVolumeTypeRequest(input)
	return out, req.Send()
}

// DescribeVolumeTypeWithContext is the same as DescribeVolumeType with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVolumeType for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) DescribeVolumeTypeWithContext(ctx byteplus.Context, input *DescribeVolumeTypeInput, opts ...request.Option) (*DescribeVolumeTypeOutput, error) {
	req, out := c.DescribeVolumeTypeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeVolumeTypeInput struct {
	_ struct{} `type:"structure"`

	Filter *string `type:"string"`

	OrderBy *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ResourceClass *string `type:"string"`

	VolumeTypeIds []*string `type:"list"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeVolumeTypeInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVolumeTypeInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *DescribeVolumeTypeInput) SetFilter(v string) *DescribeVolumeTypeInput {
	s.Filter = &v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *DescribeVolumeTypeInput) SetOrderBy(v string) *DescribeVolumeTypeInput {
	s.OrderBy = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVolumeTypeInput) SetPageNumber(v int32) *DescribeVolumeTypeInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVolumeTypeInput) SetPageSize(v int32) *DescribeVolumeTypeInput {
	s.PageSize = &v
	return s
}

// SetResourceClass sets the ResourceClass field's value.
func (s *DescribeVolumeTypeInput) SetResourceClass(v string) *DescribeVolumeTypeInput {
	s.ResourceClass = &v
	return s
}

// SetVolumeTypeIds sets the VolumeTypeIds field's value.
func (s *DescribeVolumeTypeInput) SetVolumeTypeIds(v []*string) *DescribeVolumeTypeInput {
	s.VolumeTypeIds = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeVolumeTypeInput) SetZoneId(v string) *DescribeVolumeTypeInput {
	s.ZoneId = &v
	return s
}

type DescribeVolumeTypeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	VolumeTypes []*VolumeTypeForDescribeVolumeTypeOutput `type:"list"`
}

// String returns the string representation
func (s DescribeVolumeTypeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVolumeTypeOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVolumeTypeOutput) SetPageNumber(v int32) *DescribeVolumeTypeOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVolumeTypeOutput) SetPageSize(v int32) *DescribeVolumeTypeOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeVolumeTypeOutput) SetTotalCount(v int32) *DescribeVolumeTypeOutput {
	s.TotalCount = &v
	return s
}

// SetVolumeTypes sets the VolumeTypes field's value.
func (s *DescribeVolumeTypeOutput) SetVolumeTypes(v []*VolumeTypeForDescribeVolumeTypeOutput) *DescribeVolumeTypeOutput {
	s.VolumeTypes = v
	return s
}

type ExtraPerformanceTypeForDescribeVolumeTypeOutput struct {
	_ struct{} `type:"structure"`

	BaseQosType *string `type:"string"`

	ConversionRatio *string `type:"string"`

	Id *string `type:"string"`

	MaxIops *string `type:"string"`

	MaxThroughput *string `type:"string"`
}

// String returns the string representation
func (s ExtraPerformanceTypeForDescribeVolumeTypeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ExtraPerformanceTypeForDescribeVolumeTypeOutput) GoString() string {
	return s.String()
}

// SetBaseQosType sets the BaseQosType field's value.
func (s *ExtraPerformanceTypeForDescribeVolumeTypeOutput) SetBaseQosType(v string) *ExtraPerformanceTypeForDescribeVolumeTypeOutput {
	s.BaseQosType = &v
	return s
}

// SetConversionRatio sets the ConversionRatio field's value.
func (s *ExtraPerformanceTypeForDescribeVolumeTypeOutput) SetConversionRatio(v string) *ExtraPerformanceTypeForDescribeVolumeTypeOutput {
	s.ConversionRatio = &v
	return s
}

// SetId sets the Id field's value.
func (s *ExtraPerformanceTypeForDescribeVolumeTypeOutput) SetId(v string) *ExtraPerformanceTypeForDescribeVolumeTypeOutput {
	s.Id = &v
	return s
}

// SetMaxIops sets the MaxIops field's value.
func (s *ExtraPerformanceTypeForDescribeVolumeTypeOutput) SetMaxIops(v string) *ExtraPerformanceTypeForDescribeVolumeTypeOutput {
	s.MaxIops = &v
	return s
}

// SetMaxThroughput sets the MaxThroughput field's value.
func (s *ExtraPerformanceTypeForDescribeVolumeTypeOutput) SetMaxThroughput(v string) *ExtraPerformanceTypeForDescribeVolumeTypeOutput {
	s.MaxThroughput = &v
	return s
}

type VolumeTypeForDescribeVolumeTypeOutput struct {
	_ struct{} `type:"structure"`

	CreatedAt *string `type:"string"`

	ExtraPerformanceTypes []*ExtraPerformanceTypeForDescribeVolumeTypeOutput `type:"list"`

	Id *string `type:"string"`

	Zones []*string `type:"list"`
}

// String returns the string representation
func (s VolumeTypeForDescribeVolumeTypeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumeTypeForDescribeVolumeTypeOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *VolumeTypeForDescribeVolumeTypeOutput) SetCreatedAt(v string) *VolumeTypeForDescribeVolumeTypeOutput {
	s.CreatedAt = &v
	return s
}

// SetExtraPerformanceTypes sets the ExtraPerformanceTypes field's value.
func (s *VolumeTypeForDescribeVolumeTypeOutput) SetExtraPerformanceTypes(v []*ExtraPerformanceTypeForDescribeVolumeTypeOutput) *VolumeTypeForDescribeVolumeTypeOutput {
	s.ExtraPerformanceTypes = v
	return s
}

// SetId sets the Id field's value.
func (s *VolumeTypeForDescribeVolumeTypeOutput) SetId(v string) *VolumeTypeForDescribeVolumeTypeOutput {
	s.Id = &v
	return s
}

// SetZones sets the Zones field's value.
func (s *VolumeTypeForDescribeVolumeTypeOutput) SetZones(v []*string) *VolumeTypeForDescribeVolumeTypeOutput {
	s.Zones = v
	return s
}
