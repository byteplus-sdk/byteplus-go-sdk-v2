// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyVolumeExtraPerformanceCommon = "ModifyVolumeExtraPerformance"

// ModifyVolumeExtraPerformanceCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyVolumeExtraPerformanceCommon operation. The "output" return
// value will be populated with the ModifyVolumeExtraPerformanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVolumeExtraPerformanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVolumeExtraPerformanceCommon Send returns without error.
//
// See ModifyVolumeExtraPerformanceCommon for more information on using the ModifyVolumeExtraPerformanceCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyVolumeExtraPerformanceCommonRequest method.
//    req, resp := client.ModifyVolumeExtraPerformanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) ModifyVolumeExtraPerformanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyVolumeExtraPerformanceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVolumeExtraPerformanceCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation ModifyVolumeExtraPerformanceCommon for usage and error information.
func (c *STORAGEEBS) ModifyVolumeExtraPerformanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyVolumeExtraPerformanceCommonRequest(input)
	return out, req.Send()
}

// ModifyVolumeExtraPerformanceCommonWithContext is the same as ModifyVolumeExtraPerformanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVolumeExtraPerformanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) ModifyVolumeExtraPerformanceCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyVolumeExtraPerformanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVolumeExtraPerformance = "ModifyVolumeExtraPerformance"

// ModifyVolumeExtraPerformanceRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyVolumeExtraPerformance operation. The "output" return
// value will be populated with the ModifyVolumeExtraPerformanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVolumeExtraPerformanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVolumeExtraPerformanceCommon Send returns without error.
//
// See ModifyVolumeExtraPerformance for more information on using the ModifyVolumeExtraPerformance
// API call, and error handling.
//
//    // Example sending a request using the ModifyVolumeExtraPerformanceRequest method.
//    req, resp := client.ModifyVolumeExtraPerformanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) ModifyVolumeExtraPerformanceRequest(input *ModifyVolumeExtraPerformanceInput) (req *request.Request, output *ModifyVolumeExtraPerformanceOutput) {
	op := &request.Operation{
		Name:       opModifyVolumeExtraPerformance,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyVolumeExtraPerformanceInput{}
	}

	output = &ModifyVolumeExtraPerformanceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVolumeExtraPerformance API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation ModifyVolumeExtraPerformance for usage and error information.
func (c *STORAGEEBS) ModifyVolumeExtraPerformance(input *ModifyVolumeExtraPerformanceInput) (*ModifyVolumeExtraPerformanceOutput, error) {
	req, out := c.ModifyVolumeExtraPerformanceRequest(input)
	return out, req.Send()
}

// ModifyVolumeExtraPerformanceWithContext is the same as ModifyVolumeExtraPerformance with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVolumeExtraPerformance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) ModifyVolumeExtraPerformanceWithContext(ctx byteplus.Context, input *ModifyVolumeExtraPerformanceInput, opts ...request.Option) (*ModifyVolumeExtraPerformanceOutput, error) {
	req, out := c.ModifyVolumeExtraPerformanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyVolumeExtraPerformanceInput struct {
	_ struct{} `type:"structure"`

	ExtraPerformanceIOPS *int32 `type:"int32"`

	ExtraPerformanceThroughputMB *int32 `type:"int32"`

	// ExtraPerformanceTypeId is a required field
	ExtraPerformanceTypeId *string `type:"string" required:"true" enum:"EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInput"`

	// VolumeId is a required field
	VolumeId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyVolumeExtraPerformanceInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVolumeExtraPerformanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyVolumeExtraPerformanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyVolumeExtraPerformanceInput"}
	if s.ExtraPerformanceTypeId == nil {
		invalidParams.Add(request.NewErrParamRequired("ExtraPerformanceTypeId"))
	}
	if s.VolumeId == nil {
		invalidParams.Add(request.NewErrParamRequired("VolumeId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetExtraPerformanceIOPS sets the ExtraPerformanceIOPS field's value.
func (s *ModifyVolumeExtraPerformanceInput) SetExtraPerformanceIOPS(v int32) *ModifyVolumeExtraPerformanceInput {
	s.ExtraPerformanceIOPS = &v
	return s
}

// SetExtraPerformanceThroughputMB sets the ExtraPerformanceThroughputMB field's value.
func (s *ModifyVolumeExtraPerformanceInput) SetExtraPerformanceThroughputMB(v int32) *ModifyVolumeExtraPerformanceInput {
	s.ExtraPerformanceThroughputMB = &v
	return s
}

// SetExtraPerformanceTypeId sets the ExtraPerformanceTypeId field's value.
func (s *ModifyVolumeExtraPerformanceInput) SetExtraPerformanceTypeId(v string) *ModifyVolumeExtraPerformanceInput {
	s.ExtraPerformanceTypeId = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *ModifyVolumeExtraPerformanceInput) SetVolumeId(v string) *ModifyVolumeExtraPerformanceInput {
	s.VolumeId = &v
	return s
}

type ModifyVolumeExtraPerformanceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrderNumber *string `type:"string"`
}

// String returns the string representation
func (s ModifyVolumeExtraPerformanceOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVolumeExtraPerformanceOutput) GoString() string {
	return s.String()
}

// SetOrderNumber sets the OrderNumber field's value.
func (s *ModifyVolumeExtraPerformanceOutput) SetOrderNumber(v string) *ModifyVolumeExtraPerformanceOutput {
	s.OrderNumber = &v
	return s
}

const (
	// EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInputIops is a EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInput enum value
	EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInputIops = "IOPS"

	// EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInputBalance is a EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInput enum value
	EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInputBalance = "Balance"

	// EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInputThroughput is a EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInput enum value
	EnumOfExtraPerformanceTypeIdForModifyVolumeExtraPerformanceInputThroughput = "Throughput"
)
