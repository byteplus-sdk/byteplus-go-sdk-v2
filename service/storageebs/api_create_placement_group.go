// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package storageebs

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreatePlacementGroupCommon = "CreatePlacementGroup"

// CreatePlacementGroupCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreatePlacementGroupCommon operation. The "output" return
// value will be populated with the CreatePlacementGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePlacementGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePlacementGroupCommon Send returns without error.
//
// See CreatePlacementGroupCommon for more information on using the CreatePlacementGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the CreatePlacementGroupCommonRequest method.
//    req, resp := client.CreatePlacementGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) CreatePlacementGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreatePlacementGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreatePlacementGroupCommon API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation CreatePlacementGroupCommon for usage and error information.
func (c *STORAGEEBS) CreatePlacementGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreatePlacementGroupCommonRequest(input)
	return out, req.Send()
}

// CreatePlacementGroupCommonWithContext is the same as CreatePlacementGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePlacementGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) CreatePlacementGroupCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreatePlacementGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreatePlacementGroup = "CreatePlacementGroup"

// CreatePlacementGroupRequest generates a "byteplus/request.Request" representing the
// client's request for the CreatePlacementGroup operation. The "output" return
// value will be populated with the CreatePlacementGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePlacementGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePlacementGroupCommon Send returns without error.
//
// See CreatePlacementGroup for more information on using the CreatePlacementGroup
// API call, and error handling.
//
//    // Example sending a request using the CreatePlacementGroupRequest method.
//    req, resp := client.CreatePlacementGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *STORAGEEBS) CreatePlacementGroupRequest(input *CreatePlacementGroupInput) (req *request.Request, output *CreatePlacementGroupOutput) {
	op := &request.Operation{
		Name:       opCreatePlacementGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreatePlacementGroupInput{}
	}

	output = &CreatePlacementGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreatePlacementGroup API operation for STORAGE_EBS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for STORAGE_EBS's
// API operation CreatePlacementGroup for usage and error information.
func (c *STORAGEEBS) CreatePlacementGroup(input *CreatePlacementGroupInput) (*CreatePlacementGroupOutput, error) {
	req, out := c.CreatePlacementGroupRequest(input)
	return out, req.Send()
}

// CreatePlacementGroupWithContext is the same as CreatePlacementGroup with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePlacementGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *STORAGEEBS) CreatePlacementGroupWithContext(ctx byteplus.Context, input *CreatePlacementGroupInput, opts ...request.Option) (*CreatePlacementGroupOutput, error) {
	req, out := c.CreatePlacementGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatePlacementGroupInput struct {
	_ struct{} `type:"structure"`

	AutoAssign *bool `type:"boolean"`

	Description *string `type:"string"`

	// Name is a required field
	Name *string `type:"string" required:"true"`

	// SubgroupCount is a required field
	SubgroupCount *int32 `type:"int32" required:"true"`

	// ZoneId is a required field
	ZoneId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreatePlacementGroupInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePlacementGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreatePlacementGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreatePlacementGroupInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.SubgroupCount == nil {
		invalidParams.Add(request.NewErrParamRequired("SubgroupCount"))
	}
	if s.ZoneId == nil {
		invalidParams.Add(request.NewErrParamRequired("ZoneId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoAssign sets the AutoAssign field's value.
func (s *CreatePlacementGroupInput) SetAutoAssign(v bool) *CreatePlacementGroupInput {
	s.AutoAssign = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreatePlacementGroupInput) SetDescription(v string) *CreatePlacementGroupInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreatePlacementGroupInput) SetName(v string) *CreatePlacementGroupInput {
	s.Name = &v
	return s
}

// SetSubgroupCount sets the SubgroupCount field's value.
func (s *CreatePlacementGroupInput) SetSubgroupCount(v int32) *CreatePlacementGroupInput {
	s.SubgroupCount = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *CreatePlacementGroupInput) SetZoneId(v string) *CreatePlacementGroupInput {
	s.ZoneId = &v
	return s
}

type CreatePlacementGroupOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string"`
}

// String returns the string representation
func (s CreatePlacementGroupOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePlacementGroupOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreatePlacementGroupOutput) SetId(v string) *CreatePlacementGroupOutput {
	s.Id = &v
	return s
}
