// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecopartner

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opGetCustomerDetailsByTypeCommon = "GetCustomerDetailsByType"

// GetCustomerDetailsByTypeCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the GetCustomerDetailsByTypeCommon operation. The "output" return
// value will be populated with the GetCustomerDetailsByTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCustomerDetailsByTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCustomerDetailsByTypeCommon Send returns without error.
//
// See GetCustomerDetailsByTypeCommon for more information on using the GetCustomerDetailsByTypeCommon
// API call, and error handling.
//
//    // Example sending a request using the GetCustomerDetailsByTypeCommonRequest method.
//    req, resp := client.GetCustomerDetailsByTypeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECOPARTNER) GetCustomerDetailsByTypeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetCustomerDetailsByTypeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetCustomerDetailsByTypeCommon API operation for ECO_PARTNER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ECO_PARTNER's
// API operation GetCustomerDetailsByTypeCommon for usage and error information.
func (c *ECOPARTNER) GetCustomerDetailsByTypeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetCustomerDetailsByTypeCommonRequest(input)
	return out, req.Send()
}

// GetCustomerDetailsByTypeCommonWithContext is the same as GetCustomerDetailsByTypeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetCustomerDetailsByTypeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECOPARTNER) GetCustomerDetailsByTypeCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetCustomerDetailsByTypeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetCustomerDetailsByType = "GetCustomerDetailsByType"

// GetCustomerDetailsByTypeRequest generates a "byteplus/request.Request" representing the
// client's request for the GetCustomerDetailsByType operation. The "output" return
// value will be populated with the GetCustomerDetailsByTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCustomerDetailsByTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCustomerDetailsByTypeCommon Send returns without error.
//
// See GetCustomerDetailsByType for more information on using the GetCustomerDetailsByType
// API call, and error handling.
//
//    // Example sending a request using the GetCustomerDetailsByTypeRequest method.
//    req, resp := client.GetCustomerDetailsByTypeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECOPARTNER) GetCustomerDetailsByTypeRequest(input *GetCustomerDetailsByTypeInput) (req *request.Request, output *GetCustomerDetailsByTypeOutput) {
	op := &request.Operation{
		Name:       opGetCustomerDetailsByType,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetCustomerDetailsByTypeInput{}
	}

	output = &GetCustomerDetailsByTypeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetCustomerDetailsByType API operation for ECO_PARTNER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ECO_PARTNER's
// API operation GetCustomerDetailsByType for usage and error information.
func (c *ECOPARTNER) GetCustomerDetailsByType(input *GetCustomerDetailsByTypeInput) (*GetCustomerDetailsByTypeOutput, error) {
	req, out := c.GetCustomerDetailsByTypeRequest(input)
	return out, req.Send()
}

// GetCustomerDetailsByTypeWithContext is the same as GetCustomerDetailsByType with the addition of
// the ability to pass a context and additional request options.
//
// See GetCustomerDetailsByType for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECOPARTNER) GetCustomerDetailsByTypeWithContext(ctx byteplus.Context, input *GetCustomerDetailsByTypeInput, opts ...request.Option) (*GetCustomerDetailsByTypeOutput, error) {
	req, out := c.GetCustomerDetailsByTypeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CustomerForGetCustomerDetailsByTypeOutput struct {
	_ struct{} `type:"structure"`

	AccountType *string `type:"string"`

	AccountUsername *string `type:"string"`

	AssociationSuccessTime *string `type:"string"`

	CustomerAccountVerified *bool `type:"boolean"`

	CustomerBd *string `type:"string"`

	Email *string `type:"string"`

	Mobile *string `type:"string"`

	OutstandingAmount *float64 `type:"float"`

	ParentOrganizationName *string `type:"string"`

	ParentPartnerUid *int32 `type:"int32"`

	ParentPartnerUsername *string `type:"string"`

	QuotaAllocated *float64 `type:"float"`

	QuotaBalance *float64 `type:"float"`

	QuotaUnit *string `type:"string"`

	RegisterCountryCode *string `type:"string"`

	Remark *string `type:"string"`

	SuspensionPolicy *string `type:"string"`

	Uid *int32 `type:"int32"`
}

// String returns the string representation
func (s CustomerForGetCustomerDetailsByTypeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomerForGetCustomerDetailsByTypeOutput) GoString() string {
	return s.String()
}

// SetAccountType sets the AccountType field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetAccountType(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.AccountType = &v
	return s
}

// SetAccountUsername sets the AccountUsername field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetAccountUsername(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.AccountUsername = &v
	return s
}

// SetAssociationSuccessTime sets the AssociationSuccessTime field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetAssociationSuccessTime(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.AssociationSuccessTime = &v
	return s
}

// SetCustomerAccountVerified sets the CustomerAccountVerified field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetCustomerAccountVerified(v bool) *CustomerForGetCustomerDetailsByTypeOutput {
	s.CustomerAccountVerified = &v
	return s
}

// SetCustomerBd sets the CustomerBd field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetCustomerBd(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.CustomerBd = &v
	return s
}

// SetEmail sets the Email field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetEmail(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.Email = &v
	return s
}

// SetMobile sets the Mobile field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetMobile(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.Mobile = &v
	return s
}

// SetOutstandingAmount sets the OutstandingAmount field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetOutstandingAmount(v float64) *CustomerForGetCustomerDetailsByTypeOutput {
	s.OutstandingAmount = &v
	return s
}

// SetParentOrganizationName sets the ParentOrganizationName field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetParentOrganizationName(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.ParentOrganizationName = &v
	return s
}

// SetParentPartnerUid sets the ParentPartnerUid field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetParentPartnerUid(v int32) *CustomerForGetCustomerDetailsByTypeOutput {
	s.ParentPartnerUid = &v
	return s
}

// SetParentPartnerUsername sets the ParentPartnerUsername field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetParentPartnerUsername(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.ParentPartnerUsername = &v
	return s
}

// SetQuotaAllocated sets the QuotaAllocated field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetQuotaAllocated(v float64) *CustomerForGetCustomerDetailsByTypeOutput {
	s.QuotaAllocated = &v
	return s
}

// SetQuotaBalance sets the QuotaBalance field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetQuotaBalance(v float64) *CustomerForGetCustomerDetailsByTypeOutput {
	s.QuotaBalance = &v
	return s
}

// SetQuotaUnit sets the QuotaUnit field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetQuotaUnit(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.QuotaUnit = &v
	return s
}

// SetRegisterCountryCode sets the RegisterCountryCode field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetRegisterCountryCode(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.RegisterCountryCode = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetRemark(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.Remark = &v
	return s
}

// SetSuspensionPolicy sets the SuspensionPolicy field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetSuspensionPolicy(v string) *CustomerForGetCustomerDetailsByTypeOutput {
	s.SuspensionPolicy = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *CustomerForGetCustomerDetailsByTypeOutput) SetUid(v int32) *CustomerForGetCustomerDetailsByTypeOutput {
	s.Uid = &v
	return s
}

type GetCustomerDetailsByTypeInput struct {
	_ struct{} `type:"structure"`

	CustomerType *string `type:"string" enum:"EnumOfCustomerTypeForGetCustomerDetailsByTypeInput"`
}

// String returns the string representation
func (s GetCustomerDetailsByTypeInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCustomerDetailsByTypeInput) GoString() string {
	return s.String()
}

// SetCustomerType sets the CustomerType field's value.
func (s *GetCustomerDetailsByTypeInput) SetCustomerType(v string) *GetCustomerDetailsByTypeInput {
	s.CustomerType = &v
	return s
}

type GetCustomerDetailsByTypeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Customers []*CustomerForGetCustomerDetailsByTypeOutput `type:"list"`
}

// String returns the string representation
func (s GetCustomerDetailsByTypeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCustomerDetailsByTypeOutput) GoString() string {
	return s.String()
}

// SetCustomers sets the Customers field's value.
func (s *GetCustomerDetailsByTypeOutput) SetCustomers(v []*CustomerForGetCustomerDetailsByTypeOutput) *GetCustomerDetailsByTypeOutput {
	s.Customers = v
	return s
}

const (
	// EnumOfCustomerTypeForGetCustomerDetailsByTypeInputEndCustomer is a EnumOfCustomerTypeForGetCustomerDetailsByTypeInput enum value
	EnumOfCustomerTypeForGetCustomerDetailsByTypeInputEndCustomer = "EndCustomer"

	// EnumOfCustomerTypeForGetCustomerDetailsByTypeInputDistributorReseller is a EnumOfCustomerTypeForGetCustomerDetailsByTypeInput enum value
	EnumOfCustomerTypeForGetCustomerDetailsByTypeInputDistributorReseller = "Distributor-Reseller"
)
