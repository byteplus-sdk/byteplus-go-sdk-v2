// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecopartner

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opGetCustomerDetailsByUIDCommon = "GetCustomerDetailsByUID"

// GetCustomerDetailsByUIDCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the GetCustomerDetailsByUIDCommon operation. The "output" return
// value will be populated with the GetCustomerDetailsByUIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCustomerDetailsByUIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCustomerDetailsByUIDCommon Send returns without error.
//
// See GetCustomerDetailsByUIDCommon for more information on using the GetCustomerDetailsByUIDCommon
// API call, and error handling.
//
//    // Example sending a request using the GetCustomerDetailsByUIDCommonRequest method.
//    req, resp := client.GetCustomerDetailsByUIDCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECOPARTNER) GetCustomerDetailsByUIDCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetCustomerDetailsByUIDCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetCustomerDetailsByUIDCommon API operation for ECO_PARTNER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ECO_PARTNER's
// API operation GetCustomerDetailsByUIDCommon for usage and error information.
func (c *ECOPARTNER) GetCustomerDetailsByUIDCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetCustomerDetailsByUIDCommonRequest(input)
	return out, req.Send()
}

// GetCustomerDetailsByUIDCommonWithContext is the same as GetCustomerDetailsByUIDCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetCustomerDetailsByUIDCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECOPARTNER) GetCustomerDetailsByUIDCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetCustomerDetailsByUIDCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetCustomerDetailsByUID = "GetCustomerDetailsByUID"

// GetCustomerDetailsByUIDRequest generates a "byteplus/request.Request" representing the
// client's request for the GetCustomerDetailsByUID operation. The "output" return
// value will be populated with the GetCustomerDetailsByUIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCustomerDetailsByUIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCustomerDetailsByUIDCommon Send returns without error.
//
// See GetCustomerDetailsByUID for more information on using the GetCustomerDetailsByUID
// API call, and error handling.
//
//    // Example sending a request using the GetCustomerDetailsByUIDRequest method.
//    req, resp := client.GetCustomerDetailsByUIDRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECOPARTNER) GetCustomerDetailsByUIDRequest(input *GetCustomerDetailsByUIDInput) (req *request.Request, output *GetCustomerDetailsByUIDOutput) {
	op := &request.Operation{
		Name:       opGetCustomerDetailsByUID,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetCustomerDetailsByUIDInput{}
	}

	output = &GetCustomerDetailsByUIDOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetCustomerDetailsByUID API operation for ECO_PARTNER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ECO_PARTNER's
// API operation GetCustomerDetailsByUID for usage and error information.
func (c *ECOPARTNER) GetCustomerDetailsByUID(input *GetCustomerDetailsByUIDInput) (*GetCustomerDetailsByUIDOutput, error) {
	req, out := c.GetCustomerDetailsByUIDRequest(input)
	return out, req.Send()
}

// GetCustomerDetailsByUIDWithContext is the same as GetCustomerDetailsByUID with the addition of
// the ability to pass a context and additional request options.
//
// See GetCustomerDetailsByUID for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECOPARTNER) GetCustomerDetailsByUIDWithContext(ctx byteplus.Context, input *GetCustomerDetailsByUIDInput, opts ...request.Option) (*GetCustomerDetailsByUIDOutput, error) {
	req, out := c.GetCustomerDetailsByUIDRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetCustomerDetailsByUIDInput struct {
	_ struct{} `type:"structure"`

	// Uid is a required field
	Uid *int32 `min:"10" max:"10" type:"int32" required:"true"`
}

// String returns the string representation
func (s GetCustomerDetailsByUIDInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCustomerDetailsByUIDInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetCustomerDetailsByUIDInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetCustomerDetailsByUIDInput"}
	if s.Uid == nil {
		invalidParams.Add(request.NewErrParamRequired("Uid"))
	}
	if s.Uid != nil && *s.Uid < 10 {
		invalidParams.Add(request.NewErrParamMinValue("Uid", 10))
	}
	if s.Uid != nil && *s.Uid > 10 {
		invalidParams.Add(request.NewErrParamMaxValue("Uid", 10))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetUid sets the Uid field's value.
func (s *GetCustomerDetailsByUIDInput) SetUid(v int32) *GetCustomerDetailsByUIDInput {
	s.Uid = &v
	return s
}

type GetCustomerDetailsByUIDOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountType *string `type:"string"`

	AccountUsername *string `type:"string"`

	AssociationSuccessTime *string `type:"string"`

	CustomerAccountVerified *bool `type:"boolean"`

	CustomerBd *string `type:"string"`

	Email *string `type:"string"`

	Mobile *string `type:"string"`

	OutstandingAmount *float64 `type:"float"`

	ParentOrganizationName *string `type:"string"`

	ParentPartnerUid *int32 `type:"int32"`

	ParentPartnerUsername *string `type:"string"`

	QuotaAllocated *float64 `type:"float"`

	QuotaBalance *float64 `type:"float"`

	QuotaUnit *string `type:"string"`

	RegisterCountryCode *string `type:"string"`

	Remark *string `type:"string"`

	SuspensionPolicy *string `type:"string"`

	Uid *int32 `type:"int32"`
}

// String returns the string representation
func (s GetCustomerDetailsByUIDOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCustomerDetailsByUIDOutput) GoString() string {
	return s.String()
}

// SetAccountType sets the AccountType field's value.
func (s *GetCustomerDetailsByUIDOutput) SetAccountType(v string) *GetCustomerDetailsByUIDOutput {
	s.AccountType = &v
	return s
}

// SetAccountUsername sets the AccountUsername field's value.
func (s *GetCustomerDetailsByUIDOutput) SetAccountUsername(v string) *GetCustomerDetailsByUIDOutput {
	s.AccountUsername = &v
	return s
}

// SetAssociationSuccessTime sets the AssociationSuccessTime field's value.
func (s *GetCustomerDetailsByUIDOutput) SetAssociationSuccessTime(v string) *GetCustomerDetailsByUIDOutput {
	s.AssociationSuccessTime = &v
	return s
}

// SetCustomerAccountVerified sets the CustomerAccountVerified field's value.
func (s *GetCustomerDetailsByUIDOutput) SetCustomerAccountVerified(v bool) *GetCustomerDetailsByUIDOutput {
	s.CustomerAccountVerified = &v
	return s
}

// SetCustomerBd sets the CustomerBd field's value.
func (s *GetCustomerDetailsByUIDOutput) SetCustomerBd(v string) *GetCustomerDetailsByUIDOutput {
	s.CustomerBd = &v
	return s
}

// SetEmail sets the Email field's value.
func (s *GetCustomerDetailsByUIDOutput) SetEmail(v string) *GetCustomerDetailsByUIDOutput {
	s.Email = &v
	return s
}

// SetMobile sets the Mobile field's value.
func (s *GetCustomerDetailsByUIDOutput) SetMobile(v string) *GetCustomerDetailsByUIDOutput {
	s.Mobile = &v
	return s
}

// SetOutstandingAmount sets the OutstandingAmount field's value.
func (s *GetCustomerDetailsByUIDOutput) SetOutstandingAmount(v float64) *GetCustomerDetailsByUIDOutput {
	s.OutstandingAmount = &v
	return s
}

// SetParentOrganizationName sets the ParentOrganizationName field's value.
func (s *GetCustomerDetailsByUIDOutput) SetParentOrganizationName(v string) *GetCustomerDetailsByUIDOutput {
	s.ParentOrganizationName = &v
	return s
}

// SetParentPartnerUid sets the ParentPartnerUid field's value.
func (s *GetCustomerDetailsByUIDOutput) SetParentPartnerUid(v int32) *GetCustomerDetailsByUIDOutput {
	s.ParentPartnerUid = &v
	return s
}

// SetParentPartnerUsername sets the ParentPartnerUsername field's value.
func (s *GetCustomerDetailsByUIDOutput) SetParentPartnerUsername(v string) *GetCustomerDetailsByUIDOutput {
	s.ParentPartnerUsername = &v
	return s
}

// SetQuotaAllocated sets the QuotaAllocated field's value.
func (s *GetCustomerDetailsByUIDOutput) SetQuotaAllocated(v float64) *GetCustomerDetailsByUIDOutput {
	s.QuotaAllocated = &v
	return s
}

// SetQuotaBalance sets the QuotaBalance field's value.
func (s *GetCustomerDetailsByUIDOutput) SetQuotaBalance(v float64) *GetCustomerDetailsByUIDOutput {
	s.QuotaBalance = &v
	return s
}

// SetQuotaUnit sets the QuotaUnit field's value.
func (s *GetCustomerDetailsByUIDOutput) SetQuotaUnit(v string) *GetCustomerDetailsByUIDOutput {
	s.QuotaUnit = &v
	return s
}

// SetRegisterCountryCode sets the RegisterCountryCode field's value.
func (s *GetCustomerDetailsByUIDOutput) SetRegisterCountryCode(v string) *GetCustomerDetailsByUIDOutput {
	s.RegisterCountryCode = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *GetCustomerDetailsByUIDOutput) SetRemark(v string) *GetCustomerDetailsByUIDOutput {
	s.Remark = &v
	return s
}

// SetSuspensionPolicy sets the SuspensionPolicy field's value.
func (s *GetCustomerDetailsByUIDOutput) SetSuspensionPolicy(v string) *GetCustomerDetailsByUIDOutput {
	s.SuspensionPolicy = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *GetCustomerDetailsByUIDOutput) SetUid(v int32) *GetCustomerDetailsByUIDOutput {
	s.Uid = &v
	return s
}
