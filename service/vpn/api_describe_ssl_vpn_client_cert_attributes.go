// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeSslVpnClientCertAttributesCommon = "DescribeSslVpnClientCertAttributes"

// DescribeSslVpnClientCertAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeSslVpnClientCertAttributesCommon operation. The "output" return
// value will be populated with the DescribeSslVpnClientCertAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSslVpnClientCertAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSslVpnClientCertAttributesCommon Send returns without error.
//
// See DescribeSslVpnClientCertAttributesCommon for more information on using the DescribeSslVpnClientCertAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSslVpnClientCertAttributesCommonRequest method.
//    req, resp := client.DescribeSslVpnClientCertAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeSslVpnClientCertAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSslVpnClientCertAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSslVpnClientCertAttributesCommon API operation for VPN.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPN's
// API operation DescribeSslVpnClientCertAttributesCommon for usage and error information.
func (c *VPN) DescribeSslVpnClientCertAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSslVpnClientCertAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeSslVpnClientCertAttributesCommonWithContext is the same as DescribeSslVpnClientCertAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSslVpnClientCertAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeSslVpnClientCertAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSslVpnClientCertAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSslVpnClientCertAttributes = "DescribeSslVpnClientCertAttributes"

// DescribeSslVpnClientCertAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeSslVpnClientCertAttributes operation. The "output" return
// value will be populated with the DescribeSslVpnClientCertAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSslVpnClientCertAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSslVpnClientCertAttributesCommon Send returns without error.
//
// See DescribeSslVpnClientCertAttributes for more information on using the DescribeSslVpnClientCertAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeSslVpnClientCertAttributesRequest method.
//    req, resp := client.DescribeSslVpnClientCertAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeSslVpnClientCertAttributesRequest(input *DescribeSslVpnClientCertAttributesInput) (req *request.Request, output *DescribeSslVpnClientCertAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeSslVpnClientCertAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSslVpnClientCertAttributesInput{}
	}

	output = &DescribeSslVpnClientCertAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSslVpnClientCertAttributes API operation for VPN.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPN's
// API operation DescribeSslVpnClientCertAttributes for usage and error information.
func (c *VPN) DescribeSslVpnClientCertAttributes(input *DescribeSslVpnClientCertAttributesInput) (*DescribeSslVpnClientCertAttributesOutput, error) {
	req, out := c.DescribeSslVpnClientCertAttributesRequest(input)
	return out, req.Send()
}

// DescribeSslVpnClientCertAttributesWithContext is the same as DescribeSslVpnClientCertAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSslVpnClientCertAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeSslVpnClientCertAttributesWithContext(ctx byteplus.Context, input *DescribeSslVpnClientCertAttributesInput, opts ...request.Option) (*DescribeSslVpnClientCertAttributesOutput, error) {
	req, out := c.DescribeSslVpnClientCertAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSslVpnClientCertAttributesInput struct {
	_ struct{} `type:"structure"`

	// SslVpnClientCertId is a required field
	SslVpnClientCertId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeSslVpnClientCertAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslVpnClientCertAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeSslVpnClientCertAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeSslVpnClientCertAttributesInput"}
	if s.SslVpnClientCertId == nil {
		invalidParams.Add(request.NewErrParamRequired("SslVpnClientCertId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetSslVpnClientCertId sets the SslVpnClientCertId field's value.
func (s *DescribeSslVpnClientCertAttributesInput) SetSslVpnClientCertId(v string) *DescribeSslVpnClientCertAttributesInput {
	s.SslVpnClientCertId = &v
	return s
}

type DescribeSslVpnClientCertAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CaCertificate *string `type:"string"`

	CertificateStatus *string `type:"string"`

	ClientCertificate *string `type:"string"`

	ClientKey *string `type:"string"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	ExpiredTime *string `type:"string"`

	OpenVpnClientConfig *string `type:"string"`

	RequestId *string `type:"string"`

	SslVpnClientCertId *string `type:"string"`

	SslVpnClientCertName *string `type:"string"`

	SslVpnServerId *string `type:"string"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s DescribeSslVpnClientCertAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslVpnClientCertAttributesOutput) GoString() string {
	return s.String()
}

// SetCaCertificate sets the CaCertificate field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetCaCertificate(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.CaCertificate = &v
	return s
}

// SetCertificateStatus sets the CertificateStatus field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetCertificateStatus(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.CertificateStatus = &v
	return s
}

// SetClientCertificate sets the ClientCertificate field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetClientCertificate(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.ClientCertificate = &v
	return s
}

// SetClientKey sets the ClientKey field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetClientKey(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.ClientKey = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetCreationTime(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetDescription(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.Description = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetExpiredTime(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.ExpiredTime = &v
	return s
}

// SetOpenVpnClientConfig sets the OpenVpnClientConfig field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetOpenVpnClientConfig(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.OpenVpnClientConfig = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetRequestId(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.RequestId = &v
	return s
}

// SetSslVpnClientCertId sets the SslVpnClientCertId field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetSslVpnClientCertId(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.SslVpnClientCertId = &v
	return s
}

// SetSslVpnClientCertName sets the SslVpnClientCertName field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetSslVpnClientCertName(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.SslVpnClientCertName = &v
	return s
}

// SetSslVpnServerId sets the SslVpnServerId field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetSslVpnServerId(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.SslVpnServerId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetStatus(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeSslVpnClientCertAttributesOutput) SetUpdateTime(v string) *DescribeSslVpnClientCertAttributesOutput {
	s.UpdateTime = &v
	return s
}
