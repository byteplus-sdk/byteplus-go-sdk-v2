// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyVpnGatewayAttributesCommon = "ModifyVpnGatewayAttributes"

// ModifyVpnGatewayAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyVpnGatewayAttributesCommon operation. The "output" return
// value will be populated with the ModifyVpnGatewayAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpnGatewayAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpnGatewayAttributesCommon Send returns without error.
//
// See ModifyVpnGatewayAttributesCommon for more information on using the ModifyVpnGatewayAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpnGatewayAttributesCommonRequest method.
//    req, resp := client.ModifyVpnGatewayAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) ModifyVpnGatewayAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyVpnGatewayAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVpnGatewayAttributesCommon API operation for VPN.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPN's
// API operation ModifyVpnGatewayAttributesCommon for usage and error information.
func (c *VPN) ModifyVpnGatewayAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyVpnGatewayAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyVpnGatewayAttributesCommonWithContext is the same as ModifyVpnGatewayAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpnGatewayAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) ModifyVpnGatewayAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyVpnGatewayAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVpnGatewayAttributes = "ModifyVpnGatewayAttributes"

// ModifyVpnGatewayAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyVpnGatewayAttributes operation. The "output" return
// value will be populated with the ModifyVpnGatewayAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpnGatewayAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpnGatewayAttributesCommon Send returns without error.
//
// See ModifyVpnGatewayAttributes for more information on using the ModifyVpnGatewayAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpnGatewayAttributesRequest method.
//    req, resp := client.ModifyVpnGatewayAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) ModifyVpnGatewayAttributesRequest(input *ModifyVpnGatewayAttributesInput) (req *request.Request, output *ModifyVpnGatewayAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyVpnGatewayAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyVpnGatewayAttributesInput{}
	}

	output = &ModifyVpnGatewayAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVpnGatewayAttributes API operation for VPN.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPN's
// API operation ModifyVpnGatewayAttributes for usage and error information.
func (c *VPN) ModifyVpnGatewayAttributes(input *ModifyVpnGatewayAttributesInput) (*ModifyVpnGatewayAttributesOutput, error) {
	req, out := c.ModifyVpnGatewayAttributesRequest(input)
	return out, req.Send()
}

// ModifyVpnGatewayAttributesWithContext is the same as ModifyVpnGatewayAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpnGatewayAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) ModifyVpnGatewayAttributesWithContext(ctx byteplus.Context, input *ModifyVpnGatewayAttributesInput, opts ...request.Option) (*ModifyVpnGatewayAttributesOutput, error) {
	req, out := c.ModifyVpnGatewayAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyVpnGatewayAttributesInput struct {
	_ struct{} `type:"structure"`

	Asn *int64 `type:"integer"`

	Bandwidth *int64 `type:"integer"`

	Description *string `type:"string"`

	IpsecEnabled *bool `type:"boolean"`

	SslEnabled *bool `type:"boolean"`

	SslMaxConnections *int64 `type:"integer"`

	// VpnGatewayId is a required field
	VpnGatewayId *string `type:"string" required:"true"`

	VpnGatewayName *string `type:"string"`
}

// String returns the string representation
func (s ModifyVpnGatewayAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpnGatewayAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyVpnGatewayAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyVpnGatewayAttributesInput"}
	if s.VpnGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpnGatewayId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAsn sets the Asn field's value.
func (s *ModifyVpnGatewayAttributesInput) SetAsn(v int64) *ModifyVpnGatewayAttributesInput {
	s.Asn = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *ModifyVpnGatewayAttributesInput) SetBandwidth(v int64) *ModifyVpnGatewayAttributesInput {
	s.Bandwidth = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyVpnGatewayAttributesInput) SetDescription(v string) *ModifyVpnGatewayAttributesInput {
	s.Description = &v
	return s
}

// SetIpsecEnabled sets the IpsecEnabled field's value.
func (s *ModifyVpnGatewayAttributesInput) SetIpsecEnabled(v bool) *ModifyVpnGatewayAttributesInput {
	s.IpsecEnabled = &v
	return s
}

// SetSslEnabled sets the SslEnabled field's value.
func (s *ModifyVpnGatewayAttributesInput) SetSslEnabled(v bool) *ModifyVpnGatewayAttributesInput {
	s.SslEnabled = &v
	return s
}

// SetSslMaxConnections sets the SslMaxConnections field's value.
func (s *ModifyVpnGatewayAttributesInput) SetSslMaxConnections(v int64) *ModifyVpnGatewayAttributesInput {
	s.SslMaxConnections = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *ModifyVpnGatewayAttributesInput) SetVpnGatewayId(v string) *ModifyVpnGatewayAttributesInput {
	s.VpnGatewayId = &v
	return s
}

// SetVpnGatewayName sets the VpnGatewayName field's value.
func (s *ModifyVpnGatewayAttributesInput) SetVpnGatewayName(v string) *ModifyVpnGatewayAttributesInput {
	s.VpnGatewayName = &v
	return s
}

type ModifyVpnGatewayAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrderId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyVpnGatewayAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpnGatewayAttributesOutput) GoString() string {
	return s.String()
}

// SetOrderId sets the OrderId field's value.
func (s *ModifyVpnGatewayAttributesOutput) SetOrderId(v string) *ModifyVpnGatewayAttributesOutput {
	s.OrderId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyVpnGatewayAttributesOutput) SetRequestId(v string) *ModifyVpnGatewayAttributesOutput {
	s.RequestId = &v
	return s
}
