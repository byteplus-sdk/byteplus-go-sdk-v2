// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyTransitRouterRoutePolicyTableAttributesCommon = "ModifyTransitRouterRoutePolicyTableAttributes"

// ModifyTransitRouterRoutePolicyTableAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTransitRouterRoutePolicyTableAttributesCommon operation. The "output" return
// value will be populated with the ModifyTransitRouterRoutePolicyTableAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTransitRouterRoutePolicyTableAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTransitRouterRoutePolicyTableAttributesCommon Send returns without error.
//
// See ModifyTransitRouterRoutePolicyTableAttributesCommon for more information on using the ModifyTransitRouterRoutePolicyTableAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTransitRouterRoutePolicyTableAttributesCommonRequest method.
//    req, resp := client.ModifyTransitRouterRoutePolicyTableAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) ModifyTransitRouterRoutePolicyTableAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTransitRouterRoutePolicyTableAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTransitRouterRoutePolicyTableAttributesCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation ModifyTransitRouterRoutePolicyTableAttributesCommon for usage and error information.
func (c *TRANSITROUTER) ModifyTransitRouterRoutePolicyTableAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTransitRouterRoutePolicyTableAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyTransitRouterRoutePolicyTableAttributesCommonWithContext is the same as ModifyTransitRouterRoutePolicyTableAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTransitRouterRoutePolicyTableAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) ModifyTransitRouterRoutePolicyTableAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTransitRouterRoutePolicyTableAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTransitRouterRoutePolicyTableAttributes = "ModifyTransitRouterRoutePolicyTableAttributes"

// ModifyTransitRouterRoutePolicyTableAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTransitRouterRoutePolicyTableAttributes operation. The "output" return
// value will be populated with the ModifyTransitRouterRoutePolicyTableAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTransitRouterRoutePolicyTableAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTransitRouterRoutePolicyTableAttributesCommon Send returns without error.
//
// See ModifyTransitRouterRoutePolicyTableAttributes for more information on using the ModifyTransitRouterRoutePolicyTableAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyTransitRouterRoutePolicyTableAttributesRequest method.
//    req, resp := client.ModifyTransitRouterRoutePolicyTableAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) ModifyTransitRouterRoutePolicyTableAttributesRequest(input *ModifyTransitRouterRoutePolicyTableAttributesInput) (req *request.Request, output *ModifyTransitRouterRoutePolicyTableAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyTransitRouterRoutePolicyTableAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTransitRouterRoutePolicyTableAttributesInput{}
	}

	output = &ModifyTransitRouterRoutePolicyTableAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTransitRouterRoutePolicyTableAttributes API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation ModifyTransitRouterRoutePolicyTableAttributes for usage and error information.
func (c *TRANSITROUTER) ModifyTransitRouterRoutePolicyTableAttributes(input *ModifyTransitRouterRoutePolicyTableAttributesInput) (*ModifyTransitRouterRoutePolicyTableAttributesOutput, error) {
	req, out := c.ModifyTransitRouterRoutePolicyTableAttributesRequest(input)
	return out, req.Send()
}

// ModifyTransitRouterRoutePolicyTableAttributesWithContext is the same as ModifyTransitRouterRoutePolicyTableAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTransitRouterRoutePolicyTableAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) ModifyTransitRouterRoutePolicyTableAttributesWithContext(ctx byteplus.Context, input *ModifyTransitRouterRoutePolicyTableAttributesInput, opts ...request.Option) (*ModifyTransitRouterRoutePolicyTableAttributesOutput, error) {
	req, out := c.ModifyTransitRouterRoutePolicyTableAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTransitRouterRoutePolicyTableAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	// TransitRouterRoutePolicyTableId is a required field
	TransitRouterRoutePolicyTableId *string `type:"string" required:"true"`

	TransitRouterRoutePolicyTableName *string `type:"string"`
}

// String returns the string representation
func (s ModifyTransitRouterRoutePolicyTableAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTransitRouterRoutePolicyTableAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTransitRouterRoutePolicyTableAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTransitRouterRoutePolicyTableAttributesInput"}
	if s.TransitRouterRoutePolicyTableId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterRoutePolicyTableId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyTransitRouterRoutePolicyTableAttributesInput) SetDescription(v string) *ModifyTransitRouterRoutePolicyTableAttributesInput {
	s.Description = &v
	return s
}

// SetTransitRouterRoutePolicyTableId sets the TransitRouterRoutePolicyTableId field's value.
func (s *ModifyTransitRouterRoutePolicyTableAttributesInput) SetTransitRouterRoutePolicyTableId(v string) *ModifyTransitRouterRoutePolicyTableAttributesInput {
	s.TransitRouterRoutePolicyTableId = &v
	return s
}

// SetTransitRouterRoutePolicyTableName sets the TransitRouterRoutePolicyTableName field's value.
func (s *ModifyTransitRouterRoutePolicyTableAttributesInput) SetTransitRouterRoutePolicyTableName(v string) *ModifyTransitRouterRoutePolicyTableAttributesInput {
	s.TransitRouterRoutePolicyTableName = &v
	return s
}

type ModifyTransitRouterRoutePolicyTableAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyTransitRouterRoutePolicyTableAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTransitRouterRoutePolicyTableAttributesOutput) GoString() string {
	return s.String()
}
