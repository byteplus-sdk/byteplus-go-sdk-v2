// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateTransitRouterForwardPolicyTableCommon = "CreateTransitRouterForwardPolicyTable"

// CreateTransitRouterForwardPolicyTableCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterForwardPolicyTableCommon operation. The "output" return
// value will be populated with the CreateTransitRouterForwardPolicyTableCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterForwardPolicyTableCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterForwardPolicyTableCommon Send returns without error.
//
// See CreateTransitRouterForwardPolicyTableCommon for more information on using the CreateTransitRouterForwardPolicyTableCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterForwardPolicyTableCommonRequest method.
//    req, resp := client.CreateTransitRouterForwardPolicyTableCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterForwardPolicyTableCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTransitRouterForwardPolicyTableCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterForwardPolicyTableCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterForwardPolicyTableCommon for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterForwardPolicyTableCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterForwardPolicyTableCommonRequest(input)
	return out, req.Send()
}

// CreateTransitRouterForwardPolicyTableCommonWithContext is the same as CreateTransitRouterForwardPolicyTableCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterForwardPolicyTableCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterForwardPolicyTableCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterForwardPolicyTableCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTransitRouterForwardPolicyTable = "CreateTransitRouterForwardPolicyTable"

// CreateTransitRouterForwardPolicyTableRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterForwardPolicyTable operation. The "output" return
// value will be populated with the CreateTransitRouterForwardPolicyTableCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterForwardPolicyTableCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterForwardPolicyTableCommon Send returns without error.
//
// See CreateTransitRouterForwardPolicyTable for more information on using the CreateTransitRouterForwardPolicyTable
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterForwardPolicyTableRequest method.
//    req, resp := client.CreateTransitRouterForwardPolicyTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterForwardPolicyTableRequest(input *CreateTransitRouterForwardPolicyTableInput) (req *request.Request, output *CreateTransitRouterForwardPolicyTableOutput) {
	op := &request.Operation{
		Name:       opCreateTransitRouterForwardPolicyTable,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTransitRouterForwardPolicyTableInput{}
	}

	output = &CreateTransitRouterForwardPolicyTableOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterForwardPolicyTable API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterForwardPolicyTable for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterForwardPolicyTable(input *CreateTransitRouterForwardPolicyTableInput) (*CreateTransitRouterForwardPolicyTableOutput, error) {
	req, out := c.CreateTransitRouterForwardPolicyTableRequest(input)
	return out, req.Send()
}

// CreateTransitRouterForwardPolicyTableWithContext is the same as CreateTransitRouterForwardPolicyTable with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterForwardPolicyTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterForwardPolicyTableWithContext(ctx byteplus.Context, input *CreateTransitRouterForwardPolicyTableInput, opts ...request.Option) (*CreateTransitRouterForwardPolicyTableOutput, error) {
	req, out := c.CreateTransitRouterForwardPolicyTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTransitRouterForwardPolicyTableInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	TransitRouterForwardPolicyTableName *string `type:"string"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateTransitRouterForwardPolicyTableInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterForwardPolicyTableInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTransitRouterForwardPolicyTableInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTransitRouterForwardPolicyTableInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateTransitRouterForwardPolicyTableInput) SetClientToken(v string) *CreateTransitRouterForwardPolicyTableInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateTransitRouterForwardPolicyTableInput) SetDescription(v string) *CreateTransitRouterForwardPolicyTableInput {
	s.Description = &v
	return s
}

// SetTransitRouterForwardPolicyTableName sets the TransitRouterForwardPolicyTableName field's value.
func (s *CreateTransitRouterForwardPolicyTableInput) SetTransitRouterForwardPolicyTableName(v string) *CreateTransitRouterForwardPolicyTableInput {
	s.TransitRouterForwardPolicyTableName = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *CreateTransitRouterForwardPolicyTableInput) SetTransitRouterId(v string) *CreateTransitRouterForwardPolicyTableInput {
	s.TransitRouterId = &v
	return s
}

type CreateTransitRouterForwardPolicyTableOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	TransitRouterForwardPolicyTableId *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterForwardPolicyTableOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterForwardPolicyTableOutput) GoString() string {
	return s.String()
}

// SetTransitRouterForwardPolicyTableId sets the TransitRouterForwardPolicyTableId field's value.
func (s *CreateTransitRouterForwardPolicyTableOutput) SetTransitRouterForwardPolicyTableId(v string) *CreateTransitRouterForwardPolicyTableOutput {
	s.TransitRouterForwardPolicyTableId = &v
	return s
}
