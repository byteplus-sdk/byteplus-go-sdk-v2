// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateTransitRouterTrafficQosQueueEntryCommon = "CreateTransitRouterTrafficQosQueueEntry"

// CreateTransitRouterTrafficQosQueueEntryCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterTrafficQosQueueEntryCommon operation. The "output" return
// value will be populated with the CreateTransitRouterTrafficQosQueueEntryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterTrafficQosQueueEntryCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterTrafficQosQueueEntryCommon Send returns without error.
//
// See CreateTransitRouterTrafficQosQueueEntryCommon for more information on using the CreateTransitRouterTrafficQosQueueEntryCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterTrafficQosQueueEntryCommonRequest method.
//    req, resp := client.CreateTransitRouterTrafficQosQueueEntryCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueueEntryCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTransitRouterTrafficQosQueueEntryCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterTrafficQosQueueEntryCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterTrafficQosQueueEntryCommon for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueueEntryCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterTrafficQosQueueEntryCommonRequest(input)
	return out, req.Send()
}

// CreateTransitRouterTrafficQosQueueEntryCommonWithContext is the same as CreateTransitRouterTrafficQosQueueEntryCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterTrafficQosQueueEntryCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueueEntryCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterTrafficQosQueueEntryCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTransitRouterTrafficQosQueueEntry = "CreateTransitRouterTrafficQosQueueEntry"

// CreateTransitRouterTrafficQosQueueEntryRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterTrafficQosQueueEntry operation. The "output" return
// value will be populated with the CreateTransitRouterTrafficQosQueueEntryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterTrafficQosQueueEntryCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterTrafficQosQueueEntryCommon Send returns without error.
//
// See CreateTransitRouterTrafficQosQueueEntry for more information on using the CreateTransitRouterTrafficQosQueueEntry
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterTrafficQosQueueEntryRequest method.
//    req, resp := client.CreateTransitRouterTrafficQosQueueEntryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueueEntryRequest(input *CreateTransitRouterTrafficQosQueueEntryInput) (req *request.Request, output *CreateTransitRouterTrafficQosQueueEntryOutput) {
	op := &request.Operation{
		Name:       opCreateTransitRouterTrafficQosQueueEntry,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTransitRouterTrafficQosQueueEntryInput{}
	}

	output = &CreateTransitRouterTrafficQosQueueEntryOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterTrafficQosQueueEntry API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterTrafficQosQueueEntry for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueueEntry(input *CreateTransitRouterTrafficQosQueueEntryInput) (*CreateTransitRouterTrafficQosQueueEntryOutput, error) {
	req, out := c.CreateTransitRouterTrafficQosQueueEntryRequest(input)
	return out, req.Send()
}

// CreateTransitRouterTrafficQosQueueEntryWithContext is the same as CreateTransitRouterTrafficQosQueueEntry with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterTrafficQosQueueEntry for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueueEntryWithContext(ctx byteplus.Context, input *CreateTransitRouterTrafficQosQueueEntryInput, opts ...request.Option) (*CreateTransitRouterTrafficQosQueueEntryOutput, error) {
	req, out := c.CreateTransitRouterTrafficQosQueueEntryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTransitRouterTrafficQosQueueEntryInput struct {
	_ struct{} `type:"structure"`

	// BandwidthPercent is a required field
	BandwidthPercent *int32 `type:"int32" required:"true"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	// Dscps is a required field
	Dscps []*int32 `type:"list" required:"true"`

	// TransitRouterTrafficQosQueueEntryName is a required field
	TransitRouterTrafficQosQueueEntryName *string `type:"string" required:"true"`

	// TransitRouterTrafficQosQueuePolicyId is a required field
	TransitRouterTrafficQosQueuePolicyId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateTransitRouterTrafficQosQueueEntryInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterTrafficQosQueueEntryInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTransitRouterTrafficQosQueueEntryInput"}
	if s.BandwidthPercent == nil {
		invalidParams.Add(request.NewErrParamRequired("BandwidthPercent"))
	}
	if s.Dscps == nil {
		invalidParams.Add(request.NewErrParamRequired("Dscps"))
	}
	if s.TransitRouterTrafficQosQueueEntryName == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterTrafficQosQueueEntryName"))
	}
	if s.TransitRouterTrafficQosQueuePolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterTrafficQosQueuePolicyId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidthPercent sets the BandwidthPercent field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) SetBandwidthPercent(v int32) *CreateTransitRouterTrafficQosQueueEntryInput {
	s.BandwidthPercent = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) SetClientToken(v string) *CreateTransitRouterTrafficQosQueueEntryInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) SetDescription(v string) *CreateTransitRouterTrafficQosQueueEntryInput {
	s.Description = &v
	return s
}

// SetDscps sets the Dscps field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) SetDscps(v []*int32) *CreateTransitRouterTrafficQosQueueEntryInput {
	s.Dscps = v
	return s
}

// SetTransitRouterTrafficQosQueueEntryName sets the TransitRouterTrafficQosQueueEntryName field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) SetTransitRouterTrafficQosQueueEntryName(v string) *CreateTransitRouterTrafficQosQueueEntryInput {
	s.TransitRouterTrafficQosQueueEntryName = &v
	return s
}

// SetTransitRouterTrafficQosQueuePolicyId sets the TransitRouterTrafficQosQueuePolicyId field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryInput) SetTransitRouterTrafficQosQueuePolicyId(v string) *CreateTransitRouterTrafficQosQueueEntryInput {
	s.TransitRouterTrafficQosQueuePolicyId = &v
	return s
}

type CreateTransitRouterTrafficQosQueueEntryOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	TransitRouterTrafficQosQueueEntryId *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterTrafficQosQueueEntryOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterTrafficQosQueueEntryOutput) GoString() string {
	return s.String()
}

// SetTransitRouterTrafficQosQueueEntryId sets the TransitRouterTrafficQosQueueEntryId field's value.
func (s *CreateTransitRouterTrafficQosQueueEntryOutput) SetTransitRouterTrafficQosQueueEntryId(v string) *CreateTransitRouterTrafficQosQueueEntryOutput {
	s.TransitRouterTrafficQosQueueEntryId = &v
	return s
}
