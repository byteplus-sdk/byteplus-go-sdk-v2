// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteTransitRouterTrafficQosQueueEntryCommon = "DeleteTransitRouterTrafficQosQueueEntry"

// DeleteTransitRouterTrafficQosQueueEntryCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteTransitRouterTrafficQosQueueEntryCommon operation. The "output" return
// value will be populated with the DeleteTransitRouterTrafficQosQueueEntryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterTrafficQosQueueEntryCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterTrafficQosQueueEntryCommon Send returns without error.
//
// See DeleteTransitRouterTrafficQosQueueEntryCommon for more information on using the DeleteTransitRouterTrafficQosQueueEntryCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterTrafficQosQueueEntryCommonRequest method.
//    req, resp := client.DeleteTransitRouterTrafficQosQueueEntryCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosQueueEntryCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterTrafficQosQueueEntryCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterTrafficQosQueueEntryCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterTrafficQosQueueEntryCommon for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosQueueEntryCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterTrafficQosQueueEntryCommonRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterTrafficQosQueueEntryCommonWithContext is the same as DeleteTransitRouterTrafficQosQueueEntryCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterTrafficQosQueueEntryCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosQueueEntryCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterTrafficQosQueueEntryCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTransitRouterTrafficQosQueueEntry = "DeleteTransitRouterTrafficQosQueueEntry"

// DeleteTransitRouterTrafficQosQueueEntryRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteTransitRouterTrafficQosQueueEntry operation. The "output" return
// value will be populated with the DeleteTransitRouterTrafficQosQueueEntryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterTrafficQosQueueEntryCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterTrafficQosQueueEntryCommon Send returns without error.
//
// See DeleteTransitRouterTrafficQosQueueEntry for more information on using the DeleteTransitRouterTrafficQosQueueEntry
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterTrafficQosQueueEntryRequest method.
//    req, resp := client.DeleteTransitRouterTrafficQosQueueEntryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosQueueEntryRequest(input *DeleteTransitRouterTrafficQosQueueEntryInput) (req *request.Request, output *DeleteTransitRouterTrafficQosQueueEntryOutput) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterTrafficQosQueueEntry,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTransitRouterTrafficQosQueueEntryInput{}
	}

	output = &DeleteTransitRouterTrafficQosQueueEntryOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterTrafficQosQueueEntry API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterTrafficQosQueueEntry for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosQueueEntry(input *DeleteTransitRouterTrafficQosQueueEntryInput) (*DeleteTransitRouterTrafficQosQueueEntryOutput, error) {
	req, out := c.DeleteTransitRouterTrafficQosQueueEntryRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterTrafficQosQueueEntryWithContext is the same as DeleteTransitRouterTrafficQosQueueEntry with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterTrafficQosQueueEntry for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosQueueEntryWithContext(ctx byteplus.Context, input *DeleteTransitRouterTrafficQosQueueEntryInput, opts ...request.Option) (*DeleteTransitRouterTrafficQosQueueEntryOutput, error) {
	req, out := c.DeleteTransitRouterTrafficQosQueueEntryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTransitRouterTrafficQosQueueEntryInput struct {
	_ struct{} `type:"structure"`

	// TransitRouterTrafficQosQueueEntryId is a required field
	TransitRouterTrafficQosQueueEntryId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteTransitRouterTrafficQosQueueEntryInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterTrafficQosQueueEntryInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteTransitRouterTrafficQosQueueEntryInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteTransitRouterTrafficQosQueueEntryInput"}
	if s.TransitRouterTrafficQosQueueEntryId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterTrafficQosQueueEntryId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTransitRouterTrafficQosQueueEntryId sets the TransitRouterTrafficQosQueueEntryId field's value.
func (s *DeleteTransitRouterTrafficQosQueueEntryInput) SetTransitRouterTrafficQosQueueEntryId(v string) *DeleteTransitRouterTrafficQosQueueEntryInput {
	s.TransitRouterTrafficQosQueueEntryId = &v
	return s
}

type DeleteTransitRouterTrafficQosQueueEntryOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteTransitRouterTrafficQosQueueEntryOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterTrafficQosQueueEntryOutput) GoString() string {
	return s.String()
}
