// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateTransitRouterDirectConnectGatewayAttachmentCommon = "CreateTransitRouterDirectConnectGatewayAttachment"

// CreateTransitRouterDirectConnectGatewayAttachmentCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterDirectConnectGatewayAttachmentCommon operation. The "output" return
// value will be populated with the CreateTransitRouterDirectConnectGatewayAttachmentCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterDirectConnectGatewayAttachmentCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterDirectConnectGatewayAttachmentCommon Send returns without error.
//
// See CreateTransitRouterDirectConnectGatewayAttachmentCommon for more information on using the CreateTransitRouterDirectConnectGatewayAttachmentCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterDirectConnectGatewayAttachmentCommonRequest method.
//    req, resp := client.CreateTransitRouterDirectConnectGatewayAttachmentCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterDirectConnectGatewayAttachmentCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTransitRouterDirectConnectGatewayAttachmentCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterDirectConnectGatewayAttachmentCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterDirectConnectGatewayAttachmentCommon for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterDirectConnectGatewayAttachmentCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterDirectConnectGatewayAttachmentCommonRequest(input)
	return out, req.Send()
}

// CreateTransitRouterDirectConnectGatewayAttachmentCommonWithContext is the same as CreateTransitRouterDirectConnectGatewayAttachmentCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterDirectConnectGatewayAttachmentCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterDirectConnectGatewayAttachmentCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterDirectConnectGatewayAttachmentCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTransitRouterDirectConnectGatewayAttachment = "CreateTransitRouterDirectConnectGatewayAttachment"

// CreateTransitRouterDirectConnectGatewayAttachmentRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterDirectConnectGatewayAttachment operation. The "output" return
// value will be populated with the CreateTransitRouterDirectConnectGatewayAttachmentCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterDirectConnectGatewayAttachmentCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterDirectConnectGatewayAttachmentCommon Send returns without error.
//
// See CreateTransitRouterDirectConnectGatewayAttachment for more information on using the CreateTransitRouterDirectConnectGatewayAttachment
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterDirectConnectGatewayAttachmentRequest method.
//    req, resp := client.CreateTransitRouterDirectConnectGatewayAttachmentRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterDirectConnectGatewayAttachmentRequest(input *CreateTransitRouterDirectConnectGatewayAttachmentInput) (req *request.Request, output *CreateTransitRouterDirectConnectGatewayAttachmentOutput) {
	op := &request.Operation{
		Name:       opCreateTransitRouterDirectConnectGatewayAttachment,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTransitRouterDirectConnectGatewayAttachmentInput{}
	}

	output = &CreateTransitRouterDirectConnectGatewayAttachmentOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterDirectConnectGatewayAttachment API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterDirectConnectGatewayAttachment for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterDirectConnectGatewayAttachment(input *CreateTransitRouterDirectConnectGatewayAttachmentInput) (*CreateTransitRouterDirectConnectGatewayAttachmentOutput, error) {
	req, out := c.CreateTransitRouterDirectConnectGatewayAttachmentRequest(input)
	return out, req.Send()
}

// CreateTransitRouterDirectConnectGatewayAttachmentWithContext is the same as CreateTransitRouterDirectConnectGatewayAttachment with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterDirectConnectGatewayAttachment for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterDirectConnectGatewayAttachmentWithContext(ctx byteplus.Context, input *CreateTransitRouterDirectConnectGatewayAttachmentInput, opts ...request.Option) (*CreateTransitRouterDirectConnectGatewayAttachmentOutput, error) {
	req, out := c.CreateTransitRouterDirectConnectGatewayAttachmentRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTransitRouterDirectConnectGatewayAttachmentInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	// DirectConnectGatewayId is a required field
	DirectConnectGatewayId *string `type:"string" required:"true"`

	Tags []*TagForCreateTransitRouterDirectConnectGatewayAttachmentInput `type:"list"`

	TransitRouterAttachmentName *string `type:"string"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateTransitRouterDirectConnectGatewayAttachmentInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterDirectConnectGatewayAttachmentInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTransitRouterDirectConnectGatewayAttachmentInput"}
	if s.DirectConnectGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectGatewayId"))
	}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) SetClientToken(v string) *CreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) SetDescription(v string) *CreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.Description = &v
	return s
}

// SetDirectConnectGatewayId sets the DirectConnectGatewayId field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) SetDirectConnectGatewayId(v string) *CreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.DirectConnectGatewayId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) SetTags(v []*TagForCreateTransitRouterDirectConnectGatewayAttachmentInput) *CreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.Tags = v
	return s
}

// SetTransitRouterAttachmentName sets the TransitRouterAttachmentName field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) SetTransitRouterAttachmentName(v string) *CreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.TransitRouterAttachmentName = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentInput) SetTransitRouterId(v string) *CreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.TransitRouterId = &v
	return s
}

type CreateTransitRouterDirectConnectGatewayAttachmentOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	TransitRouterAttachmentId *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterDirectConnectGatewayAttachmentOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterDirectConnectGatewayAttachmentOutput) GoString() string {
	return s.String()
}

// SetTransitRouterAttachmentId sets the TransitRouterAttachmentId field's value.
func (s *CreateTransitRouterDirectConnectGatewayAttachmentOutput) SetTransitRouterAttachmentId(v string) *CreateTransitRouterDirectConnectGatewayAttachmentOutput {
	s.TransitRouterAttachmentId = &v
	return s
}

type TagForCreateTransitRouterDirectConnectGatewayAttachmentInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForCreateTransitRouterDirectConnectGatewayAttachmentInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateTransitRouterDirectConnectGatewayAttachmentInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateTransitRouterDirectConnectGatewayAttachmentInput) SetKey(v string) *TagForCreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateTransitRouterDirectConnectGatewayAttachmentInput) SetValue(v string) *TagForCreateTransitRouterDirectConnectGatewayAttachmentInput {
	s.Value = &v
	return s
}
