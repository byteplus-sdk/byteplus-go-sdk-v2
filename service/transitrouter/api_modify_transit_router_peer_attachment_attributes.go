// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyTransitRouterPeerAttachmentAttributesCommon = "ModifyTransitRouterPeerAttachmentAttributes"

// ModifyTransitRouterPeerAttachmentAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTransitRouterPeerAttachmentAttributesCommon operation. The "output" return
// value will be populated with the ModifyTransitRouterPeerAttachmentAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTransitRouterPeerAttachmentAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTransitRouterPeerAttachmentAttributesCommon Send returns without error.
//
// See ModifyTransitRouterPeerAttachmentAttributesCommon for more information on using the ModifyTransitRouterPeerAttachmentAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTransitRouterPeerAttachmentAttributesCommonRequest method.
//    req, resp := client.ModifyTransitRouterPeerAttachmentAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) ModifyTransitRouterPeerAttachmentAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTransitRouterPeerAttachmentAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTransitRouterPeerAttachmentAttributesCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation ModifyTransitRouterPeerAttachmentAttributesCommon for usage and error information.
func (c *TRANSITROUTER) ModifyTransitRouterPeerAttachmentAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTransitRouterPeerAttachmentAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyTransitRouterPeerAttachmentAttributesCommonWithContext is the same as ModifyTransitRouterPeerAttachmentAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTransitRouterPeerAttachmentAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) ModifyTransitRouterPeerAttachmentAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTransitRouterPeerAttachmentAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTransitRouterPeerAttachmentAttributes = "ModifyTransitRouterPeerAttachmentAttributes"

// ModifyTransitRouterPeerAttachmentAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTransitRouterPeerAttachmentAttributes operation. The "output" return
// value will be populated with the ModifyTransitRouterPeerAttachmentAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTransitRouterPeerAttachmentAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTransitRouterPeerAttachmentAttributesCommon Send returns without error.
//
// See ModifyTransitRouterPeerAttachmentAttributes for more information on using the ModifyTransitRouterPeerAttachmentAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyTransitRouterPeerAttachmentAttributesRequest method.
//    req, resp := client.ModifyTransitRouterPeerAttachmentAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) ModifyTransitRouterPeerAttachmentAttributesRequest(input *ModifyTransitRouterPeerAttachmentAttributesInput) (req *request.Request, output *ModifyTransitRouterPeerAttachmentAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyTransitRouterPeerAttachmentAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTransitRouterPeerAttachmentAttributesInput{}
	}

	output = &ModifyTransitRouterPeerAttachmentAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTransitRouterPeerAttachmentAttributes API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation ModifyTransitRouterPeerAttachmentAttributes for usage and error information.
func (c *TRANSITROUTER) ModifyTransitRouterPeerAttachmentAttributes(input *ModifyTransitRouterPeerAttachmentAttributesInput) (*ModifyTransitRouterPeerAttachmentAttributesOutput, error) {
	req, out := c.ModifyTransitRouterPeerAttachmentAttributesRequest(input)
	return out, req.Send()
}

// ModifyTransitRouterPeerAttachmentAttributesWithContext is the same as ModifyTransitRouterPeerAttachmentAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTransitRouterPeerAttachmentAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) ModifyTransitRouterPeerAttachmentAttributesWithContext(ctx byteplus.Context, input *ModifyTransitRouterPeerAttachmentAttributesInput, opts ...request.Option) (*ModifyTransitRouterPeerAttachmentAttributesOutput, error) {
	req, out := c.ModifyTransitRouterPeerAttachmentAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTransitRouterPeerAttachmentAttributesInput struct {
	_ struct{} `type:"structure"`

	Bandwidth *int32 `type:"int32"`

	Description *string `type:"string"`

	// TransitRouterAttachmentId is a required field
	TransitRouterAttachmentId *string `type:"string" required:"true"`

	TransitRouterAttachmentName *string `type:"string"`

	TransitRouterBandwidthPackageId *string `type:"string"`
}

// String returns the string representation
func (s ModifyTransitRouterPeerAttachmentAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTransitRouterPeerAttachmentAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTransitRouterPeerAttachmentAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTransitRouterPeerAttachmentAttributesInput"}
	if s.TransitRouterAttachmentId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterAttachmentId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidth sets the Bandwidth field's value.
func (s *ModifyTransitRouterPeerAttachmentAttributesInput) SetBandwidth(v int32) *ModifyTransitRouterPeerAttachmentAttributesInput {
	s.Bandwidth = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyTransitRouterPeerAttachmentAttributesInput) SetDescription(v string) *ModifyTransitRouterPeerAttachmentAttributesInput {
	s.Description = &v
	return s
}

// SetTransitRouterAttachmentId sets the TransitRouterAttachmentId field's value.
func (s *ModifyTransitRouterPeerAttachmentAttributesInput) SetTransitRouterAttachmentId(v string) *ModifyTransitRouterPeerAttachmentAttributesInput {
	s.TransitRouterAttachmentId = &v
	return s
}

// SetTransitRouterAttachmentName sets the TransitRouterAttachmentName field's value.
func (s *ModifyTransitRouterPeerAttachmentAttributesInput) SetTransitRouterAttachmentName(v string) *ModifyTransitRouterPeerAttachmentAttributesInput {
	s.TransitRouterAttachmentName = &v
	return s
}

// SetTransitRouterBandwidthPackageId sets the TransitRouterBandwidthPackageId field's value.
func (s *ModifyTransitRouterPeerAttachmentAttributesInput) SetTransitRouterBandwidthPackageId(v string) *ModifyTransitRouterPeerAttachmentAttributesInput {
	s.TransitRouterBandwidthPackageId = &v
	return s
}

type ModifyTransitRouterPeerAttachmentAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyTransitRouterPeerAttachmentAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTransitRouterPeerAttachmentAttributesOutput) GoString() string {
	return s.String()
}
