// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteTransitRouterTrafficQosMarkingPolicyCommon = "DeleteTransitRouterTrafficQosMarkingPolicy"

// DeleteTransitRouterTrafficQosMarkingPolicyCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteTransitRouterTrafficQosMarkingPolicyCommon operation. The "output" return
// value will be populated with the DeleteTransitRouterTrafficQosMarkingPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterTrafficQosMarkingPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterTrafficQosMarkingPolicyCommon Send returns without error.
//
// See DeleteTransitRouterTrafficQosMarkingPolicyCommon for more information on using the DeleteTransitRouterTrafficQosMarkingPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterTrafficQosMarkingPolicyCommonRequest method.
//    req, resp := client.DeleteTransitRouterTrafficQosMarkingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosMarkingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterTrafficQosMarkingPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterTrafficQosMarkingPolicyCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterTrafficQosMarkingPolicyCommon for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosMarkingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterTrafficQosMarkingPolicyCommonRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterTrafficQosMarkingPolicyCommonWithContext is the same as DeleteTransitRouterTrafficQosMarkingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterTrafficQosMarkingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosMarkingPolicyCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterTrafficQosMarkingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTransitRouterTrafficQosMarkingPolicy = "DeleteTransitRouterTrafficQosMarkingPolicy"

// DeleteTransitRouterTrafficQosMarkingPolicyRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteTransitRouterTrafficQosMarkingPolicy operation. The "output" return
// value will be populated with the DeleteTransitRouterTrafficQosMarkingPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterTrafficQosMarkingPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterTrafficQosMarkingPolicyCommon Send returns without error.
//
// See DeleteTransitRouterTrafficQosMarkingPolicy for more information on using the DeleteTransitRouterTrafficQosMarkingPolicy
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterTrafficQosMarkingPolicyRequest method.
//    req, resp := client.DeleteTransitRouterTrafficQosMarkingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosMarkingPolicyRequest(input *DeleteTransitRouterTrafficQosMarkingPolicyInput) (req *request.Request, output *DeleteTransitRouterTrafficQosMarkingPolicyOutput) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterTrafficQosMarkingPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTransitRouterTrafficQosMarkingPolicyInput{}
	}

	output = &DeleteTransitRouterTrafficQosMarkingPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterTrafficQosMarkingPolicy API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterTrafficQosMarkingPolicy for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosMarkingPolicy(input *DeleteTransitRouterTrafficQosMarkingPolicyInput) (*DeleteTransitRouterTrafficQosMarkingPolicyOutput, error) {
	req, out := c.DeleteTransitRouterTrafficQosMarkingPolicyRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterTrafficQosMarkingPolicyWithContext is the same as DeleteTransitRouterTrafficQosMarkingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterTrafficQosMarkingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterTrafficQosMarkingPolicyWithContext(ctx byteplus.Context, input *DeleteTransitRouterTrafficQosMarkingPolicyInput, opts ...request.Option) (*DeleteTransitRouterTrafficQosMarkingPolicyOutput, error) {
	req, out := c.DeleteTransitRouterTrafficQosMarkingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTransitRouterTrafficQosMarkingPolicyInput struct {
	_ struct{} `type:"structure"`

	// TransitRouterTrafficQosMarkingPolicyId is a required field
	TransitRouterTrafficQosMarkingPolicyId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteTransitRouterTrafficQosMarkingPolicyInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterTrafficQosMarkingPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteTransitRouterTrafficQosMarkingPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteTransitRouterTrafficQosMarkingPolicyInput"}
	if s.TransitRouterTrafficQosMarkingPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterTrafficQosMarkingPolicyId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTransitRouterTrafficQosMarkingPolicyId sets the TransitRouterTrafficQosMarkingPolicyId field's value.
func (s *DeleteTransitRouterTrafficQosMarkingPolicyInput) SetTransitRouterTrafficQosMarkingPolicyId(v string) *DeleteTransitRouterTrafficQosMarkingPolicyInput {
	s.TransitRouterTrafficQosMarkingPolicyId = &v
	return s
}

type DeleteTransitRouterTrafficQosMarkingPolicyOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteTransitRouterTrafficQosMarkingPolicyOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterTrafficQosMarkingPolicyOutput) GoString() string {
	return s.String()
}
