// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateTransitRouterTrafficQosQueuePolicyCommon = "CreateTransitRouterTrafficQosQueuePolicy"

// CreateTransitRouterTrafficQosQueuePolicyCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterTrafficQosQueuePolicyCommon operation. The "output" return
// value will be populated with the CreateTransitRouterTrafficQosQueuePolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterTrafficQosQueuePolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterTrafficQosQueuePolicyCommon Send returns without error.
//
// See CreateTransitRouterTrafficQosQueuePolicyCommon for more information on using the CreateTransitRouterTrafficQosQueuePolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterTrafficQosQueuePolicyCommonRequest method.
//    req, resp := client.CreateTransitRouterTrafficQosQueuePolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueuePolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTransitRouterTrafficQosQueuePolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterTrafficQosQueuePolicyCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterTrafficQosQueuePolicyCommon for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueuePolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterTrafficQosQueuePolicyCommonRequest(input)
	return out, req.Send()
}

// CreateTransitRouterTrafficQosQueuePolicyCommonWithContext is the same as CreateTransitRouterTrafficQosQueuePolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterTrafficQosQueuePolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueuePolicyCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterTrafficQosQueuePolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTransitRouterTrafficQosQueuePolicy = "CreateTransitRouterTrafficQosQueuePolicy"

// CreateTransitRouterTrafficQosQueuePolicyRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateTransitRouterTrafficQosQueuePolicy operation. The "output" return
// value will be populated with the CreateTransitRouterTrafficQosQueuePolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterTrafficQosQueuePolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterTrafficQosQueuePolicyCommon Send returns without error.
//
// See CreateTransitRouterTrafficQosQueuePolicy for more information on using the CreateTransitRouterTrafficQosQueuePolicy
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterTrafficQosQueuePolicyRequest method.
//    req, resp := client.CreateTransitRouterTrafficQosQueuePolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueuePolicyRequest(input *CreateTransitRouterTrafficQosQueuePolicyInput) (req *request.Request, output *CreateTransitRouterTrafficQosQueuePolicyOutput) {
	op := &request.Operation{
		Name:       opCreateTransitRouterTrafficQosQueuePolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTransitRouterTrafficQosQueuePolicyInput{}
	}

	output = &CreateTransitRouterTrafficQosQueuePolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterTrafficQosQueuePolicy API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterTrafficQosQueuePolicy for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueuePolicy(input *CreateTransitRouterTrafficQosQueuePolicyInput) (*CreateTransitRouterTrafficQosQueuePolicyOutput, error) {
	req, out := c.CreateTransitRouterTrafficQosQueuePolicyRequest(input)
	return out, req.Send()
}

// CreateTransitRouterTrafficQosQueuePolicyWithContext is the same as CreateTransitRouterTrafficQosQueuePolicy with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterTrafficQosQueuePolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterTrafficQosQueuePolicyWithContext(ctx byteplus.Context, input *CreateTransitRouterTrafficQosQueuePolicyInput, opts ...request.Option) (*CreateTransitRouterTrafficQosQueuePolicyOutput, error) {
	req, out := c.CreateTransitRouterTrafficQosQueuePolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTransitRouterTrafficQosQueuePolicyInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`

	TransitRouterTrafficQosQueuePolicyName *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterTrafficQosQueuePolicyInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterTrafficQosQueuePolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTransitRouterTrafficQosQueuePolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTransitRouterTrafficQosQueuePolicyInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateTransitRouterTrafficQosQueuePolicyInput) SetClientToken(v string) *CreateTransitRouterTrafficQosQueuePolicyInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateTransitRouterTrafficQosQueuePolicyInput) SetDescription(v string) *CreateTransitRouterTrafficQosQueuePolicyInput {
	s.Description = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *CreateTransitRouterTrafficQosQueuePolicyInput) SetTransitRouterId(v string) *CreateTransitRouterTrafficQosQueuePolicyInput {
	s.TransitRouterId = &v
	return s
}

// SetTransitRouterTrafficQosQueuePolicyName sets the TransitRouterTrafficQosQueuePolicyName field's value.
func (s *CreateTransitRouterTrafficQosQueuePolicyInput) SetTransitRouterTrafficQosQueuePolicyName(v string) *CreateTransitRouterTrafficQosQueuePolicyInput {
	s.TransitRouterTrafficQosQueuePolicyName = &v
	return s
}

type CreateTransitRouterTrafficQosQueuePolicyOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	TransitRouterTrafficQosQueuePolicyId *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterTrafficQosQueuePolicyOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterTrafficQosQueuePolicyOutput) GoString() string {
	return s.String()
}

// SetTransitRouterTrafficQosQueuePolicyId sets the TransitRouterTrafficQosQueuePolicyId field's value.
func (s *CreateTransitRouterTrafficQosQueuePolicyOutput) SetTransitRouterTrafficQosQueuePolicyId(v string) *CreateTransitRouterTrafficQosQueuePolicyOutput {
	s.TransitRouterTrafficQosQueuePolicyId = &v
	return s
}
