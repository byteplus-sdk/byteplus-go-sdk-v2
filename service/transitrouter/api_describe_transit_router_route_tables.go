// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeTransitRouterRouteTablesCommon = "DescribeTransitRouterRouteTables"

// DescribeTransitRouterRouteTablesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeTransitRouterRouteTablesCommon operation. The "output" return
// value will be populated with the DescribeTransitRouterRouteTablesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterRouteTablesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterRouteTablesCommon Send returns without error.
//
// See DescribeTransitRouterRouteTablesCommon for more information on using the DescribeTransitRouterRouteTablesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterRouteTablesCommonRequest method.
//    req, resp := client.DescribeTransitRouterRouteTablesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterRouteTablesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterRouteTablesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterRouteTablesCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterRouteTablesCommon for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterRouteTablesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterRouteTablesCommonRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterRouteTablesCommonWithContext is the same as DescribeTransitRouterRouteTablesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterRouteTablesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterRouteTablesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterRouteTablesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTransitRouterRouteTables = "DescribeTransitRouterRouteTables"

// DescribeTransitRouterRouteTablesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeTransitRouterRouteTables operation. The "output" return
// value will be populated with the DescribeTransitRouterRouteTablesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterRouteTablesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterRouteTablesCommon Send returns without error.
//
// See DescribeTransitRouterRouteTables for more information on using the DescribeTransitRouterRouteTables
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterRouteTablesRequest method.
//    req, resp := client.DescribeTransitRouterRouteTablesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterRouteTablesRequest(input *DescribeTransitRouterRouteTablesInput) (req *request.Request, output *DescribeTransitRouterRouteTablesOutput) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterRouteTables,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTransitRouterRouteTablesInput{}
	}

	output = &DescribeTransitRouterRouteTablesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterRouteTables API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterRouteTables for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterRouteTables(input *DescribeTransitRouterRouteTablesInput) (*DescribeTransitRouterRouteTablesOutput, error) {
	req, out := c.DescribeTransitRouterRouteTablesRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterRouteTablesWithContext is the same as DescribeTransitRouterRouteTables with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterRouteTables for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterRouteTablesWithContext(ctx byteplus.Context, input *DescribeTransitRouterRouteTablesInput, opts ...request.Option) (*DescribeTransitRouterRouteTablesOutput, error) {
	req, out := c.DescribeTransitRouterRouteTablesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTransitRouterRouteTablesInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TagFilters []*TagFilterForDescribeTransitRouterRouteTablesInput `type:"list"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`

	TransitRouterRouteTableIds []*string `type:"list"`

	TransitRouterRouteTableType *string `type:"string"`
}

// String returns the string representation
func (s DescribeTransitRouterRouteTablesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterRouteTablesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTransitRouterRouteTablesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTransitRouterRouteTablesInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterRouteTablesInput) SetPageNumber(v int32) *DescribeTransitRouterRouteTablesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterRouteTablesInput) SetPageSize(v int32) *DescribeTransitRouterRouteTablesInput {
	s.PageSize = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeTransitRouterRouteTablesInput) SetTagFilters(v []*TagFilterForDescribeTransitRouterRouteTablesInput) *DescribeTransitRouterRouteTablesInput {
	s.TagFilters = v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *DescribeTransitRouterRouteTablesInput) SetTransitRouterId(v string) *DescribeTransitRouterRouteTablesInput {
	s.TransitRouterId = &v
	return s
}

// SetTransitRouterRouteTableIds sets the TransitRouterRouteTableIds field's value.
func (s *DescribeTransitRouterRouteTablesInput) SetTransitRouterRouteTableIds(v []*string) *DescribeTransitRouterRouteTablesInput {
	s.TransitRouterRouteTableIds = v
	return s
}

// SetTransitRouterRouteTableType sets the TransitRouterRouteTableType field's value.
func (s *DescribeTransitRouterRouteTablesInput) SetTransitRouterRouteTableType(v string) *DescribeTransitRouterRouteTablesInput {
	s.TransitRouterRouteTableType = &v
	return s
}

type DescribeTransitRouterRouteTablesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	TransitRouterRouteTables []*TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTransitRouterRouteTablesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterRouteTablesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterRouteTablesOutput) SetPageNumber(v int32) *DescribeTransitRouterRouteTablesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterRouteTablesOutput) SetPageSize(v int32) *DescribeTransitRouterRouteTablesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTransitRouterRouteTablesOutput) SetTotalCount(v int32) *DescribeTransitRouterRouteTablesOutput {
	s.TotalCount = &v
	return s
}

// SetTransitRouterRouteTables sets the TransitRouterRouteTables field's value.
func (s *DescribeTransitRouterRouteTablesOutput) SetTransitRouterRouteTables(v []*TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) *DescribeTransitRouterRouteTablesOutput {
	s.TransitRouterRouteTables = v
	return s
}

type TagFilterForDescribeTransitRouterRouteTablesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeTransitRouterRouteTablesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeTransitRouterRouteTablesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeTransitRouterRouteTablesInput) SetKey(v string) *TagFilterForDescribeTransitRouterRouteTablesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeTransitRouterRouteTablesInput) SetValues(v []*string) *TagFilterForDescribeTransitRouterRouteTablesInput {
	s.Values = v
	return s
}

type TagForDescribeTransitRouterRouteTablesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeTransitRouterRouteTablesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeTransitRouterRouteTablesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeTransitRouterRouteTablesOutput) SetKey(v string) *TagForDescribeTransitRouterRouteTablesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeTransitRouterRouteTablesOutput) SetValue(v string) *TagForDescribeTransitRouterRouteTablesOutput {
	s.Value = &v
	return s
}

type TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	InRoutePolicyTableId *string `type:"string"`

	OutRoutePolicyTableId *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDescribeTransitRouterRouteTablesOutput `type:"list"`

	TransitRouterRouteTableId *string `type:"string"`

	TransitRouterRouteTableName *string `type:"string"`

	TransitRouterRouteTableType *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetCreationTime(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetDescription(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.Description = &v
	return s
}

// SetInRoutePolicyTableId sets the InRoutePolicyTableId field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetInRoutePolicyTableId(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.InRoutePolicyTableId = &v
	return s
}

// SetOutRoutePolicyTableId sets the OutRoutePolicyTableId field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetOutRoutePolicyTableId(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.OutRoutePolicyTableId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetStatus(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetTags(v []*TagForDescribeTransitRouterRouteTablesOutput) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.Tags = v
	return s
}

// SetTransitRouterRouteTableId sets the TransitRouterRouteTableId field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetTransitRouterRouteTableId(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.TransitRouterRouteTableId = &v
	return s
}

// SetTransitRouterRouteTableName sets the TransitRouterRouteTableName field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetTransitRouterRouteTableName(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.TransitRouterRouteTableName = &v
	return s
}

// SetTransitRouterRouteTableType sets the TransitRouterRouteTableType field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetTransitRouterRouteTableType(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.TransitRouterRouteTableType = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput) SetUpdateTime(v string) *TransitRouterRouteTableForDescribeTransitRouterRouteTablesOutput {
	s.UpdateTime = &v
	return s
}
