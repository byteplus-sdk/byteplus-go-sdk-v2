// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeTransitRouterTrafficQosMarkingPoliciesCommon = "DescribeTransitRouterTrafficQosMarkingPolicies"

// DescribeTransitRouterTrafficQosMarkingPoliciesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeTransitRouterTrafficQosMarkingPoliciesCommon operation. The "output" return
// value will be populated with the DescribeTransitRouterTrafficQosMarkingPoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterTrafficQosMarkingPoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterTrafficQosMarkingPoliciesCommon Send returns without error.
//
// See DescribeTransitRouterTrafficQosMarkingPoliciesCommon for more information on using the DescribeTransitRouterTrafficQosMarkingPoliciesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterTrafficQosMarkingPoliciesCommonRequest method.
//    req, resp := client.DescribeTransitRouterTrafficQosMarkingPoliciesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterTrafficQosMarkingPoliciesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterTrafficQosMarkingPoliciesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterTrafficQosMarkingPoliciesCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterTrafficQosMarkingPoliciesCommon for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterTrafficQosMarkingPoliciesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterTrafficQosMarkingPoliciesCommonRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterTrafficQosMarkingPoliciesCommonWithContext is the same as DescribeTransitRouterTrafficQosMarkingPoliciesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterTrafficQosMarkingPoliciesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterTrafficQosMarkingPoliciesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterTrafficQosMarkingPoliciesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTransitRouterTrafficQosMarkingPolicies = "DescribeTransitRouterTrafficQosMarkingPolicies"

// DescribeTransitRouterTrafficQosMarkingPoliciesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeTransitRouterTrafficQosMarkingPolicies operation. The "output" return
// value will be populated with the DescribeTransitRouterTrafficQosMarkingPoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterTrafficQosMarkingPoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterTrafficQosMarkingPoliciesCommon Send returns without error.
//
// See DescribeTransitRouterTrafficQosMarkingPolicies for more information on using the DescribeTransitRouterTrafficQosMarkingPolicies
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterTrafficQosMarkingPoliciesRequest method.
//    req, resp := client.DescribeTransitRouterTrafficQosMarkingPoliciesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterTrafficQosMarkingPoliciesRequest(input *DescribeTransitRouterTrafficQosMarkingPoliciesInput) (req *request.Request, output *DescribeTransitRouterTrafficQosMarkingPoliciesOutput) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterTrafficQosMarkingPolicies,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTransitRouterTrafficQosMarkingPoliciesInput{}
	}

	output = &DescribeTransitRouterTrafficQosMarkingPoliciesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterTrafficQosMarkingPolicies API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterTrafficQosMarkingPolicies for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterTrafficQosMarkingPolicies(input *DescribeTransitRouterTrafficQosMarkingPoliciesInput) (*DescribeTransitRouterTrafficQosMarkingPoliciesOutput, error) {
	req, out := c.DescribeTransitRouterTrafficQosMarkingPoliciesRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterTrafficQosMarkingPoliciesWithContext is the same as DescribeTransitRouterTrafficQosMarkingPolicies with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterTrafficQosMarkingPolicies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterTrafficQosMarkingPoliciesWithContext(ctx byteplus.Context, input *DescribeTransitRouterTrafficQosMarkingPoliciesInput, opts ...request.Option) (*DescribeTransitRouterTrafficQosMarkingPoliciesOutput, error) {
	req, out := c.DescribeTransitRouterTrafficQosMarkingPoliciesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTransitRouterTrafficQosMarkingPoliciesInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`

	TransitRouterTrafficQosMarkingPolicyIds []*string `type:"list"`

	TransitRouterTrafficQosMarkingPolicyName *string `type:"string"`
}

// String returns the string representation
func (s DescribeTransitRouterTrafficQosMarkingPoliciesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterTrafficQosMarkingPoliciesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTransitRouterTrafficQosMarkingPoliciesInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesInput) SetPageNumber(v int32) *DescribeTransitRouterTrafficQosMarkingPoliciesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesInput) SetPageSize(v int32) *DescribeTransitRouterTrafficQosMarkingPoliciesInput {
	s.PageSize = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesInput) SetTransitRouterId(v string) *DescribeTransitRouterTrafficQosMarkingPoliciesInput {
	s.TransitRouterId = &v
	return s
}

// SetTransitRouterTrafficQosMarkingPolicyIds sets the TransitRouterTrafficQosMarkingPolicyIds field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesInput) SetTransitRouterTrafficQosMarkingPolicyIds(v []*string) *DescribeTransitRouterTrafficQosMarkingPoliciesInput {
	s.TransitRouterTrafficQosMarkingPolicyIds = v
	return s
}

// SetTransitRouterTrafficQosMarkingPolicyName sets the TransitRouterTrafficQosMarkingPolicyName field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesInput) SetTransitRouterTrafficQosMarkingPolicyName(v string) *DescribeTransitRouterTrafficQosMarkingPoliciesInput {
	s.TransitRouterTrafficQosMarkingPolicyName = &v
	return s
}

type DescribeTransitRouterTrafficQosMarkingPoliciesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	TransitRouterTrafficQosMarkingPolicies []*TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTransitRouterTrafficQosMarkingPoliciesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterTrafficQosMarkingPoliciesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetPageNumber(v int32) *DescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetPageSize(v int32) *DescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetTotalCount(v int32) *DescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.TotalCount = &v
	return s
}

// SetTransitRouterTrafficQosMarkingPolicies sets the TransitRouterTrafficQosMarkingPolicies field's value.
func (s *DescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetTransitRouterTrafficQosMarkingPolicies(v []*TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) *DescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.TransitRouterTrafficQosMarkingPolicies = v
	return s
}

type TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	Status *string `type:"string"`

	TransitRouterTrafficQosMarkingPolicyId *string `type:"string"`

	TransitRouterTrafficQosMarkingPolicyName *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetCreationTime(v string) *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetDescription(v string) *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.Description = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetStatus(v string) *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.Status = &v
	return s
}

// SetTransitRouterTrafficQosMarkingPolicyId sets the TransitRouterTrafficQosMarkingPolicyId field's value.
func (s *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetTransitRouterTrafficQosMarkingPolicyId(v string) *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.TransitRouterTrafficQosMarkingPolicyId = &v
	return s
}

// SetTransitRouterTrafficQosMarkingPolicyName sets the TransitRouterTrafficQosMarkingPolicyName field's value.
func (s *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetTransitRouterTrafficQosMarkingPolicyName(v string) *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.TransitRouterTrafficQosMarkingPolicyName = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput) SetUpdateTime(v string) *TransitRouterTrafficQosMarkingPolicyForDescribeTransitRouterTrafficQosMarkingPoliciesOutput {
	s.UpdateTime = &v
	return s
}
