// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDeleteTransitRouterForwardPolicyTableCommon = "DeleteTransitRouterForwardPolicyTable"

// DeleteTransitRouterForwardPolicyTableCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteTransitRouterForwardPolicyTableCommon operation. The "output" return
// value will be populated with the DeleteTransitRouterForwardPolicyTableCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterForwardPolicyTableCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterForwardPolicyTableCommon Send returns without error.
//
// See DeleteTransitRouterForwardPolicyTableCommon for more information on using the DeleteTransitRouterForwardPolicyTableCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterForwardPolicyTableCommonRequest method.
//    req, resp := client.DeleteTransitRouterForwardPolicyTableCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterForwardPolicyTableCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterForwardPolicyTableCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterForwardPolicyTableCommon API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterForwardPolicyTableCommon for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterForwardPolicyTableCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterForwardPolicyTableCommonRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterForwardPolicyTableCommonWithContext is the same as DeleteTransitRouterForwardPolicyTableCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterForwardPolicyTableCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterForwardPolicyTableCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterForwardPolicyTableCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTransitRouterForwardPolicyTable = "DeleteTransitRouterForwardPolicyTable"

// DeleteTransitRouterForwardPolicyTableRequest generates a "byteplus/request.Request" representing the
// client's request for the DeleteTransitRouterForwardPolicyTable operation. The "output" return
// value will be populated with the DeleteTransitRouterForwardPolicyTableCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterForwardPolicyTableCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterForwardPolicyTableCommon Send returns without error.
//
// See DeleteTransitRouterForwardPolicyTable for more information on using the DeleteTransitRouterForwardPolicyTable
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterForwardPolicyTableRequest method.
//    req, resp := client.DeleteTransitRouterForwardPolicyTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterForwardPolicyTableRequest(input *DeleteTransitRouterForwardPolicyTableInput) (req *request.Request, output *DeleteTransitRouterForwardPolicyTableOutput) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterForwardPolicyTable,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTransitRouterForwardPolicyTableInput{}
	}

	output = &DeleteTransitRouterForwardPolicyTableOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterForwardPolicyTable API operation for TRANSITROUTER.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterForwardPolicyTable for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterForwardPolicyTable(input *DeleteTransitRouterForwardPolicyTableInput) (*DeleteTransitRouterForwardPolicyTableOutput, error) {
	req, out := c.DeleteTransitRouterForwardPolicyTableRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterForwardPolicyTableWithContext is the same as DeleteTransitRouterForwardPolicyTable with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterForwardPolicyTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterForwardPolicyTableWithContext(ctx byteplus.Context, input *DeleteTransitRouterForwardPolicyTableInput, opts ...request.Option) (*DeleteTransitRouterForwardPolicyTableOutput, error) {
	req, out := c.DeleteTransitRouterForwardPolicyTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTransitRouterForwardPolicyTableInput struct {
	_ struct{} `type:"structure"`

	// TransitRouterForwardPolicyTableId is a required field
	TransitRouterForwardPolicyTableId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteTransitRouterForwardPolicyTableInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterForwardPolicyTableInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteTransitRouterForwardPolicyTableInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteTransitRouterForwardPolicyTableInput"}
	if s.TransitRouterForwardPolicyTableId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterForwardPolicyTableId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTransitRouterForwardPolicyTableId sets the TransitRouterForwardPolicyTableId field's value.
func (s *DeleteTransitRouterForwardPolicyTableInput) SetTransitRouterForwardPolicyTableId(v string) *DeleteTransitRouterForwardPolicyTableInput {
	s.TransitRouterForwardPolicyTableId = &v
	return s
}

type DeleteTransitRouterForwardPolicyTableOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteTransitRouterForwardPolicyTableOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterForwardPolicyTableOutput) GoString() string {
	return s.String()
}
