// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeDirectConnectConnectionLoaAttributesCommon = "DescribeDirectConnectConnectionLoaAttributes"

// DescribeDirectConnectConnectionLoaAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDirectConnectConnectionLoaAttributesCommon operation. The "output" return
// value will be populated with the DescribeDirectConnectConnectionLoaAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDirectConnectConnectionLoaAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDirectConnectConnectionLoaAttributesCommon Send returns without error.
//
// See DescribeDirectConnectConnectionLoaAttributesCommon for more information on using the DescribeDirectConnectConnectionLoaAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDirectConnectConnectionLoaAttributesCommonRequest method.
//    req, resp := client.DescribeDirectConnectConnectionLoaAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeDirectConnectConnectionLoaAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDirectConnectConnectionLoaAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDirectConnectConnectionLoaAttributesCommon API operation for DIRECTCONNECT.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for DIRECTCONNECT's
// API operation DescribeDirectConnectConnectionLoaAttributesCommon for usage and error information.
func (c *DIRECTCONNECT) DescribeDirectConnectConnectionLoaAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDirectConnectConnectionLoaAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeDirectConnectConnectionLoaAttributesCommonWithContext is the same as DescribeDirectConnectConnectionLoaAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDirectConnectConnectionLoaAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeDirectConnectConnectionLoaAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDirectConnectConnectionLoaAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDirectConnectConnectionLoaAttributes = "DescribeDirectConnectConnectionLoaAttributes"

// DescribeDirectConnectConnectionLoaAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeDirectConnectConnectionLoaAttributes operation. The "output" return
// value will be populated with the DescribeDirectConnectConnectionLoaAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDirectConnectConnectionLoaAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDirectConnectConnectionLoaAttributesCommon Send returns without error.
//
// See DescribeDirectConnectConnectionLoaAttributes for more information on using the DescribeDirectConnectConnectionLoaAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeDirectConnectConnectionLoaAttributesRequest method.
//    req, resp := client.DescribeDirectConnectConnectionLoaAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeDirectConnectConnectionLoaAttributesRequest(input *DescribeDirectConnectConnectionLoaAttributesInput) (req *request.Request, output *DescribeDirectConnectConnectionLoaAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeDirectConnectConnectionLoaAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDirectConnectConnectionLoaAttributesInput{}
	}

	output = &DescribeDirectConnectConnectionLoaAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDirectConnectConnectionLoaAttributes API operation for DIRECTCONNECT.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for DIRECTCONNECT's
// API operation DescribeDirectConnectConnectionLoaAttributes for usage and error information.
func (c *DIRECTCONNECT) DescribeDirectConnectConnectionLoaAttributes(input *DescribeDirectConnectConnectionLoaAttributesInput) (*DescribeDirectConnectConnectionLoaAttributesOutput, error) {
	req, out := c.DescribeDirectConnectConnectionLoaAttributesRequest(input)
	return out, req.Send()
}

// DescribeDirectConnectConnectionLoaAttributesWithContext is the same as DescribeDirectConnectConnectionLoaAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDirectConnectConnectionLoaAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeDirectConnectConnectionLoaAttributesWithContext(ctx byteplus.Context, input *DescribeDirectConnectConnectionLoaAttributesInput, opts ...request.Option) (*DescribeDirectConnectConnectionLoaAttributesOutput, error) {
	req, out := c.DescribeDirectConnectConnectionLoaAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDirectConnectConnectionLoaAttributesInput struct {
	_ struct{} `type:"structure"`

	// Action is a required field
	Action *string `type:"string" required:"true"`

	// DirectConnectConnectionId is a required field
	DirectConnectConnectionId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeDirectConnectConnectionLoaAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDirectConnectConnectionLoaAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDirectConnectConnectionLoaAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDirectConnectConnectionLoaAttributesInput"}
	if s.Action == nil {
		invalidParams.Add(request.NewErrParamRequired("Action"))
	}
	if s.DirectConnectConnectionId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectConnectionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesInput) SetAction(v string) *DescribeDirectConnectConnectionLoaAttributesInput {
	s.Action = &v
	return s
}

// SetDirectConnectConnectionId sets the DirectConnectConnectionId field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesInput) SetDirectConnectConnectionId(v string) *DescribeDirectConnectConnectionLoaAttributesInput {
	s.DirectConnectConnectionId = &v
	return s
}

type DescribeDirectConnectConnectionLoaAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Bandwidth *int64 `type:"integer"`

	CompanyName *string `type:"string"`

	ConstructionTime *string `type:"string"`

	DirectConnectConnectionId *string `type:"string"`

	Engineers []*EngineerForDescribeDirectConnectConnectionLoaAttributesOutput `type:"list"`

	LineType *string `type:"string"`

	LoaContent *string `type:"string"`

	LoaContentType *string `type:"string"`

	PeerLocation *string `type:"string"`

	RequestId *string `type:"string"`

	SystemIntegrator *string `type:"string"`
}

// String returns the string representation
func (s DescribeDirectConnectConnectionLoaAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDirectConnectConnectionLoaAttributesOutput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetBandwidth(v int64) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.Bandwidth = &v
	return s
}

// SetCompanyName sets the CompanyName field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetCompanyName(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.CompanyName = &v
	return s
}

// SetConstructionTime sets the ConstructionTime field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetConstructionTime(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.ConstructionTime = &v
	return s
}

// SetDirectConnectConnectionId sets the DirectConnectConnectionId field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetDirectConnectConnectionId(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.DirectConnectConnectionId = &v
	return s
}

// SetEngineers sets the Engineers field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetEngineers(v []*EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.Engineers = v
	return s
}

// SetLineType sets the LineType field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetLineType(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.LineType = &v
	return s
}

// SetLoaContent sets the LoaContent field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetLoaContent(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.LoaContent = &v
	return s
}

// SetLoaContentType sets the LoaContentType field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetLoaContentType(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.LoaContentType = &v
	return s
}

// SetPeerLocation sets the PeerLocation field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetPeerLocation(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.PeerLocation = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetRequestId(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.RequestId = &v
	return s
}

// SetSystemIntegrator sets the SystemIntegrator field's value.
func (s *DescribeDirectConnectConnectionLoaAttributesOutput) SetSystemIntegrator(v string) *DescribeDirectConnectConnectionLoaAttributesOutput {
	s.SystemIntegrator = &v
	return s
}

type EngineerForDescribeDirectConnectConnectionLoaAttributesOutput struct {
	_ struct{} `type:"structure"`

	CertificateNo *string `type:"string"`

	CertificateType *string `type:"string"`

	ContactPhone *string `type:"string"`

	Gender *string `type:"string"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) GoString() string {
	return s.String()
}

// SetCertificateNo sets the CertificateNo field's value.
func (s *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) SetCertificateNo(v string) *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {
	s.CertificateNo = &v
	return s
}

// SetCertificateType sets the CertificateType field's value.
func (s *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) SetCertificateType(v string) *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {
	s.CertificateType = &v
	return s
}

// SetContactPhone sets the ContactPhone field's value.
func (s *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) SetContactPhone(v string) *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {
	s.ContactPhone = &v
	return s
}

// SetGender sets the Gender field's value.
func (s *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) SetGender(v string) *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {
	s.Gender = &v
	return s
}

// SetName sets the Name field's value.
func (s *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) SetName(v string) *EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {
	s.Name = &v
	return s
}
