// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateKafkaTriggerCommon = "CreateKafkaTrigger"

// CreateKafkaTriggerCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateKafkaTriggerCommon operation. The "output" return
// value will be populated with the CreateKafkaTriggerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateKafkaTriggerCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateKafkaTriggerCommon Send returns without error.
//
// See CreateKafkaTriggerCommon for more information on using the CreateKafkaTriggerCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateKafkaTriggerCommonRequest method.
//    req, resp := client.CreateKafkaTriggerCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) CreateKafkaTriggerCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateKafkaTriggerCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateKafkaTriggerCommon API operation for VEFAAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VEFAAS's
// API operation CreateKafkaTriggerCommon for usage and error information.
func (c *VEFAAS) CreateKafkaTriggerCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateKafkaTriggerCommonRequest(input)
	return out, req.Send()
}

// CreateKafkaTriggerCommonWithContext is the same as CreateKafkaTriggerCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateKafkaTriggerCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) CreateKafkaTriggerCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateKafkaTriggerCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateKafkaTrigger = "CreateKafkaTrigger"

// CreateKafkaTriggerRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateKafkaTrigger operation. The "output" return
// value will be populated with the CreateKafkaTriggerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateKafkaTriggerCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateKafkaTriggerCommon Send returns without error.
//
// See CreateKafkaTrigger for more information on using the CreateKafkaTrigger
// API call, and error handling.
//
//    // Example sending a request using the CreateKafkaTriggerRequest method.
//    req, resp := client.CreateKafkaTriggerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) CreateKafkaTriggerRequest(input *CreateKafkaTriggerInput) (req *request.Request, output *CreateKafkaTriggerOutput) {
	op := &request.Operation{
		Name:       opCreateKafkaTrigger,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateKafkaTriggerInput{}
	}

	output = &CreateKafkaTriggerOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateKafkaTrigger API operation for VEFAAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VEFAAS's
// API operation CreateKafkaTrigger for usage and error information.
func (c *VEFAAS) CreateKafkaTrigger(input *CreateKafkaTriggerInput) (*CreateKafkaTriggerOutput, error) {
	req, out := c.CreateKafkaTriggerRequest(input)
	return out, req.Send()
}

// CreateKafkaTriggerWithContext is the same as CreateKafkaTrigger with the addition of
// the ability to pass a context and additional request options.
//
// See CreateKafkaTrigger for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) CreateKafkaTriggerWithContext(ctx byteplus.Context, input *CreateKafkaTriggerInput, opts ...request.Option) (*CreateKafkaTriggerOutput, error) {
	req, out := c.CreateKafkaTriggerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateKafkaTriggerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BatchFlushDurationMilliseconds *int32 `type:"int32" json:",omitempty"`

	BatchSize *int32 `type:"int32" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`

	KafkaCredentials *KafkaCredentialsForCreateKafkaTriggerInput `type:"structure" json:",omitempty"`

	MaximumRetryAttempts *int32 `type:"int32" json:",omitempty"`

	// MqInstanceId is a required field
	MqInstanceId *string `type:"string" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	StartingPosition *string `type:"string" json:",omitempty"`

	// TopicName is a required field
	TopicName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateKafkaTriggerInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateKafkaTriggerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateKafkaTriggerInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateKafkaTriggerInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}
	if s.MqInstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("MqInstanceId"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.TopicName == nil {
		invalidParams.Add(request.NewErrParamRequired("TopicName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBatchFlushDurationMilliseconds sets the BatchFlushDurationMilliseconds field's value.
func (s *CreateKafkaTriggerInput) SetBatchFlushDurationMilliseconds(v int32) *CreateKafkaTriggerInput {
	s.BatchFlushDurationMilliseconds = &v
	return s
}

// SetBatchSize sets the BatchSize field's value.
func (s *CreateKafkaTriggerInput) SetBatchSize(v int32) *CreateKafkaTriggerInput {
	s.BatchSize = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateKafkaTriggerInput) SetDescription(v string) *CreateKafkaTriggerInput {
	s.Description = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *CreateKafkaTriggerInput) SetEnabled(v bool) *CreateKafkaTriggerInput {
	s.Enabled = &v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *CreateKafkaTriggerInput) SetFunctionId(v string) *CreateKafkaTriggerInput {
	s.FunctionId = &v
	return s
}

// SetKafkaCredentials sets the KafkaCredentials field's value.
func (s *CreateKafkaTriggerInput) SetKafkaCredentials(v *KafkaCredentialsForCreateKafkaTriggerInput) *CreateKafkaTriggerInput {
	s.KafkaCredentials = v
	return s
}

// SetMaximumRetryAttempts sets the MaximumRetryAttempts field's value.
func (s *CreateKafkaTriggerInput) SetMaximumRetryAttempts(v int32) *CreateKafkaTriggerInput {
	s.MaximumRetryAttempts = &v
	return s
}

// SetMqInstanceId sets the MqInstanceId field's value.
func (s *CreateKafkaTriggerInput) SetMqInstanceId(v string) *CreateKafkaTriggerInput {
	s.MqInstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateKafkaTriggerInput) SetName(v string) *CreateKafkaTriggerInput {
	s.Name = &v
	return s
}

// SetStartingPosition sets the StartingPosition field's value.
func (s *CreateKafkaTriggerInput) SetStartingPosition(v string) *CreateKafkaTriggerInput {
	s.StartingPosition = &v
	return s
}

// SetTopicName sets the TopicName field's value.
func (s *CreateKafkaTriggerInput) SetTopicName(v string) *CreateKafkaTriggerInput {
	s.TopicName = &v
	return s
}

type CreateKafkaTriggerOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BatchFlushDurationMilliseconds *int32 `type:"int32" json:",omitempty"`

	BatchSize *int32 `type:"int32" json:",omitempty"`

	ConsumerGroup *string `type:"string" json:",omitempty"`

	CreationTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	FunctionId *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	LastUpdateTime *string `type:"string" json:",omitempty"`

	MaximumRetryAttempts *int32 `type:"int32" json:",omitempty"`

	MqInstanceId *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	StartingPosition *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TopicName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateKafkaTriggerOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateKafkaTriggerOutput) GoString() string {
	return s.String()
}

// SetBatchFlushDurationMilliseconds sets the BatchFlushDurationMilliseconds field's value.
func (s *CreateKafkaTriggerOutput) SetBatchFlushDurationMilliseconds(v int32) *CreateKafkaTriggerOutput {
	s.BatchFlushDurationMilliseconds = &v
	return s
}

// SetBatchSize sets the BatchSize field's value.
func (s *CreateKafkaTriggerOutput) SetBatchSize(v int32) *CreateKafkaTriggerOutput {
	s.BatchSize = &v
	return s
}

// SetConsumerGroup sets the ConsumerGroup field's value.
func (s *CreateKafkaTriggerOutput) SetConsumerGroup(v string) *CreateKafkaTriggerOutput {
	s.ConsumerGroup = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *CreateKafkaTriggerOutput) SetCreationTime(v string) *CreateKafkaTriggerOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateKafkaTriggerOutput) SetDescription(v string) *CreateKafkaTriggerOutput {
	s.Description = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *CreateKafkaTriggerOutput) SetEnabled(v bool) *CreateKafkaTriggerOutput {
	s.Enabled = &v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *CreateKafkaTriggerOutput) SetFunctionId(v string) *CreateKafkaTriggerOutput {
	s.FunctionId = &v
	return s
}

// SetId sets the Id field's value.
func (s *CreateKafkaTriggerOutput) SetId(v string) *CreateKafkaTriggerOutput {
	s.Id = &v
	return s
}

// SetLastUpdateTime sets the LastUpdateTime field's value.
func (s *CreateKafkaTriggerOutput) SetLastUpdateTime(v string) *CreateKafkaTriggerOutput {
	s.LastUpdateTime = &v
	return s
}

// SetMaximumRetryAttempts sets the MaximumRetryAttempts field's value.
func (s *CreateKafkaTriggerOutput) SetMaximumRetryAttempts(v int32) *CreateKafkaTriggerOutput {
	s.MaximumRetryAttempts = &v
	return s
}

// SetMqInstanceId sets the MqInstanceId field's value.
func (s *CreateKafkaTriggerOutput) SetMqInstanceId(v string) *CreateKafkaTriggerOutput {
	s.MqInstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateKafkaTriggerOutput) SetName(v string) *CreateKafkaTriggerOutput {
	s.Name = &v
	return s
}

// SetStartingPosition sets the StartingPosition field's value.
func (s *CreateKafkaTriggerOutput) SetStartingPosition(v string) *CreateKafkaTriggerOutput {
	s.StartingPosition = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CreateKafkaTriggerOutput) SetStatus(v string) *CreateKafkaTriggerOutput {
	s.Status = &v
	return s
}

// SetTopicName sets the TopicName field's value.
func (s *CreateKafkaTriggerOutput) SetTopicName(v string) *CreateKafkaTriggerOutput {
	s.TopicName = &v
	return s
}

type KafkaCredentialsForCreateKafkaTriggerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Mechanism *string `type:"string" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s KafkaCredentialsForCreateKafkaTriggerInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s KafkaCredentialsForCreateKafkaTriggerInput) GoString() string {
	return s.String()
}

// SetMechanism sets the Mechanism field's value.
func (s *KafkaCredentialsForCreateKafkaTriggerInput) SetMechanism(v string) *KafkaCredentialsForCreateKafkaTriggerInput {
	s.Mechanism = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *KafkaCredentialsForCreateKafkaTriggerInput) SetPassword(v string) *KafkaCredentialsForCreateKafkaTriggerInput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *KafkaCredentialsForCreateKafkaTriggerInput) SetUsername(v string) *KafkaCredentialsForCreateKafkaTriggerInput {
	s.Username = &v
	return s
}
