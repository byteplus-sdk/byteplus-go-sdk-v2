// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opUpdateFunctionMetricScaleStrategyRulesCommon = "UpdateFunctionMetricScaleStrategyRules"

// UpdateFunctionMetricScaleStrategyRulesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the UpdateFunctionMetricScaleStrategyRulesCommon operation. The "output" return
// value will be populated with the UpdateFunctionMetricScaleStrategyRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateFunctionMetricScaleStrategyRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateFunctionMetricScaleStrategyRulesCommon Send returns without error.
//
// See UpdateFunctionMetricScaleStrategyRulesCommon for more information on using the UpdateFunctionMetricScaleStrategyRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateFunctionMetricScaleStrategyRulesCommonRequest method.
//    req, resp := client.UpdateFunctionMetricScaleStrategyRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) UpdateFunctionMetricScaleStrategyRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateFunctionMetricScaleStrategyRulesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateFunctionMetricScaleStrategyRulesCommon API operation for VEFAAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VEFAAS's
// API operation UpdateFunctionMetricScaleStrategyRulesCommon for usage and error information.
func (c *VEFAAS) UpdateFunctionMetricScaleStrategyRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateFunctionMetricScaleStrategyRulesCommonRequest(input)
	return out, req.Send()
}

// UpdateFunctionMetricScaleStrategyRulesCommonWithContext is the same as UpdateFunctionMetricScaleStrategyRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateFunctionMetricScaleStrategyRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) UpdateFunctionMetricScaleStrategyRulesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateFunctionMetricScaleStrategyRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateFunctionMetricScaleStrategyRules = "UpdateFunctionMetricScaleStrategyRules"

// UpdateFunctionMetricScaleStrategyRulesRequest generates a "byteplus/request.Request" representing the
// client's request for the UpdateFunctionMetricScaleStrategyRules operation. The "output" return
// value will be populated with the UpdateFunctionMetricScaleStrategyRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateFunctionMetricScaleStrategyRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateFunctionMetricScaleStrategyRulesCommon Send returns without error.
//
// See UpdateFunctionMetricScaleStrategyRules for more information on using the UpdateFunctionMetricScaleStrategyRules
// API call, and error handling.
//
//    // Example sending a request using the UpdateFunctionMetricScaleStrategyRulesRequest method.
//    req, resp := client.UpdateFunctionMetricScaleStrategyRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) UpdateFunctionMetricScaleStrategyRulesRequest(input *UpdateFunctionMetricScaleStrategyRulesInput) (req *request.Request, output *UpdateFunctionMetricScaleStrategyRulesOutput) {
	op := &request.Operation{
		Name:       opUpdateFunctionMetricScaleStrategyRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateFunctionMetricScaleStrategyRulesInput{}
	}

	output = &UpdateFunctionMetricScaleStrategyRulesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateFunctionMetricScaleStrategyRules API operation for VEFAAS.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VEFAAS's
// API operation UpdateFunctionMetricScaleStrategyRules for usage and error information.
func (c *VEFAAS) UpdateFunctionMetricScaleStrategyRules(input *UpdateFunctionMetricScaleStrategyRulesInput) (*UpdateFunctionMetricScaleStrategyRulesOutput, error) {
	req, out := c.UpdateFunctionMetricScaleStrategyRulesRequest(input)
	return out, req.Send()
}

// UpdateFunctionMetricScaleStrategyRulesWithContext is the same as UpdateFunctionMetricScaleStrategyRules with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateFunctionMetricScaleStrategyRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) UpdateFunctionMetricScaleStrategyRulesWithContext(ctx byteplus.Context, input *UpdateFunctionMetricScaleStrategyRulesInput, opts ...request.Option) (*UpdateFunctionMetricScaleStrategyRulesOutput, error) {
	req, out := c.UpdateFunctionMetricScaleStrategyRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type RuleForUpdateFunctionMetricScaleStrategyRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MetricType *string `type:"string" json:",omitempty"`

	Target *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s RuleForUpdateFunctionMetricScaleStrategyRulesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForUpdateFunctionMetricScaleStrategyRulesInput) GoString() string {
	return s.String()
}

// SetMetricType sets the MetricType field's value.
func (s *RuleForUpdateFunctionMetricScaleStrategyRulesInput) SetMetricType(v string) *RuleForUpdateFunctionMetricScaleStrategyRulesInput {
	s.MetricType = &v
	return s
}

// SetTarget sets the Target field's value.
func (s *RuleForUpdateFunctionMetricScaleStrategyRulesInput) SetTarget(v int32) *RuleForUpdateFunctionMetricScaleStrategyRulesInput {
	s.Target = &v
	return s
}

type UpdateFunctionMetricScaleStrategyRulesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`

	Rules []*RuleForUpdateFunctionMetricScaleStrategyRulesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateFunctionMetricScaleStrategyRulesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateFunctionMetricScaleStrategyRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateFunctionMetricScaleStrategyRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateFunctionMetricScaleStrategyRulesInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *UpdateFunctionMetricScaleStrategyRulesInput) SetFunctionId(v string) *UpdateFunctionMetricScaleStrategyRulesInput {
	s.FunctionId = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *UpdateFunctionMetricScaleStrategyRulesInput) SetRules(v []*RuleForUpdateFunctionMetricScaleStrategyRulesInput) *UpdateFunctionMetricScaleStrategyRulesInput {
	s.Rules = v
	return s
}

type UpdateFunctionMetricScaleStrategyRulesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateFunctionMetricScaleStrategyRulesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateFunctionMetricScaleStrategyRulesOutput) GoString() string {
	return s.String()
}
