// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListResourcesCommon = "ListResources"

// ListResourcesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListResourcesCommon operation. The "output" return
// value will be populated with the ListResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcesCommon Send returns without error.
//
// See ListResourcesCommon for more information on using the ListResourcesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResourcesCommonRequest method.
//    req, resp := client.ListResourcesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) ListResourcesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResourcesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResourcesCommon API operation for CP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for CP's
// API operation ListResourcesCommon for usage and error information.
func (c *CP) ListResourcesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResourcesCommonRequest(input)
	return out, req.Send()
}

// ListResourcesCommonWithContext is the same as ListResourcesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourcesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) ListResourcesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResourcesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResources = "ListResources"

// ListResourcesRequest generates a "byteplus/request.Request" representing the
// client's request for the ListResources operation. The "output" return
// value will be populated with the ListResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcesCommon Send returns without error.
//
// See ListResources for more information on using the ListResources
// API call, and error handling.
//
//    // Example sending a request using the ListResourcesRequest method.
//    req, resp := client.ListResourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) ListResourcesRequest(input *ListResourcesInput) (req *request.Request, output *ListResourcesOutput) {
	op := &request.Operation{
		Name:       opListResources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourcesInput{}
	}

	output = &ListResourcesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResources API operation for CP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for CP's
// API operation ListResources for usage and error information.
func (c *CP) ListResources(input *ListResourcesInput) (*ListResourcesOutput, error) {
	req, out := c.ListResourcesRequest(input)
	return out, req.Send()
}

// ListResourcesWithContext is the same as ListResources with the addition of
// the ability to pass a context and additional request options.
//
// See ListResources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) ListResourcesWithContext(ctx byteplus.Context, input *ListResourcesInput, opts ...request.Option) (*ListResourcesOutput, error) {
	req, out := c.ListResourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfigurationForListResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Git *GitForListResourcesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ConfigurationForListResourcesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigurationForListResourcesOutput) GoString() string {
	return s.String()
}

// SetGit sets the Git field's value.
func (s *ConfigurationForListResourcesOutput) SetGit(v *GitForListResourcesOutput) *ConfigurationForListResourcesOutput {
	s.Git = v
	return s
}

type CreatorForListResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *int64 `type:"int64" json:",omitempty"`

	UserId *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CreatorForListResourcesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatorForListResourcesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *CreatorForListResourcesOutput) SetAccountId(v int64) *CreatorForListResourcesOutput {
	s.AccountId = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *CreatorForListResourcesOutput) SetUserId(v int64) *CreatorForListResourcesOutput {
	s.UserId = &v
	return s
}

type FilterForListResourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Types []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListResourcesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListResourcesInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *FilterForListResourcesInput) SetIds(v []*string) *FilterForListResourcesInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListResourcesInput) SetName(v string) *FilterForListResourcesInput {
	s.Name = &v
	return s
}

// SetTypes sets the Types field's value.
func (s *FilterForListResourcesInput) SetTypes(v []*string) *FilterForListResourcesInput {
	s.Types = v
	return s
}

type GitForListResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	CloneDepth *int64 `type:"int64" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`

	UserToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GitForListResourcesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s GitForListResourcesOutput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *GitForListResourcesOutput) SetAccessKey(v string) *GitForListResourcesOutput {
	s.AccessKey = &v
	return s
}

// SetCloneDepth sets the CloneDepth field's value.
func (s *GitForListResourcesOutput) SetCloneDepth(v int64) *GitForListResourcesOutput {
	s.CloneDepth = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *GitForListResourcesOutput) SetPassword(v string) *GitForListResourcesOutput {
	s.Password = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *GitForListResourcesOutput) SetSecretKey(v string) *GitForListResourcesOutput {
	s.SecretKey = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *GitForListResourcesOutput) SetUrl(v string) *GitForListResourcesOutput {
	s.Url = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *GitForListResourcesOutput) SetUserName(v string) *GitForListResourcesOutput {
	s.UserName = &v
	return s
}

// SetUserToken sets the UserToken field's value.
func (s *GitForListResourcesOutput) SetUserToken(v string) *GitForListResourcesOutput {
	s.UserToken = &v
	return s
}

type ItemForListResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Configuration *ConfigurationForListResourcesOutput `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Creator *CreatorForListResourcesOutput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListResourcesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListResourcesOutput) GoString() string {
	return s.String()
}

// SetConfiguration sets the Configuration field's value.
func (s *ItemForListResourcesOutput) SetConfiguration(v *ConfigurationForListResourcesOutput) *ItemForListResourcesOutput {
	s.Configuration = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListResourcesOutput) SetCreateTime(v string) *ItemForListResourcesOutput {
	s.CreateTime = &v
	return s
}

// SetCreator sets the Creator field's value.
func (s *ItemForListResourcesOutput) SetCreator(v *CreatorForListResourcesOutput) *ItemForListResourcesOutput {
	s.Creator = v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListResourcesOutput) SetDescription(v string) *ItemForListResourcesOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListResourcesOutput) SetId(v string) *ItemForListResourcesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListResourcesOutput) SetName(v string) *ItemForListResourcesOutput {
	s.Name = &v
	return s
}

// SetType sets the Type field's value.
func (s *ItemForListResourcesOutput) SetType(v string) *ItemForListResourcesOutput {
	s.Type = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListResourcesOutput) SetUpdateTime(v string) *ItemForListResourcesOutput {
	s.UpdateTime = &v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *ItemForListResourcesOutput) SetWorkspaceId(v string) *ItemForListResourcesOutput {
	s.WorkspaceId = &v
	return s
}

type ListResourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListResourcesInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	// WorkspaceId is a required field
	WorkspaceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListResourcesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListResourcesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListResourcesInput"}
	if s.WorkspaceId == nil {
		invalidParams.Add(request.NewErrParamRequired("WorkspaceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListResourcesInput) SetFilter(v *FilterForListResourcesInput) *ListResourcesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListResourcesInput) SetPageNumber(v int64) *ListResourcesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResourcesInput) SetPageSize(v int64) *ListResourcesInput {
	s.PageSize = &v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *ListResourcesInput) SetWorkspaceId(v string) *ListResourcesInput {
	s.WorkspaceId = &v
	return s
}

type ListResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListResourcesOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListResourcesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListResourcesOutput) SetItems(v []*ItemForListResourcesOutput) *ListResourcesOutput {
	s.Items = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListResourcesOutput) SetPageNumber(v int64) *ListResourcesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResourcesOutput) SetPageSize(v int64) *ListResourcesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListResourcesOutput) SetTotalCount(v int64) *ListResourcesOutput {
	s.TotalCount = &v
	return s
}
