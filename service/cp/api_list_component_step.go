// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cp

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListComponentStepCommon = "ListComponentStep"

// ListComponentStepCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListComponentStepCommon operation. The "output" return
// value will be populated with the ListComponentStepCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListComponentStepCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListComponentStepCommon Send returns without error.
//
// See ListComponentStepCommon for more information on using the ListComponentStepCommon
// API call, and error handling.
//
//    // Example sending a request using the ListComponentStepCommonRequest method.
//    req, resp := client.ListComponentStepCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) ListComponentStepCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListComponentStepCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListComponentStepCommon API operation for CP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for CP's
// API operation ListComponentStepCommon for usage and error information.
func (c *CP) ListComponentStepCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListComponentStepCommonRequest(input)
	return out, req.Send()
}

// ListComponentStepCommonWithContext is the same as ListComponentStepCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListComponentStepCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) ListComponentStepCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListComponentStepCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListComponentStep = "ListComponentStep"

// ListComponentStepRequest generates a "byteplus/request.Request" representing the
// client's request for the ListComponentStep operation. The "output" return
// value will be populated with the ListComponentStepCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListComponentStepCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListComponentStepCommon Send returns without error.
//
// See ListComponentStep for more information on using the ListComponentStep
// API call, and error handling.
//
//    // Example sending a request using the ListComponentStepRequest method.
//    req, resp := client.ListComponentStepRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) ListComponentStepRequest(input *ListComponentStepInput) (req *request.Request, output *ListComponentStepOutput) {
	op := &request.Operation{
		Name:       opListComponentStep,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListComponentStepInput{}
	}

	output = &ListComponentStepOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListComponentStep API operation for CP.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for CP's
// API operation ListComponentStep for usage and error information.
func (c *CP) ListComponentStep(input *ListComponentStepInput) (*ListComponentStepOutput, error) {
	req, out := c.ListComponentStepRequest(input)
	return out, req.Send()
}

// ListComponentStepWithContext is the same as ListComponentStep with the addition of
// the ability to pass a context and additional request options.
//
// See ListComponentStep for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) ListComponentStepWithContext(ctx byteplus.Context, input *ListComponentStepInput, opts ...request.Option) (*ListComponentStepOutput, error) {
	req, out := c.ListComponentStepRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatorForListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *int64 `type:"int64" json:",omitempty"`

	UserId *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CreatorForListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatorForListComponentStepOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *CreatorForListComponentStepOutput) SetAccountId(v int64) *CreatorForListComponentStepOutput {
	s.AccountId = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *CreatorForListComponentStepOutput) SetUserId(v int64) *CreatorForListComponentStepOutput {
	s.UserId = &v
	return s
}

type DataSourceForListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Value []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DataSourceForListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DataSourceForListComponentStepOutput) GoString() string {
	return s.String()
}

// SetType sets the Type field's value.
func (s *DataSourceForListComponentStepOutput) SetType(v string) *DataSourceForListComponentStepOutput {
	s.Type = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DataSourceForListComponentStepOutput) SetValue(v []*string) *DataSourceForListComponentStepOutput {
	s.Value = v
	return s
}

type FilterForListComponentStepInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	IsBuiltin *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListComponentStepInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListComponentStepInput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *FilterForListComponentStepInput) SetCategory(v string) *FilterForListComponentStepInput {
	s.Category = &v
	return s
}

// SetIsBuiltin sets the IsBuiltin field's value.
func (s *FilterForListComponentStepInput) SetIsBuiltin(v bool) *FilterForListComponentStepInput {
	s.IsBuiltin = &v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListComponentStepInput) SetName(v string) *FilterForListComponentStepInput {
	s.Name = &v
	return s
}

type InputForListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DisplayName *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Required *bool `type:"boolean" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	UiConfig *UiConfigForListComponentStepOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s InputForListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s InputForListComponentStepOutput) GoString() string {
	return s.String()
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *InputForListComponentStepOutput) SetDefaultValue(v string) *InputForListComponentStepOutput {
	s.DefaultValue = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *InputForListComponentStepOutput) SetDescription(v string) *InputForListComponentStepOutput {
	s.Description = &v
	return s
}

// SetDisplayName sets the DisplayName field's value.
func (s *InputForListComponentStepOutput) SetDisplayName(v string) *InputForListComponentStepOutput {
	s.DisplayName = &v
	return s
}

// SetName sets the Name field's value.
func (s *InputForListComponentStepOutput) SetName(v string) *InputForListComponentStepOutput {
	s.Name = &v
	return s
}

// SetRequired sets the Required field's value.
func (s *InputForListComponentStepOutput) SetRequired(v bool) *InputForListComponentStepOutput {
	s.Required = &v
	return s
}

// SetType sets the Type field's value.
func (s *InputForListComponentStepOutput) SetType(v string) *InputForListComponentStepOutput {
	s.Type = &v
	return s
}

// SetUiConfig sets the UiConfig field's value.
func (s *InputForListComponentStepOutput) SetUiConfig(v *UiConfigForListComponentStepOutput) *InputForListComponentStepOutput {
	s.UiConfig = v
	return s
}

type ItemForListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Creator *CreatorForListComponentStepOutput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DisplayName *string `type:"string" json:",omitempty"`

	Identifier *string `type:"string" json:",omitempty"`

	Image *string `type:"string" json:",omitempty"`

	Inputs []*InputForListComponentStepOutput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Outputs []*OutputForListComponentStepOutput `type:"list" json:",omitempty"`

	Script *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	WorkingDirectory *string `type:"string" json:",omitempty"`

	Yaml *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListComponentStepOutput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *ItemForListComponentStepOutput) SetCategory(v string) *ItemForListComponentStepOutput {
	s.Category = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListComponentStepOutput) SetCreateTime(v string) *ItemForListComponentStepOutput {
	s.CreateTime = &v
	return s
}

// SetCreator sets the Creator field's value.
func (s *ItemForListComponentStepOutput) SetCreator(v *CreatorForListComponentStepOutput) *ItemForListComponentStepOutput {
	s.Creator = v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListComponentStepOutput) SetDescription(v string) *ItemForListComponentStepOutput {
	s.Description = &v
	return s
}

// SetDisplayName sets the DisplayName field's value.
func (s *ItemForListComponentStepOutput) SetDisplayName(v string) *ItemForListComponentStepOutput {
	s.DisplayName = &v
	return s
}

// SetIdentifier sets the Identifier field's value.
func (s *ItemForListComponentStepOutput) SetIdentifier(v string) *ItemForListComponentStepOutput {
	s.Identifier = &v
	return s
}

// SetImage sets the Image field's value.
func (s *ItemForListComponentStepOutput) SetImage(v string) *ItemForListComponentStepOutput {
	s.Image = &v
	return s
}

// SetInputs sets the Inputs field's value.
func (s *ItemForListComponentStepOutput) SetInputs(v []*InputForListComponentStepOutput) *ItemForListComponentStepOutput {
	s.Inputs = v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListComponentStepOutput) SetName(v string) *ItemForListComponentStepOutput {
	s.Name = &v
	return s
}

// SetOutputs sets the Outputs field's value.
func (s *ItemForListComponentStepOutput) SetOutputs(v []*OutputForListComponentStepOutput) *ItemForListComponentStepOutput {
	s.Outputs = v
	return s
}

// SetScript sets the Script field's value.
func (s *ItemForListComponentStepOutput) SetScript(v string) *ItemForListComponentStepOutput {
	s.Script = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListComponentStepOutput) SetUpdateTime(v string) *ItemForListComponentStepOutput {
	s.UpdateTime = &v
	return s
}

// SetWorkingDirectory sets the WorkingDirectory field's value.
func (s *ItemForListComponentStepOutput) SetWorkingDirectory(v string) *ItemForListComponentStepOutput {
	s.WorkingDirectory = &v
	return s
}

// SetYaml sets the Yaml field's value.
func (s *ItemForListComponentStepOutput) SetYaml(v string) *ItemForListComponentStepOutput {
	s.Yaml = &v
	return s
}

type ListComponentStepInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListComponentStepInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListComponentStepInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListComponentStepInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListComponentStepInput) SetFilter(v *FilterForListComponentStepInput) *ListComponentStepInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListComponentStepInput) SetPageNumber(v int64) *ListComponentStepInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListComponentStepInput) SetPageSize(v int64) *ListComponentStepInput {
	s.PageSize = &v
	return s
}

type ListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListComponentStepOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListComponentStepOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListComponentStepOutput) SetItems(v []*ItemForListComponentStepOutput) *ListComponentStepOutput {
	s.Items = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListComponentStepOutput) SetPageNumber(v int64) *ListComponentStepOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListComponentStepOutput) SetPageSize(v int64) *ListComponentStepOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListComponentStepOutput) SetTotalCount(v int64) *ListComponentStepOutput {
	s.TotalCount = &v
	return s
}

type OutputForListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DisplayName *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OutputForListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s OutputForListComponentStepOutput) GoString() string {
	return s.String()
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *OutputForListComponentStepOutput) SetDefaultValue(v string) *OutputForListComponentStepOutput {
	s.DefaultValue = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *OutputForListComponentStepOutput) SetDescription(v string) *OutputForListComponentStepOutput {
	s.Description = &v
	return s
}

// SetDisplayName sets the DisplayName field's value.
func (s *OutputForListComponentStepOutput) SetDisplayName(v string) *OutputForListComponentStepOutput {
	s.DisplayName = &v
	return s
}

// SetName sets the Name field's value.
func (s *OutputForListComponentStepOutput) SetName(v string) *OutputForListComponentStepOutput {
	s.Name = &v
	return s
}

// SetType sets the Type field's value.
func (s *OutputForListComponentStepOutput) SetType(v string) *OutputForListComponentStepOutput {
	s.Type = &v
	return s
}

type UiConfigForListComponentStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DataSource *DataSourceForListComponentStepOutput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	ValidateRule []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UiConfigForListComponentStepOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s UiConfigForListComponentStepOutput) GoString() string {
	return s.String()
}

// SetDataSource sets the DataSource field's value.
func (s *UiConfigForListComponentStepOutput) SetDataSource(v *DataSourceForListComponentStepOutput) *UiConfigForListComponentStepOutput {
	s.DataSource = v
	return s
}

// SetType sets the Type field's value.
func (s *UiConfigForListComponentStepOutput) SetType(v string) *UiConfigForListComponentStepOutput {
	s.Type = &v
	return s
}

// SetValidateRule sets the ValidateRule field's value.
func (s *UiConfigForListComponentStepOutput) SetValidateRule(v []*string) *UiConfigForListComponentStepOutput {
	s.ValidateRule = v
	return s
}
